package com.finalhack.javainfo;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;

import android.content.Context;
import android.content.SharedPreferences;

public class QuestionUtil {
    
    public static String CURRENT_QUESTION_ID = null;
    public static int totalQuestions = 0;


    private static final String STARRED_QUESTIONS = "*Starred Questions";
    //These constants are used for parsing raw questions
	private static final int INDEX_ANSWER = 3;
	private static final int INDEX_QUESTION = 2;
	private static final int INDEX_SUBJECT = 1;
	private static final int INDEX_INDEX = 0;

	//Start with a space so it will be first in the list when sorted
	public static String ALL_QUESTIONS = "*All";
	
    public static List<String> getSubjectList(List<String> rawQuestions)
    {
        Set<String> subjectSet = new TreeSet<String>();
        
        // For each raw question, parse it and categorize it
        for (String rawQuestion : rawQuestions)
        {
            // There should be three parts (subject, question, and answer)
            String[] questionParts = rawQuestion.split("~");
            // If there are not three parts, skip that question
            if (questionParts.length < 3) continue;

            String subject = questionParts[INDEX_SUBJECT];

            //Add each subject to a set to keep uniquness in subjects
            subjectSet.add(subject);
        }

        //Loop through all the unique subjects, adding them to a list
        List<String> subjectList = new ArrayList<String>();
        for (String subject : subjectSet) subjectList.add(subject);
        
        Collections.sort(subjectList, new Comparator<String>() {

            @Override
            public int compare(String lhs, String rhs)
            {
                return lhs.compareToIgnoreCase(rhs);
            }
            
        });
        
        subjectList.add(0, ALL_QUESTIONS);
        subjectList.add(0, STARRED_QUESTIONS);
        
        return subjectList;
    }

    public static List<Question> getQuestionList(List<String> rawQuestions, String requestedSubject, Context context)
    {
        List<Question> questionList = new ArrayList<Question>();
        
        // For each raw question, parse it and categorize it
        for (String rawQuestion : rawQuestions)
        {
            
            // There should be three parts (subject, question, and answer)
            String[] questionParts = rawQuestion.split("~");
            // If there are not three parts, skip that question
            if (questionParts.length < 3)
                continue;

            String subject = questionParts[INDEX_SUBJECT];
            String question = questionParts[INDEX_QUESTION];
            String answer = questionParts[INDEX_ANSWER];
            String index = questionParts[INDEX_INDEX];

            SharedPreferences sharedPreferences = context.getSharedPreferences(QuestionAnswerActivity.SHARED_PREFS_LOCATION, Context.MODE_PRIVATE);
            String starredQuestionIdList = sharedPreferences.getString(QuestionAnswerActivity.SHARED_PREFS_STARRED, "");
            
            String[] startQuestionIds = starredQuestionIdList.split(QuestionAnswerActivity.STARRED_QUESTION_DELIMITER);
            List<String> startQuestionIdsList = new ArrayList<String>();
            for (String id : startQuestionIds) startQuestionIdsList.add(id);
            
            //Save the question if we're either:
            //0 - adding starred questions
            // or
            //1 - adding all questions
            // or
            //2 - adding a question that is the right subject
            if (requestedSubject.equals(STARRED_QUESTIONS) && startQuestionIdsList.contains(index)) questionList.add(new Question(subject + ": " + question, answer, subject, index));
            else if (requestedSubject.equals(ALL_QUESTIONS)) questionList.add(new Question(subject + ": " + question, answer, subject, index));
            else if (subject.equals(requestedSubject)) questionList.add(new Question(question, answer, subject, index));
        }

        return questionList;
    }
	
	//Load all questions into their own parsed subject lists
	//These raw questions are in HTML for code formatting reasons, and came from a flat file
	//The command line to generate this block is:
	//  cat sss | sed -e 's/"/\\"/g' | awk '{print "rawQuestions.add(\"" $0 "\");" }' > rawQuestions
	public static List<String> getQuestionList()
	{
		
		List<String> rawQuestions = new ArrayList<String>();
		rawQuestions.add("0~Annotations~Can you apply an annotation to itself?~Yes.<br>The @Documented annotation has been applied to itself.<br>This annotation can only be used on annotations");
		rawQuestions.add("1~Annotations~Can you have multiple annotations on an item?~Yes.<br>As long as they are not the same annotation");
		rawQuestions.add("2~Annotations~How can you guarantee that you are overriding a method that exists in a superclass?~Use the @Override annotation.<br>Place it right before the visibility modifier.<br>Ex: @Override public boolean equals(Object other)");
		rawQuestions.add("3~Annotations~How do you use the @Target annotation?~@Target is used when implementing an annotation.<br>It's parameters designate which things can be annotated by it.<br>The possible values are :<br>ANNOTATION_TYPE, PACKAGE,<br>TYPE,<br>METHOD,<br>CONSTRUCTOR,<br>FIELD,<br>PARAMETER,<br>LOCAL_VARIABLE.<br>TYPE means Classes and interfaces (including enums).<br>They are constants of the ElementType class.<br>You do not have to include a @Target annotation.<br>In this case, the annotation will be able to be used on anything");
		rawQuestions.add("4~Annotations~What can you annotate?~Packages,<br>classes,<br>enums,<br>interfaces,<br>methods,<br>fields,<br>local variables,<br>consructors,<br>parameter variables,<br>and annotations");
		rawQuestions.add("5~Annotations~What is the @Documented annotation?~It specifies whether to include the annotations in generated javadocs.<br>This annotation can only be used on annotations");
		rawQuestions.add("6~Annotations~What is the @Inherited annotation?~It can be used on annotations so that the annotation will not only apply to the initial class, but to all subcalsses.<br>Each time the user queries for annotations, the query will crawl from subclass to superclass up to Object to see what is inherited, if any");
		rawQuestions.add("7~Annotations~What is the @Retention annotation?~It specifies what has access to the annotation.<br>The options are<br>SOURCE(not included in class files),<br>CLASS(included in class files but not loaded in the vm),<br>and RUNTIME(included in class files and loaded in the vm).<br>The constants are part of the java.lang.annotation.RetentionPolicy class, and the default is CLASS");
		rawQuestions.add("8~Annotations~How do you create a new annotation?~You create a file with the annotation name .java<br><br>Example:<br>public @interface MyNewAnnotation {<br>&nbsp;&nbsp;int id();<br>&nbsp;&nbsp;String stateAbbreviation();<br>&nbsp;&nbsp;String firstName() default \"[unassigned]\";<br>}<br><br>The 'methods' represent annotation properties.<br>You can have default values using the 'default' syntax.<br>If you only have one property, it should be named value(). This will allow you to use the annotation more easily because you don't have to specify @Annotation(propertyName=\"propertyValue\"), you can say @Annotation(\"propertyValue\"). The quotes are not needed on the value when using the annotation unless the property is a String type.<br>If no properies are defined for an annotation, you don't even need the parentheses like in @Override");
		rawQuestions.add("9~Annotations~What kind of properties can annotations have?~primitives<br>String<br>Class<br>enum<br>Arrays of the above types");
		rawQuestions.add("10~Ant~Can you specify another build file to use other than build.xml?~Yes.<br>Use ant -buildfile, -file, or -f");
		rawQuestions.add("11~Ant~Can you specify more than one target to run?~Yes.<br>Separate the targets to run by spaces.<br>Ex: ant clean compile");
		rawQuestions.add("12~Ant~How can you get a quick list of all the available ant targets and their descriptions?~ant -projecthelp");
		rawQuestions.add("13~Ant~How do you make an ant target?~Create a &lt;target&gt; block that includes some number of tasks.<br>It can have a depends attribute that tells it to run a different target prior to the current target.<br>There can be more than one dependancy separated by commas.<br>&lt;target name=\"compile\" depends=\"init,copy\"&gt;<br>&lt;mkdir dir=\"build/classes\"/&gt;<br>&lt;javac srcdir=\"src\" destdir=\"build/classes\"/&gt;<br>&lt;/target&gt;");
		rawQuestions.add("14~Ant~How do you use properties in ant?~Inside a &lt;project&gt; block, you can inclide &lt;property&gt; elements with the following attributes : name - value (sets one property) ex:&lt;property name=\"name\" value=\"value\"/&gt;.<br>&lt;property file=\"somefile.properties\"/&gt; loads properties from a properties file.<br>&lt;propert environment=\"env\"/&gt; allows you to use ${env.JAVA_HOME} for example.<br>${user.home} or any other Java property is accessible by default");
		rawQuestions.add("15~Ant~What are some ant tasks, and how do you use them?~&lt;echo&gt;message<&lt;echo&gt; or &lt;echo message=\"\"/&gt; echos a message.<br>&lt;tstamp/&gt; sets ${DSTAMP}, ${TSTAMP}, and ${TODAY} and can be used in conjunction with a nested &lt;format&gt; element with property and pattern elements.<br>&lt;mkdir dir=\"asdf1/asdf2/asdf3\"/&gt; where a asdf3 is created as well as asdf1 and asdf2 if they do not exist.<br>The &lt;copy&gt; and &lt;delete&gt; tasks can either use dir and file attributes, or they can be blocks with clild &lt;fileset&gt; elements.<br>&lt;javac&gt; can include attributes such as srcdir, classpath, destdir, debug, verbose, listfiles, and can include a child &lt;classpath&gt; block that has &lt;pathelement location=\"\"&gt; elements.<br>&lt;jar&gt; and &lt;manifest&gt; are useful for creating jar and war files.<br>These tasks are elements of a target");
		rawQuestions.add("16~Ant~What do you need in a build.xml file?~You need a &lt;project&gt; block with at least a default attribute that specifies the default target to run, and optional name and basedir attributes to specify a name and base directory to derive relative paths from.<br>Inside the &lt;project&gt; block, you have &lt;target&gt; blocks.<br>Ex:<br>&lt;project name=\"MyProject\" default=\"dist\" basedir=\".\"&gt;&nbsp;&nbsp;...target blocks...&lt;/project&gt;");
		rawQuestions.add("17~Ant~What initial setup is required to get ant running?~Set JAVA_HOME, set ANT_HOME, and include ANT_HOME/bin in your path");
		rawQuestions.add("18~Ant~What is the &lt;fileset&gt; block?~It can describe a group of files by giving a base directory, and include/exclude statements. A ** wildcard can be used to specify whether to include files in sub directories.<br>Ex:<br>&lt;copy todir=\"../destdir\"&gt;<br>&lt;fileset dir=\".\"&gt;<br>&lt;include name=\"**/*.java\"/&gt;<br>&lt;/fileset&gt;<br>&lt;/copy&gt;");
		rawQuestions.add("19~API~Are there any special cases where the getName() method of Class will return unexpected results?~Yes.<br>With Array types it can return \"[I\" or \"[Ljava.lang.Double\" for int[] and Double[]");
		rawQuestions.add("20~API~Are there multiple ways to comment in a property file?~Yes. Both '#' and '!' work");
		rawQuestions.add("21~API~Are there multiple ways to indicate assignment in a property file?~Yes. Both '=' and ':' work.<br>You cannot have parts of a key in a properties file seperated by a space, because it can treat the space as a delimeter between the key and value");
		rawQuestions.add("22~API~Can Scanner, StringTokenizer, and String.split() use regular expressions?~Yes.<br>StringTokenizer is somewhat obsolete now that String.split() can use regex");
		rawQuestions.add("23~API~Can you get a Class object from primitives?~Yes.<br>Ex: int.class");
		rawQuestions.add("24~API~Can you use newline characters etc in property names/values if you are adding them manually by using &lt;Enter&gt;?~No.<br>They get written to the properties file as actual new lines and then interpreted on load to separate value pairs unless you end a value with a '' (backslash), then the value can span multiple lines");
		rawQuestions.add("25~API~Can you use the ':', '#', '!', or '=' characters in property names or values?~Yes.<br>he store/load will auto escape/unescape them.<br>You can also escape them yourself with a '' (backslash)");
		rawQuestions.add("26~API~Do all primitive wrapper classes have the same names as their primitives?~No.<br>Character and Integer are spelled out");
		rawQuestions.add("27~API~Does pre allocation of an ArrayList affect the .size() call?~No");
		rawQuestions.add("28~API~How can you copy an array?~System.arrayCopy(srcObj, srcPos, destObj, destPos, len);");
		rawQuestions.add("29~API~How can you do a specific initial allocation on an ArrayList to prevent initial expanding and copying?~ArrayList a = new ArrayList(x);<br>or<br>a.ensureCapacity(x);");
		rawQuestions.add("30~API~How can you find out what the end of line character is?~System.getProperty(\"line.separator\");<br>This returns a string such as lf, cr, crlf, etc.");
		rawQuestions.add("31~API~How can you find out what the file path separation character is?~File.separator. File is found in java.io");
		rawQuestions.add("32~API~How can you get a Class object representing something specific?~Use the .getClass() method on an instantiated object,<br>Class.forName(\"class name goes here ex: java.util.Date\"),<br>or Date.class");
		rawQuestions.add("33~API~How can you get a stack trace in code?~Use :<br>StackTraceElement[] ste = &lt;Some Throwable&gt;.getStackTrace();<br>or<br>Map&lt;Thread, StackTraceElement[]&gt; m = Thread.getAllStackTraces();");
		rawQuestions.add("34~API~How do you compare strings?~With .equals(), not with ==");
		rawQuestions.add("35~API~How do you use regular expressions in Java?~Pattern p = Pattern.compile(&lt;some regex string&gt;);<br>Matcher m = p.matcher(&lt;some string to search&gt;);<br>while(m.find())<br>{<br>//get the start index and value that was matched with m.start() and m.group()<br>int startIndex = m.start();<br>String s = m.group();<br>}");
		rawQuestions.add("36~API~How do you use the Preferences API?~Preferences p = Preferences.userRoot();<br>//Use a package namespace so to speak<br>p = p.userNodeForPackage(\"/com/blah/blah\");<br>p.put(&lt;name&gt;,&lt;value&gt;);<br>p.get(&lt;name&gt;,&lt;default&gt;);<br>Results are stored/loaded to/from a platform specific location like the registry or a .dir in a home directory");
		rawQuestions.add("37~API~If Arrays.binarySearch() returns a negative number, what does that mean?~That the thing you are looking for was not found and that if you insert it at <br>(-(return val))-1<br>That is where you could insert it to keep the Array sorted");
		rawQuestions.add("38~API~Is concatenating an object to a String with '+' the same as adding the result of toString() to that String?~Yes");
		rawQuestions.add("39~API~Is StringBuffer/StringBuilder's equals() method overridden to correctly compare values?~No.<br>It uses Object's .equals() method to compare memory addreses");
		rawQuestions.add("40~API~Is there an easy way to format numbers and dates?~Yes, use the String.format() method.<br>Ex: String.format(\"Hi, %s. You are %d years old!\", name, age);<br>There are MANY formatter characters. For a list, see java.util.Formatter's javadoc details");
		rawQuestions.add("41~API~Is there anything non intuitive about Properties?~Yes. The main thing is that in some versions of java, size() returns only the size of the non-default values");
		rawQuestions.add("42~API~Is there anyway to dump the call stack to the console?~Yes. Thread.dumpStack();");
		rawQuestions.add("43~API~Is there generally a standard form of output from toString()?~Yes.<br>The class name, followed by it's field values enclosed in square brackets.<br>Ex: MyClass[a=4, b=5]");
		rawQuestions.add("44~API~Should you use the get() method of Properties?~No. You should probably use getProperty instead of get. Get will ignore default values and return null if no non-default value is set");
		rawQuestions.add("45~API~Should you use the keys() method of Properties?~No. You should probably use propertyNames instead of keys. Keys will ignore default values");
		rawQuestions.add("46~API~What are the parameters in String.substring()?~There are two.<br>The first is the starting index to grab and the second param is the first index that you do not want to copy");
		rawQuestions.add("47~API~What arrays can you sort using Arrays.sort()?~byte, int, souble, float, long, and anything that you can and do use the Comparable interface with");
		rawQuestions.add("48~API~What connection exists between equals() and hashcode()?~They are often used together in collections to search and store objects.<br>Usually if you override the equals() method, you should override the hashcode() method.<br>This is because they have a joint contract that says if two objects are equal, they must have the same hashcode.<br>The reverse may not be true (Just because two objects have the same hash code, it does not mean they are equal)");
		rawQuestions.add("49~API~What does the roll() method of a Calendar do?~It allows adding or subtracting of date parts without affecting other date parts<br>Ex: Dec 31, 2000 11PM + 1 Hour (cal.roll(HOUR,1)= Dec 31, 2000 12AM)");
		rawQuestions.add("50~API~What is a java Proxy and why would you use one?~It is really just a proxy, meaning that usually it will be a transparent version of the object it is a proxy for, but can add or remove extra functionality without changing code. It can be transparent to the object it is proxying, but does need a bit of code to use the proxy. Some use examples are logging, and remote method calling.<br>Keep in mind that there are actually three ways to use a 'proxy'.<br><br>1 - First is via some generic interface that the original object and the proxy object both implement. The proxy object just stores a reference to the real object and can call it's methods.<br>2 - Second, the decorator pattern is like the proxy pattern, they just have different uses. Adding functionality vs access control is an example.<br>3 - Third is the dynamic proxy. The benifit of the dynamic proxy using Java's InvocationHandler, is that it can be reused on any class because it is dynamic and it builds a proxy... dynamically at runtime instead of at compile time");
		rawQuestions.add("51~API~What is required to add a dynamic proxy?~You need to setup three things.<br>First, you need to  setup a class that implements InvocationHandler, specifically the invoke method.<br>Second you need to create an instance of that handler class by creating it and making a InvocationHandler point to it.<br>Third, you create an actual proxy object with the call Proxy.newProxyInstance(), passing it the object you want to wrap(proxy for).<br><br>Example :<br>public class Car implements IVehicle {<br>&nbsp;&nbsp;public void go() {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"Car going\");   <br>&nbsp;&nbsp;}<br>}<br><br>import java.lang.reflect.*;<br>public class GenericDynamicProxy implements InvocationHandler {<br>&nbsp;&nbsp;private Object target;<br>&nbsp;&nbsp;public GenericDynamicProxy(Object target) {this.target = target;}<br>&nbsp;&nbsp;public Object invoke(Object proxy, Method m, Object[] args) throws Throwable {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"GenericDynamicProxy Log entry: Invoking \" + m.getName());<br>&nbsp;&nbsp;&nbsp;&nbsp;return m.invoke(target, args);<br>&nbsp;&nbsp;}<br>}<br><br>import java.lang.reflect.*;<br>public class VehicleTester {<br>&nbsp;&nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp;&nbsp;&nbsp;IVehicle c = new Car(\"Porche\");<br>&nbsp;&nbsp;&nbsp;&nbsp;ClassLoader cl = IVehicle.class.getClassLoader();<br>&nbsp;&nbsp;&nbsp;&nbsp;IVehicle v = (IVehicle) Proxy.newProxyInstance(cl,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new Class[] {IVehicle.class}, new GenericDynamicProxy(c));<br>&nbsp;&nbsp;&nbsp;&nbsp;v.go();<br>&nbsp;&nbsp;}<br>}");
		rawQuestions.add("52~API~What is the benifit of using the Preferences API over the Properties API?~The Preferences API handles storage better across platforms of properties automatically (ex: registry for windows, home dir for linux etc.).<br>Data can also be imported/exported to/from xml as an automatic serialization option");
		rawQuestions.add("53~API~What is the difference between StringBuilder and StringBuffer, and why would you want to use them?~StringBuilder is not thread safe, while StringBuffer is.<br>You would want to use them when you are doing a lot of concatenation so you are not creating a new string each time. StringBuilder was added in java 1.5");
		rawQuestions.add("54~API~When specifying an index for formatting a string, number or date, are there any special considerations you need to remember?~Yes.<br>The indexes are 1 based, not 0 based");
		rawQuestions.add("55~API~When you use toString() on an object and it has not been overridden since Object, what does it print?~The class name, an @ sign, and the object's hash code");
		rawQuestions.add("56~API~Will a '#' in the middle of a name or value truncate that name or value (acting like a comment) with respect to property files?~No");
		rawQuestions.add("57~API~What is a Class object used for?~You can get the name of a class, or the name of it's superclass.<br>Ex: String s = c.getName();<br>or<br>Class s = c.getSuperclass();");
		rawQuestions.add("58~API~What is the difference between foo.class and Foo.getClass()?~Nothing, if foo and Foo are the same type.<br>They both return Class objects representing the class structure");
		rawQuestions.add("59~API~What members/methods does the System class have?~in<br>err<br>out<br>currentTimeMillis()<br>getProperty()<br>identifyHashCode() which gets the original object hashcode<br>loadLibrary()<br>setSecurityManager<br>and much much more!");
		rawQuestions.add("60~Applets/Web Start~Can different applets communicate with each other, if so, how?~Yes. If they are in the same codeBase directory, you can call getAppletContext().getApplet(&lt;name of applet set in html file&gt;); After this, you can cast it to an object of the same type that the applet is and then use it to call methods");
		rawQuestions.add("61~Applets/Web Start~Can you override the default applet security, if so how?~Yes, by using a signed applet");
		rawQuestions.add("62~Applets/Web Start~How do you enable the Java console?~Run the ControlPanel application that is found in the jre's bin directory");
		rawQuestions.add("63~Applets/Web Start~If you are using an applet in a browser and you recompile it's class files, do you need to do anything to see the changes?~Yes. You must either restart the browser, or clear the class loader cache in the java console and refresh the page");
		rawQuestions.add("64~Applets/Web Start~Is there any way for html/javascript to communicate with an applet?~Yes. You can use the name attribute of the applet tag to create a javascript variable and call methods on the applet. You can also use param tags inside of the applet tags to pass parameters that are retrievable in an applet's init method.<br>Javascript Example: &lt;APPLET code=\"A.class\" name=\"myname\"/&gt;&lt;SCRIPT&gt;var a = myname.someMethod();&lt;/SCRIPT&gt;");
		rawQuestions.add("65~Applets/Web Start~Usually, what are the two things you need to do to convert a Swing app to an applet?~Have the app extend JApplet because otherwise it will get a class cast exception, and remove the call to setDefaultCloseOperation() because that is a security violation and will throw an exception");
		rawQuestions.add("66~Applets/Web Start~What are the minimum steps that must be taken to create an applet?~Extend JApplet(Swing) or Applet(AWT) and create html code such as<br>&lt;APPLET CODE=\"A.class\" WIDTH=600 HEIGHT=500 archive=\"A.jar\"/&gt;<br>where the archive attribute is optional");
		rawQuestions.add("67~Applets/Web Start~What default security limitations do applets have?~They cannot run any local executable program, they cannot connect to a server other than the originating host, they cannot read or write to the user's filesystem, they cannot find out any local info besides type of OS(along with all appropriate slashes etc. for the OS) and Java version, all windows that popup from an applet carry a warning message, or exit the VM");
		rawQuestions.add("68~Collections~Are enum values case sensitive?~Yes");
		rawQuestions.add("69~Collections~Can enums extend a class?~No.<br>They already implicitly extend java.lang.Enum.");
		rawQuestions.add("70~Collections~Can an enum that is declared inside a class be private or protected?~No. It can be public or default(package)");
		rawQuestions.add("71~Collections~Can enum constructors be public?~No, they must be private");
		rawQuestions.add("72~Collections~In terms of structure, can enums have anything besides the actual types that they can be set to?~Yes.<br>They can have constructors, variables, methods, and a constant specific class body");
		rawQuestions.add("73~Collections~Can you call remove() on an iterator without calling next() or previous()?~No.<br>Every remove() call must be preceded by a call to either a next() or previous() call that returned something");
		rawQuestions.add("74~Collections~Can you control the load factor of a HashSet?~Yes.<br>You can specify one in the constructor, along with it's initial capacity");
		rawQuestions.add("75~Collections~Can you convert a string representation of an enum value to an enum that is set to that value?~Yes.<br>Ex: Size s = Enum.valueOf(Size.class, \"SMALL\");");
		rawQuestions.add("76~Collections~Can you easily reverse a list sort?~Yes.<br>Use Collections.sort(someList, Collections.reverseOrder()); You can also pass your own java.util.Comparator to reverseOrder()");
		rawQuestions.add("77~Collections~Can you get an array of all the possible enum values?~Yes.<br>Ex: Size[] values = Size.values();");
		rawQuestions.add("78~Collections~Can you define an enum in a method?~No");
		rawQuestions.add("79~Collections~Can you shuffle things in a collection?~Yes.<br>Use Collections.shuffle()");
		rawQuestions.add("80~Collections~Out of Sets, Maps, and Lists, which are Collections (Implement the java.util.Collection interface)?~Sets and Lists.<br>Some older objects like Vector are also Collections");
		rawQuestions.add("81~Collections~Can you turn an Array into a List without looping through each element to add it?~Yes. Use Arrays.asList()");
		rawQuestions.add("82~Collections~Can you use an iterator over the entrySet() of a Map to add or remove element pairs?~No");
		rawQuestions.add("83~Collections~Can you use an iterator over the key set or value collection of a Map to add and remove elements?~You can remove elements, but not add elements");
		rawQuestions.add("84~Collections~Can you use an Iterator to go back to a previous element?~No.<br>You must use a ListIterator instead of an Iterator. ListIterator adds methods like previous() and set()");
		rawQuestions.add("85~Collections~Can you use one iterator on an object to remove or add things, and another iterator on that same object to traverse it?~Not ususally(You probably shouldn't).<br>You will get a ConcurrentModificationException if you attempt to modify the collection, unless you are modifying it via the ListIterator's set() method");
		rawQuestions.add("86~Collections~Does the remove method of an Iterator remove the next element, or the one just returned by the last  next() call?~It removes the element returned by the last next() call");
		rawQuestions.add("87~Collections~How can you get all the keys from a map?~Set&lt;K&gt; s = map.keySet();<br>for(K i : s)<br>&nbsp;&nbsp;{//use i}");
		rawQuestions.add("88~Collections~How can you get all the key/value pairs from a map?~You can use entrySet() to get a set of Map.Entry&lt;K,V&gt;");
		rawQuestions.add("89~Collections~How can you get all the values from a map?~Collection&lt;K&gt s = map.values();<br>for(K i : s)<br>&nbsp;&nbsp;{//use i}");
		rawQuestions.add("90~Collections~How can you sort elements of a List using built in classes?~Collections.sort(someList);<br>The list must implement the comparable interface. If it does not, you can pass one in as a second parameter");
		rawQuestions.add("91~Collections~How does searching in lists work?~You can do a binary search on a list with Collections.binarySearch(list, element, optionalComparator);<br>If the return is positive, that is the index of the element, if the index is negative, and the return variable is 'i', then -i - 1 is where the element should go if it was to be inserted. This method assumes that the list is sorted");
		rawQuestions.add("92~Collections~How do you declare a basic enum?~public enum SomeEnumName { &lt;comma separated list of possible values&gt; };<br>ex: public enum Size { SMALL, MEDIUM, LARGE };");
		rawQuestions.add("93~Collections~How do you declare a enum with members and constructors?~Declare an enum like you normally would. the rest can be like a normal class with constructors, member variables, methods, etc., but the constructors must be declared private.<br>Example : <br>enum Vehicle {<br>&nbsp;&nbsp;Bike(100), Porche(50), Plane(1000000);<br>&nbsp;&nbsp;int price;<br>&nbsp;&nbsp;Vehicle(int pPrice)<br>&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;this.price = pPrice;<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;int getPrice()<br>&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;return price;<br>&nbsp;&nbsp;<br>}");
		rawQuestions.add("94~Collections~How do you declare and set a normal enum type?~Size s = Size.SMALL;");
		rawQuestions.add("95~Collections~If an enumeration is expected, how can you create one from a collection?~Collections.enumeration(someCollection)");
		rawQuestions.add("96~Collections~If you are worried about a collections being modified, is there any way to make sure a collection is not modified?~Yes. You can wrap it in an unmodifiableList.<br>Ex: List unmodifiable = Collections.unmodifiableList(someList);");
		rawQuestions.add("97~Collections~If you modify a collection in a mutable view(List.subList() for example), are those changes reflected in the actual collection?~Yes");
		rawQuestions.add("98~Collections~If you pre allocated too much in an ArrayList, can you free the excess memory, if so, how?~Yes. Use .trimToSize()");
		rawQuestions.add("99~Collections~If you use the unmodifiableCollection, synchronizedCollection, or checkedCollection are there any gotchas?~Yes. The equals() method is overriden to be Object's equals() method. Note though that the unmodifiableSet and unmodifiableList do not override the equals() method and keep what was passed in");
		rawQuestions.add("100~Collections~What are EnumSet and EnumMap?~They are sets and maps that accommodate the use of enums.<br>The difference between HasnMap and EnumMap is that EnumMap is more specific to enum, and therefore can be more optimized");
		rawQuestions.add("101~Collections~What are views, as far as Collections are concerned?~They are exactly that, a view of the data. There are methods on classes such as Collections, that can create another object containing things from a range or subset of the collection, to immutable versions of collections/objects.");
		rawQuestions.add("102~Collections~What is a constant specific body with respect to enums?~It is a block of code that directly follows an enum value where you can declare methods that are specific to that enum value that override the general methods with the same signature for that enum.<br>You can also shadow variables.<br><br>Example<br>public class EnumTest<br>{<br>&nbsp;&nbsp;enum Vehicle<br>&nbsp;&nbsp;{<br><br>&nbsp;&nbsp;&nbsp;&nbsp;bike(),<br>&nbsp;&nbsp;&nbsp;&nbsp;car()<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int a = 1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void getA()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(a);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;};<br>&nbsp;&nbsp;&nbsp;&nbsp;public int a = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;void getA()<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(a);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;public static void main(String[] args)<br>&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Vehicle v1 = Vehicle.bike;<br>&nbsp;&nbsp;&nbsp;&nbsp;Vehicle v2 = Vehicle.car;<br>&nbsp;&nbsp;&nbsp;&nbsp;v1.getA();<br>&nbsp;&nbsp;&nbsp;&nbsp;v2.getA();<br>&nbsp;&nbsp;&nbsp;&nbsp;//Output is 0 1<br>&nbsp;&nbsp;}<br>}");
		rawQuestions.add("103~Collections~What is a LinkedHashSet/LinkedHashMap?~A HashMap or HashSet that remembers in what order elements were entered.<br>A LinkedHashMap can also use access order for remembering what is new and old ( to implement a LRU cache for example).<br>If you want the oldest entry to be removed, subclass this class, and override public boolean removeEldestEntry(Map.Entry&lt;K,V&gt; eldest) to return true if your conditions are met.<br><br>removedEldestEntry is invoked when put() or putAll() is called");
		rawQuestions.add("104~Collections~What is an IdentityHashMap?~It is a hash map that considers objects equal based on System.identityHashCode() (meaning the memory address) rather than the object's hashCode(). It is used to tell if the object is the actual object, as opposed to another instance of it.<br>In a normal HashMap, it looks at the key and if that key is equal to any other key via .equals(), the original object is overwritten.<br>With an IdentityHashMap, == is used instead of .equals() and so the original object, even if the key is equal to the same thing, is not overwritten");
		rawQuestions.add("105~Collections~What is a PriorityQueue used for?~A PrioirityQueue does not keep all elements added to it sorted. It does, however, keep the smallest element at the top so it is easily accessible.<br>An iterator might go over them in a seemingly random fashion, but getting the next element ( you use the PriorityQueue's remove() method)will always return the smallest one.<br>This order is the 'natural order' unless a Comparator is specified in the constructor");
		rawQuestions.add("106~Collections~What is a WeakHashMap?~It is a hash map who's keys are all WeakReferences.<br>This allows the objects of the keys to be collected if they are only referenced in the Map.<br>This means that the values in the key/value pair in the Map must not reference the key");
		rawQuestions.add("107~Collections~What is the difference between a HashSet and a TreeSet?~A TreeSet is a sorted set which as the name implies, uses a tree to store data instead of buckets.<br>The TreeSet is a little slower than a HashSet, but not by much");
		rawQuestions.add("108~Collections~What is the difference between ArrayLists and Vectors?~Vector methods are synchronized");
		rawQuestions.add("109~Collections~What is the difference between HashSet/TreeSet and HashMap/TreeMap?~The sets only store the objects you put in them, and if sorted, are according to those objects. The maps store both a key and a value(the object), and if sorted, are according to the keys. Sets let you quickly find existing elements, while maps are for when you don't have the actual elements, but you have a key that represents some element you want");
		rawQuestions.add("110~Collections~What is the difference between Hashtable and Hashmap?~Hashtable is synchronized");
		rawQuestions.add("111~Collections~What is the main downside to using ArrayList?~If you insert an element in the middle, or remove an element from the middle, all elements after that index must be moved.<br>The alternative is using a Linked List");
		rawQuestions.add("112~Collections~When converting a collection to an array, should you use the collection's method toArray()?~You should use the toArray() that takes parameters(that tell what type the objects are).<br>Otherwise you will end up with an Object array that will not be able to be set to a different type array");
		rawQuestions.add("113~Collections~Where can enums be declared?~Outside of a class, or inside a class(but not inside a method)");
		rawQuestions.add("114~Collections~Will binary search always use a binary search to look?~If the list does not implement the RandomAccess interface, it performes a sequential search");
		rawQuestions.add("115~Databases~By default are columns nullable?~Yes");
		rawQuestions.add("116~Databases~By default, does an order by sort in ascending or decending order?~Ascending");
		rawQuestions.add("117~Databases~Can a primary key value be null?~No");
		rawQuestions.add("118~Databases~Can you add a foreign key constraint to a table that already has data?~Yes, but the values that are populated in the fk column will probably be something like 0 (not matchable to an auto_increment that starts at 1)");
		rawQuestions.add("119~Databases~Can you add a primary key to a table that did not previously have one?~Yes, if it is auto_increment.<br>Alter table &lt;table name&gt; modify column &lt;column name&gt; not null auto_increment, add primary key(&lt;column name&gt;).<br>It will automatically compute incrementing values for existing rows");
		rawQuestions.add("120~Databases~Can you add columns in a specific place?~Yes.<br>Use first, last, before &lt;column name&gt;, after &lt;column name&gt;, second, third, etc. with Alter.<br>Ex: Alter table mytable add mycolumn int after somecolumn");
		rawQuestions.add("121~Databases~Can you combine a CREATE and SELECT statement?~Yes.<br>CREATE TABLE &lt;new table name&gt; AS SELECT &lt;rest of normal select statement&gt;.<br>You can also have a normal CREATE TABLE command that includes columns, followed by an AS SELECT that will fill in non-primary key values with the SELECT results and take care of any primary key increments as well");
		rawQuestions.add("122~Databases~Can you combine an INSERT and SELECT statement?~Yes.<br>INSERT INTO &lt;table name&gt; (&lt;comma delimited column list&gt;) SELECT &lt;rest of select statement as normal&gt;");
		rawQuestions.add("123~Databases~Can you have an auto_increment column that is not a primary key?~No");
		rawQuestions.add("124~Databases~Can you reference an outer query from within an inner query?~Yes.<br>You can use a table alias to reference, compare, or use a current outer query's column value in an inner query.<br>Ex: SELECT t1.x, (SELECT t2.b from t2 where t1.b = t2.b) from t1");
		rawQuestions.add("125~Databases~Can you see all rows where a certain column of that row does or does not exist in another table?~Yes.<br>Use EXISTS / NOT EXISTS.<br>ex: Select t1.firstname from t1 where exists / not exists (select * from t2 where t2.firstname = t1.firstname)");
		rawQuestions.add("126~Databases~Can you use a subquery as a coumn expression in a SELECT Ex: SELECT x, (SELECT y from t2) from t1?~Yes, but the subquery can only return one value");
		rawQuestions.add("127~Databases~Can you use DISTINCT in a function?~Yes");
		rawQuestions.add("128~Databases~Does MyISAM in mysql support transactions?~No.<br>InnoDB and BDB do.<br>Alter table &lt;table name&gt; TYPE = InnoDB;");
		rawQuestions.add("129~Databases~What is a CHECK constraint?~It is a constraint that can be added to a table to make sure that any INSERT or UPDATE that changes a value in table obeys a rule.<br>Ex: A CHECK constraint that forces age to be >= 25");
		rawQuestions.add("130~Databases~How can you add a CHECK constraint?~In a CREATE TABLE statement, after the column name and datatype, you can add CHECK (&lt;column name&gt; IN (&lt;comma seperated list of values&gt;).<br>You can also use any thing that would be in a where clause.<br>To add a CHECK when altering a table, you can do ADD CONSTRAINT CHECK &lt;column name&gt; &lt;a clause that would go after WHERE like IN, OR, =, or &lt; etc.&gt;");
		rawQuestions.add("131~Databases~How can you change a column type, name, and modifiers?~Alter table &lt;table name&gt; change column &lt;old column name&gt; &lt;new column name&gt; &lt;datatype&gt; &lt;modifiers&gt;");
		rawQuestions.add("132~Databases~What is DDL?~Data Definition Language.<br>It defines a database schema with CREATE and ALTER statements");
		rawQuestions.add("133~Databases~What are : Restriction and Projection?~Restriction is really just choosing rows from a table that match some criteria.<br>Projection is choosing columns from a table and eliminating duplicates");
		rawQuestions.add("134~Databases~What is a many to many relationship, and how is it represented?~It is a relationship where something from table A could reference many of things from table B, and something from table B could reference many things from table A.<br>An example of this is teachers and students. A teacher can teach many students in a class, and a student usually has many classes and hence many teachers.<br>This can be modeled with three tables.<br>Table 1 can be a list of teachers.<br>Table 2 can be a list of students.<br>Table 3 can be an association table with a teacher and a student");
		rawQuestions.add("135~Databases~How can you change only a column type?~Alter table &lt;table name&gt; modify column &lt;column name&gt; &lt;new datatype&gt;");
		rawQuestions.add("136~Databases~How can you remove a primary key modifier from a column?~alter table &lt;table name&gt; drop primary key");
		rawQuestions.add("137~Databases~How can you see a table structure?~DESC &lt;table name&gt; or DESCRIBE &lt;table name&gt;");
		rawQuestions.add("138~Databases~How can you use column and table aliases?~SELECT &lt;new table alias&gt;.&lt;column name&gt; AS &lt;new result column name&gt; FROM &lt;table name&gt; AS &lt;new table alias&gt;. AS is optional");
		rawQuestions.add("139~Databases~How do you create a foreign key?~create table &lt;table name&gt; (<br>&nbsp;&nbsp;&lt;new column name&gt; int not null, constraint &lt;constraint name usually othertable_othercolumn_fk&gt; foreign key(&lt;new column name&gt;<br>)<br>references &lt;other table&gt;(<br>&nbsp;&nbsp;&lt;other table's column&gt;<br>)<br>You can also use an ADD CONSTRAINT element to an alter table statement");
		rawQuestions.add("140~Databases~How do you create a table?~CREATE TABLE &lt;table name&gt; (<br>&nbsp;&nbsp;&ltcolumn name&gt; &lt;datatype&gt; &lt;optional modifiers like NOT NULL&gt;,<br>&nbsp;&nbsp;&lt;column #2 name ...&gt; ... <br>)");
		rawQuestions.add("141~Databases~How do you designate a primary key when creating a table?~CREATE TABLE ((<br>&nbsp;&nbsp;&lt;column 1 name&gt; &lt;datatype&gt; NOT NULL,<br>&nbsp;&nbsp;&lt;column 2 name&gt; &lt;datatype&gt;, primary key (&lt;column 1 name&gt;)<br>)");
		rawQuestions.add("142~Databases~How do you do a bulk insert?~INSERT INTO phone_book VALUES<br>&nbsp;&nbsp;(&lt;comma seperated values for a row&gt;),<br>&nbsp;&nbsp;(&lt;comma seperated values for another row&gt;)<br>&nbsp;&nbsp;...;");
		rawQuestions.add("143~Databases~How do you do a natural join?~SELECT<br>&nbsp;&nbsp;&lt;table1&gt;.&lt;column from table1&gt;,<br>&nbsp;&nbsp;&lt;table2&gt;.&lt;column from table2&gt;<br>FROM<br>&nbsp;&nbsp;&lt;table1&gt; NATURAL JOIN &lt;table2&gt;");
		rawQuestions.add("144~Databases~How do you do an inner join?~SELECT<br>&nbsp;&nbsp;&lt;table1 name&gt;.&lt;table1 column name&gt;,<br>&nbsp;&nbsp;&lt;table2 name&gt;.&lt;table2 column name&gt;<br>FROM<br>&nbsp;&nbsp;&lt;table1 name&gt; INNER JOIN &lt;table2 name&gt; ON &lt;some table1 column&gt; = &lt;some table2 column&gt;");
		rawQuestions.add("145~Databases~How do you do an insert?~INSERT INTO &lt;table name&gt; (<br>&nbsp;&nbsp;&lt;comma delimeted column list&gt;<br>)<br>VALUES (<br>&nbsp;&nbsp;&lt;comma delimeted list of values&gt;<br>)<br>-OR-<br>INSERT INTO &lt;table name&gt;<br>VALUES<br>&nbsp;&nbsp;(&lt;comma delimeted list of values),<br>&nbsp;&nbsp;(&lt;comma delimeted list of values&gt;)");
		rawQuestions.add("146~Databases~How do you do an update?~UPDATE &lt;table name&gt;<br>SET<br>&nbsp;&nbsp;&lt;column name&gt; = &lt;column value&gt;,<br>&nbsp;&nbsp;&lt;another column set&gt;<br>&nbsp;&nbsp;&lt;optional WHERE clause&gt;");
		rawQuestions.add("147~Databases~How do you do a subquery within a select?~SELECT<br>&nbsp;&nbsp;&lt;comma seperated column list&gt;<br>FROM<br>&nbsp;&nbsp;&lt;one or more tables with possible joins&gt;<br>WHERE<br>&nbsp;&nbsp;&lt;some column from one of the tables&gt; IN ( &lt;SELECT statement&gt; )");
		rawQuestions.add("148~Databases~How do you do equijoins/non-equijoins?~An equijoin is an inner join that uses an equals operator.<br>A non-equijoin is a type of innerjoin that uses a not-equals operator like &lt;, &gt;, etc.");
		rawQuestions.add("149~Databases~How do you remove a view?~DROP VIEW &lt;view name&gt;");
		rawQuestions.add("150~Databases~How do you rename a table?~ALTER TABLE &lt;old table name&gt; RENAME TO &lt;new table name&gt;");
		rawQuestions.add("151~Databases~How do you specify a column to be auto imcrementing?~ Add AUTO_INCREMENT after the NOT NULL for that column");
		rawQuestions.add("152~Databases~How do you use a CASE statement and why would you want to?~You could use a case statement in place of several updates or one big update statement.<br>It may be better to use a CASE statement because with sequential updates, two updates could affect the same row when you didn't want it to. With a big update, it may do the job, but it is harder to read and maintain.<br><br>UPDATE<br>&nbsp;&nbsp;&lt;table name&gt;<br>SET<br>&nbsp;&nbsp;&lt;column to change&gt; = CASE<br>&nbsp;&nbsp;WHEN &lt;some thing&gt; =,&lt;,&gt;,etc. &lt;something&gt; THEN &lt;new value&gt;<br>&nbsp;&nbsp;WHEN &lt;something&gt; = ,&lt;,&gt;,etc. &lt;something&gt; THEN &lt;new value&gt;<br>&nbsp;&nbsp;ELSE &lt;new value&gt;<br>END<br><br>Once it hits a valid WHEN, the rest are skipped even if other WHEN statements pass");
		rawQuestions.add("153~Databases~How do you use a left outer join?~SELECT<br>&nbsp;&nbsp;&lt;table1&gt;.&lt;table1 column&gt;,<br>&nbsp;&nbsp;&lt;table2&gt;.&lt;table2 column&gt;<br>FROM<br>&nbsp;&nbsp;&lt;table1&gt;<br>&nbsp;&nbsp;LEFT OUTER JOIN<br>&nbsp;&nbsp;&lt;table 2&gt;<br>&nbsp;&nbsp;ON &lt;table1&gt;.&lt;some column from table 1&gt; = &lt;table2&gt;.&lt;some column from table2&gt;");
		rawQuestions.add("154~Databases~How do you use a transaction?~START TRANSACTION; will start a transaction.<br>A log will be kept until a COMMIT; or ROLLBACK; is run, which will either commit or rollback everthing since the start transaction");
		rawQuestions.add("155~Databases~How is UNION ALL different from UNION?~UNION ALL returns all results from the tables as well as any duplicates");
		rawQuestions.add("156~Databases~If you add a column to a table that already contains data, and specify the column as not null, what happens?~A default 0 or empty string is given to all records for that column");
		rawQuestions.add("157~Databases~If you want to use % and _ wildcards to compare strings, can you use =?~No.<br>You have to use like");
		rawQuestions.add("158~Databases~Is a primary key limited to just one column?~No.<br>You can specify multiple columns as a comma delimited list in the 'PRIMARY KEY(...)' parentheses");
		rawQuestions.add("159~Databases~Is the BETWEEN keyword inclusive (ex: does between 1 and 3 only return 1, 2, and 3)?~Yes.<br>It is equivelent to &gt;= and &lt;=");
		rawQuestions.add("160~Databases~Is there anything different about how you implement one to one, one to many, and many to many table relationships?~Yes.<br>Many to many use a junction table to avoid data duplication.<br>The junction table has a one to many relationship with both tables, and can be called &lt;table 1&gt;_&lt;table 2&gt;");
		rawQuestions.add("161~Databases~Is there a standard way to limit the number of results?~No.<br>Mysql uses limit x<br>Oracle uses where rownum &lt;= x<br>MsSQL uses Select top x");
		rawQuestions.add("162~Databases~Is using AS to denote an alias the same as leaving it out?~Yes");
		rawQuestions.add("163~Databases~Are scrollable and updatable result sets reliable?~They are not guaranteed to be supported by all vendors.<br>You can however call supportsResultSetType() and supportResultSetConcurrency() methods of the DatabaseMetaData class to check to see if they are supported. Even if they are, some complex queries(ex: queries not using/including primary keys) might not be able to update.<br>Call ResultSet's getConcurrency() method to find out if that query is updatable.<br>If this is the case, the get warnings() method of the current connection object will return a SQLWarning.<br>That SQLWarning object has a method getNextWarning() that returns the next warning if there was more than one");
		rawQuestions.add("164~Databases~Are there any subtle differences between the next() system in Iterators vs ResultSets?~Yes. Iterator.next() returns the next element. ResultSet.next() moves the position to the next element so you can retrieve it with a getter");
		rawQuestions.add("165~Databases~By default, is auto-commit sql on or off?~By default auto-commit is on.<br>You can change that by calling connection.setAutoCommit();");
		rawQuestions.add("166~Databases~Can you use more than one ResultSet from the same connection at the same time?~You can, but it is not a good idea.<br>You will get different results than what you normally should get.<br>You should use one result set per statement at a time.<br>If you are done with a ResultSet, you can use that same statement to execute another querey and use the new ResultSet fine as long as you don't use a previous ResultSet after running the new query.<br>If you do have two concurrent ResultSets, you should probably combine the queries with a join");
		rawQuestions.add("167~Databases~Does closing a statement close it's the associated resultset, and does closing a connection close it's associated statement?~Yes");
		rawQuestions.add("168~Databases~Do you have to close all connections, statements, and resultsets?~It is a good idea because these objects are large in memory. You should probably execute the closes in a finally block");
		rawQuestions.add("169~Databases~How can you query metadata about a database, about a resultset, or a prepared statement?~You can create a DatabaseMetaData object by calling connection.getMetaData();");
		rawQuestions.add("170~Databases~How can you register a database driver with java, so it will recognize it's jdbc url?~You can either call System.setProperty(\"jdbc.drivers\", driverClass); or Class.forName(driverClass); where driverClass is something like \"com.mckoi.JDBCDriver\"");
		rawQuestions.add("171~Databases~How do you use a prepared statement?~String sql = \"Select * from employee where id=? and years=?\";<br>PreparedStatement ps = connection.prepareStatement(sql);<br>ps.setString(1, id);<br>ps.setInt(2, years);<br>ResultSet rs = ps.executeQuery();");
		rawQuestions.add("172~Databases~If you do a select, and get a result list, and then later on do an insert, will that row on another select be the last row?~You cannot guarantee this unless you are doing order by something that will guarantee it");
		rawQuestions.add("173~Databases~If you have already executed a prepared statement, and are only changing some of the parameters, do you have to still fill in all of them?~No.<br>You only have to change the ones that are different than the last prepared statement execution on the current connection");
		rawQuestions.add("174~Databases~If you have auto-commit sql off, what do you have to do to commit/rollback?~You setup connections and statements like normal, making sure that auto-commit is off.<br>When you want to commit a set of previously executed instructions on the current connection, call connection.commit();<br>If you want to rollback at any time, you can call connection.rollback() which will rollback everything back to the last commit() call or everything if there was no previous commit call on the current connection.");
		rawQuestions.add("175~Databases~What are save points, and how do you use them?~Save points are markers in code that you can rollback(savepoint) to if you do not want to rollback everything.<br>You still need to call commit() if you want the things before the save point to be committed.<br>You construct a save point like this: <br>Savepoint sp = new SavePoint();<br>or you can give it a name like this: <br>Savepoint sp = new Savepoint(\"part1\");<br>When you are done with a save point, you should release it like this :<br>connection.releaseSavepoint(sp);");
		rawQuestions.add("176~Databases~What are scrollable and updatable result sets?~Result sets that you can call previous on, that may be set to refresh if a change in the queried data has been detected, and that also may be able to be updated with those changes being sent back to the db.<br>Generally, updatable resultsets are not as efficient as normal sql update statements");
		rawQuestions.add("177~Databases~What benefit do prepared statements offer?~They offer a performance boost, as well as help protect against sql injection.<br>They keep the db server from re-optimizing the same query over and over");
		rawQuestions.add("178~Databases~What do ResultSet indexes start at?~1");
		rawQuestions.add("179~Databases~What is a RowSet?~A row set is like an offline version of a result set.<br>You can create one, populate it with result set data, close a db connection, while still being able access the query results.<br>In java 1.5, it is in the com.sun.rowset package (CachedRowSetImpl)");
		rawQuestions.add("180~Databases~What is the basic way to run a query / update / generic(unknown from user input)?~After loading a the jdbc driver...<br>&nbsp;&nbsp;Connection c = DriverManager.getConnection(url, user, pass);<br>&nbsp;&nbsp;Statement s = c.createStatement();<br>&nbsp;&nbsp;ResultSet rs = s.executeQuery(\"some query\");<br>&nbsp;&nbsp;/<br>&nbsp;&nbsp;int i = s.executeUpdate(\"some insert/update/delete/create table etc.\");<br>If you ran a query, you need to call rs.next() before each successive row result, and rs.getXxx() to get the column result of that row");
		rawQuestions.add("181~Databases~What are some constraints?~UNIQUE, CHECK, and FOREIGN KEY");
		rawQuestions.add("182~Databases~What are some sql functions that are built in?~SUM(), AVG(), MIN(), MAX(), COUNT()");
		rawQuestions.add("183~Databases~What is 1NF?~First normal form. A table is 1NF if it obeys the following :<br>The table does not have nullable columns<br>The table has a primary key<br>The table does not contain more than one value in a single field<br>Part of a rows value does not depend on the order of the rows");
		rawQuestions.add("184~Databases~What is 2NF?~Second normal form. A table is 2NF if it is 1NF and has no partial dependencies(this means the table must either have all of it's columns as the primary key, or have one column as the primary key)");
		rawQuestions.add("185~Databases~What is 3NF?~Third normal form. A table is 3NF if it is 2NF and has not transitive dependencies(this means a non-key column cannot be possibly dependent on another non-key column)");
		rawQuestions.add("186~Databases~What is a Cartesian (cross) join?~It is a result of crossing every row in one table with every row from another table.<br>You get (# or rows in table a) * (# of rows in table b) as the number or results.<br>ex: SELECT * from t1 CROSS JOIN t2<br>or<br>SELECT * FROM t1, t2");
		rawQuestions.add("187~Databases~What is a superkey?~A superkey is a non-minimal set of attributes that uniquely describe a row.<br>Ex: Person {name, SSN, state}<br>name + SSN + state = Superkey, but it is not a minimal set so it is not a canidate key");
		rawQuestions.add("188~Databases~What is a canidate key?~A canidate key is any superkey that does not have extraneous attributes.<br>A canidate key defines a minimum set of attributes that uniquely identify a row");
		rawQuestions.add("189~Databases~What is a primary key?~A primary key is one canidate key that has been chosen or preffered over other canidate keys to uniquely idenfiy a row");
		rawQuestions.add("190~Databases~What is a composite key?~A primary key composed of multiple columns");
		rawQuestions.add("191~Databases~What is a surrogate key?~A non-natural (generated) key like an auto-increment column");
		rawQuestions.add("192~Databases~What is a natural/domain key?~A canidate key that already exists in the database and has domain meaning in the row");
		rawQuestions.add("193~Databases~What is a foreign key?~It is a column in a table that references the primary key of another table");
		rawQuestions.add("194~Databases~What is a self join?~It is just a join where both table operhands reference the same table.<br>SELECT t1.name from t t1, t t2 where t1.number < t2.number and t1.location = t2.location.<br>This would list all names with equal locations an no duplicates");
		rawQuestions.add("195~Databases~What is a left outer join?~It matches every row in the first(left) table with a row in the second(right) table even if it means returning a null value for the right table");
		rawQuestions.add("196~Databases~What is a natural join?~It is a join that can automatically match two columns that have the same column name.<br>If there is more than one column in each table with the same name, all those columns are taken into account");
		rawQuestions.add("197~Databases~What is an equijoin/non-equijoin?~An inner join that tests for equality(equijoin) or inequality(non-equijoin).<br>It uses &lt; or &lt= for example, as opposed to just =");
		rawQuestions.add("198~Databases~What is an index and how do you use one?~It is a way of mapping rows so searching is faster.<br.It does take extra disk space.<br>ALTER TABLE &lt;table name&gt; ADD INDEX &lt;index name&gt;(comma separated list of columns to index)<br>or<br>CREATE INDEX &lt;index name&gt; on &lt;table name&gt; (&lt;comma seperated list of columns to index&gt;).<br>You can add DESC after a column name if you think that order will be more common");
		rawQuestions.add("199~Databases~What is an inner join?~It is a cross join with some rows removed by some condition in the query");
		rawQuestions.add("200~Databases~What is ANY or ALL used for?~WHERE &lt;column&gt; &gt; ANY/ALL (SELECT...).<br>If can force something to be compared to ALL or ANY of some result (It must be greater than ALL the results, or must be greater than ANY (at least 1) result)");
		rawQuestions.add("201~Databases~What is a schema?~A representation of all tables, columns, and other related objects and how they connect");
		rawQuestions.add("202~Databases~What is a self referencing foreign key?~The primary key of a table used in that same table for a different purpose");
		rawQuestions.add("203~Databases~What is a transitive dependency?~When a non-key column might cause any other column to have to change");
		rawQuestions.add("204~Databases~What is a Union and how do you use it?~It unions(returns the combined results that different selects have), but does not return duplicates.<br>SELECT c1 from t1 union select c1 from t2 union select c9 from t3 order by c1.<br>Note you can only have one order by and it must be after the last select");
		rawQuestions.add("205~Databases~What is a view and how do you use one?~It is a saved query that can be run as if a table represented that saved query, yet it always calculates new results at execution time.<br>Just prefix a select statement with CREATE VIEW &lt;new view name&gt; AS");
		rawQuestions.add("206~Databases~What is functional dependancy?~When a column's data must change when another column's data is modified");
		rawQuestions.add("207~Databases~What is INTERSECT and EXCEPT?~INTERSECT returns all common values from two tables, and EXCEPT return all values from table 1 unless they are found in table 2.<br>Ex: SELECT c1 FROM t1 INTERSECT/EXCEPT SELECT c1 FROM t2");
		rawQuestions.add("208~Databases~What is partial functional dependency?~When a non key column is dependent on some but not all columns in a composite primary key");
		rawQuestions.add("209~Databases~What is shorthand notation?~T.X-&gt;;T.y means column y in table T is dependant on column x in table T (it is read right to left)");
		rawQuestions.add("210~Databases~What is the ACID test?~Atomicity, Consistency, Isolation, Durability. These must hold for a transaction");
		rawQuestions.add("211~Databases~What is the difference between a LEFT, RIGHT, and FULL outer join?~A RIGHT OUTER JOIN evaluates the RIGHT table against the left.<br>The only reason to use right over left is if it makes it easire to rework the query, you can just change a word instead of moving around text.<br>A FULL can return null on either the first or second tables columns.<br>A LEFT vs. RIGHT means the LEFT or RIGHT table (left JOIN right) will have all rows linked to something in the other table");
		rawQuestions.add("212~Databases~What is the difference between a synthetic and natural key?~A natural key is a key value that is in the data that has been inserted or that will be inserted.<br>A synthetic key is not (ex: an incrementing id)");
		rawQuestions.add("213~Databases~What is the difference between CHANGE and MODIFY?~MODIFY changes the datatype.<br>CHANGE changes the datatype, name, and modifiers");
		rawQuestions.add("214~Databases~What is WITH CHECK OPTION?~You can add this when you are creating a view, after a where clause.<br>ex: CREATE VIEW &lt;view name&gt; AS SELECT * FROM &lt;some table&gt; WHERE &lt;some column&gt; = 4 WITH CHECK OPTION.<br>This forces all insert, delete, and update statements that are done on the view to only work if the where clause matches the one WITH CHECK OPTION");
		rawQuestions.add("215~Databases~When creating a table, what are some good design questions to ask?~What is the one thing the table describes?<br>How will you use the table to get the one thing?<br>Do the colums contain atomic data to make queries short and to the point?<br>Is there more than one value in a column?<br>Do you have multiple columns containing the same things(addr1, addr2, addr2, ... etc)?<br>Do you have columns that contain the same value, but are formatted differently?<br>What will a row's primary key(unique identifier) be?");
		rawQuestions.add("216~Databases~When using NOT does it have to go right after the WHERE?~It can either go right at the beginning of a WHERE clause, or after an IS in a where clause.<br>ex: WHERE age NOT IN (1,2,3)<br>OR<br>WHERE NOT age = ANY (1,2,3)");
		rawQuestions.add("217~Databases~Where would you use a one to one, one to many, and many to many table relationship?~If you want to make a table smaller so that you are not querying as much, limit access by taking some sensitive data out of a table that some have access to, or if you want to isolate unknown data that may be mostly null, use one to one. One to one is less common.<br>Usually you will find one to many and many to many fit all your needs");
		rawQuestions.add("218~Design Patterns~What is a design pattern?~A design pattern is somthing that describes a recurring problem, and then states a core, generic solution that can be tweaked to solve the problem as it exists in your model");
		rawQuestions.add("219~Design Patterns~What is Inversion of Control(IOC)?~It is the idea that a class should not be in charge of creating instances of objects for which that class should not be directly controlling.<br>These objects should be passed in to a constructor, or set via setter methods");
		rawQuestions.add("220~Design Patterns~What is MVC?~MVC is the separation of business logic and presentation.<br>Usually the model is the servlet invokes the business-logic and data-access code and creates the beans.<br>The view is the JSP page, and the controller is the servlet that decides what business logic code applies and which JSP page to present.<br>The model can simply be the database");
		rawQuestions.add("221~Design Patterns~What is the Abstract Factory pattern?~This pattern tries to solve the problem of creating families of related things without specifying which concrete classes to use in code.<br>It's idea is to have an interface containing create methods for each thing in the family of products we want to create.<br>Each class that implements this interface can then use the Factory pattern to branch and choose the appropriate concrete instantiation to return. The purpose is to return a specific factory");
		rawQuestions.add("222~Design Patterns~What is the Adapter pattern?~It tries to solve the problem of linking some legacy/3rd party interface to a new, incompatible interface.<br>All it does it essentially create methods with the old name, and have them call the new methods");
		rawQuestions.add("223~Design Patterns~What is the Bridge pattern?~It tries to get you to use interfaces with a composition model.<br>An example is if you have code that is specific to 3 different OSes, and 3 different video cards.<br>Instead of writing code in a cartesian fasion(9 classes), you can write 3 OS classes and 3 video card classes that each take care of 'bridging' the code over to that specific block.<br>Just make sure that each set is based on an interface");
		rawQuestions.add("224~Design Patterns~What is the Builder pattern?~It tries to simplify the creation and initialization of complex objects that, for example, might take many areguments to a constructor, or need several calls after being constructed.<br>A class builder object can be created that is issued several set type statements, after which a call can be made to return the object in a ready to go state");
		rawQuestions.add("225~Design Patterns~What is the Chain of Responsibility pattern?~It tries to solve the problem of who should handle a given message or task in a parent/child/tree relationship.<br>It's essence relies in each child having a reference to the child's parent.<br>When a message or task request is recieved, the child checks to see if it is that child's responsibility.<br>If it is, the child executes the appropriate code.<br>If it is not that child's responsibility, it can call the same method on the parent, which in turn checks to see if it is that parent's responsibility, and so on.<br>It's like a backwards class loader that delegates to the parent and then back to the child if the parent can't handle it");
		rawQuestions.add("226~Design Patterns~What is the Command pattern?~It tries to solve the problem of coupling requests and requestors.<br>It does this by separating the request(removing request code from the requestor and the runner and putting it into it's own object).<br>An interface is provided so that no matter what the request, it can call some common execute() or undo() method");
		rawQuestions.add("227~Design Patterns~What is the Composite pattern?~It tries to solve the problem of having a tree that has not only leaves, but also contains sub trees that contain leaves without hackery.<br>It simply defines an interface that accomodates both the tree and leaf functionality so that they can be treated in the same way, yet have their own properties and rules.<br>It also allows you to be able to iterate over the entire tree including sub trees correctly");
		rawQuestions.add("228~Design Patterns~What is the Decorator pattern?~This patten tries to solve the problem of extending classes to add more functionality(thus making coupling tighter and cohesion a bit weaker).<br>It says that instead of extending a class each time you want to add functionality or extra info, to wrap the class over and over again.<br>This 'decorates' the class and adds functionality of another class without linking the two classes like extending does");
		rawQuestions.add("229~Design Patterns~What is the Facade pattern?~It tries to solve the problem of allowing several different interfaces to be run by one more general interface.<br>It is simply a generic many to one bridge.<br>An example is a home theater system, where there is a stereo interface, a tv interface etc.<br>It can create a remote control that has methods to interact with each of these interfaces in one class.<br>It's almost like a separate class composed of a lot of different interfaces that can use them all");
		rawQuestions.add("230~Design Patterns~What is the Factory pattern?~This pattern tries to solve the problem of having branching code that decides what type of concrete class to instantiate.<br>You have some general interface at the top that other classes can implement and then return some instantiated object of the interface type.<br>The subclasses then would have the branching code that can be called to pick the right concrete class to instantiate and return");
		rawQuestions.add("231~Design Patterns~What is the difference between the Factory Pattern and the Abstract Factory Pattern?~The Factory Pattern returns a concrete object to use, chosen via some parameter to a method call.<br>The Abstract Factory Pattern returns an actual factrory that can then return objects that have a common interface with other factories that could have been returned");
		rawQuestions.add("232~Design Patterns~What is the Flyweight pattern?~It tries to save memory by sharing objects.<br>An example of this includes having many reference variables point to the same object for state.<br>Another example is having one instance of a large object, with an array of extra information that can be applied to the one large object such that it seems there are many large objects");
		rawQuestions.add("233~Design Patterns~What is the Half-Object Plus Protocol(HOPP) pattern?~It tries to ease/optimize networked 'rmi' calls by having some calls that would normally do all requests over the network, to make the requests to a local object");
		rawQuestions.add("234~Design Patterns~What is the Interpreter pattern?~It tries to solve the problem of interpreting a language by a divide and conquer method in the language syntax");
		rawQuestions.add("235~Design Patterns~What is the Mediator pattern?~It tries to solve the problem of multidirectional communication between several objects.<br>The objects store a reference to a mediator object, and the mediator object stores references to all the other objects.<br>The mediator can then include logic for what happens when any object does anything");
		rawQuestions.add("236~Design Patterns~What is the Momento pattern?~It tries to save off data from some object so that it can return to a previous state.<br>This can be implemented using an inner class, where you are trying to keep the object encapsulated and only allow the object to read or write the momento, or inner class object");
		rawQuestions.add("237~Design Patterns~What is the Observer pattern?~This pattern tries to solve the problem of classes that interact being too tightly coupled.<br>It defines a dependancy between one and many objects such that when one object(the subject) changes, the other objects(the subscribers) are notified.<br>It uses something to the effect of an Observer interface, and an Observable interface to allow generic data to be passed between the objects with out specifically linking them together.<br>The only possible issue with this, is that you cannot fine tune what each object gets.<br>If several objects want different pieces of information, you must usually send all this together in one big bundle to each observer.<br>Java includes Oberver and Observable interfaces to more easily use this pattern.<br>There are only a few methods that need to be implemented");
		rawQuestions.add("238~Design Patterns~What is the Prototype pattern?~It tries to solve the problem of being able to deep copy an object.<br>It is essentially the same as implementing Clonable or a copy constructor");
		rawQuestions.add("239~Design Patterns~What is the Proxy pattern?~It tries to solve the problem of accessing some object, but being able to intercept the calls to change the functionality.<br>You usually have some class that implements the same interface as the real object you are trying to access.<br>You access this intermediate object instead of the real object, and it can make supplimental decisions when calling the real object like networking to get the real object, access control, and spreading out operations that would usually take a long time like initializing only parts you need.<br>All this can be done without changing the original object you wanted to access in the first place");
		rawQuestions.add("240~Design Patterns~What is the Singleton pattern?~It tries to solve the problem of allowing only one object to control some resource, and only allowing one copy of the object to exist.<br>You can get this effect by using a static variable and a private constructor.<br>The one thing that you need to make sure to watch out for is threading issues");
		rawQuestions.add("241~Design Patterns~What is the State pattern?~It tries to help objects work with states, while allowing for the flexability of changing what states do and being able to easily add states.<br>It uses composition to allow an object to have many state posibilities, and forces the states to share a common interface of possible actions.<br>If a state is going to change, the states have access to the outer class that is composed of them(the states can keep a reference to the main object), and can reassign a state without having to worry about maintaining that object's code");
		rawQuestions.add("242~Design Patterns~What is the Strategy pattern?~This pattern tries to solve the problem of touching lots of classes when a behavior changes.<br>It is a pattern who's basis is favoring composition over inheritance. It does this so that you can add behaviors to objects via composition rather than inheritance. This allows you to have a behavior defined in one class instead of having several classes extend or implement that behavior.<br>That way, if the behavior changes, you don't need to touch all the classes that extend the behavior, only the class that is the behavior");
		rawQuestions.add("243~Design Patterns~What is the Template pattern?~It tries to solve the problem of implementing different algorithms that do the same thing(ex: sorting).<br>It does this by defining a class or interface where some parts of the algorithm are delegated to subclasses");
		rawQuestions.add("244~Design Patterns~What is the Visitor pattern?~It tries to allow you to add functionality to classes when you iterate over a family(collection) of them.<br>This is done at the cost of some encapsultation because logic dealing with the family of objects begins to be stored in the visitor class.<br>It generally works by starting with a visitor object, and a collection of something.<br>The collection is passed to the visitor, which iterates through the collection passing a reference to the visitor, to each element via an accept() method.<br>That accept() method simply uses the visitor that was passed to it to call the visitor's visit() method, passing in the collection element(this).<br>The visit() method of the visitor class is overloaded to accept different types that could be in the collection, and process them individually.<br>You do have to make sure that each element type in the family of objects that you are working with has an accept() method, but other than that, you do not need to modify the family of objects to keep adding more functionality.<br>It really is not much more than a call back to the correct handler for that type so you don't need a lot of branching code to determine what to do with types in some collection");
		rawQuestions.add("245~Design Patterns~What is layering, and what are some of it's pluses and minuses?~It is a technique desinged to break apart complicated software.<br>Benifits include the ability to understand a single layer without having to know the whole system, substituting layers, minimizing dependencies, and standardizing.<br>Drawbacks include cascading changes and duplicate code in order to translate data from one layer to another");
		rawQuestions.add("246~Design Patterns~How do you keep layering dependencies to a minimum?~Make sure that a layer only knows about the layer directly below it, meaning it can only call the layer directly below it");
		rawQuestions.add("247~Design Patterns~What is the difference between the Business Logic Layer and the Domain Layer?~Nothing");
		rawQuestions.add("248~Design Patterns~What is the difference between the Business Model and the Domain Model?~Nothing");
		rawQuestions.add("249~Design Patterns~What is the Domain Model?~It is both the data of things, as well as their behavior");
		rawQuestions.add("250~Design Patterns~What is the Domain Layer?~It is responsible for calculations based on inputs and stored data, validation, and deciding what data source logic to use.<br>This layer would inclide DAOs.<br>It is everything between the view and the data");
		rawQuestions.add("251~Design Patterns~What is the Service Layer?~The service layer is where all business logic should go.<br>It can be made up of controllers and busines objects that use DTOs and DAOs");
		rawQuestions.add("252~Exceptions~Does the finally block have to finish(Do all statements in it always execute)?~Not if there is a System.exit(), return, or exception in it");
		rawQuestions.add("253~Exceptions~Can a subclass's overriding method declare that it throws fewer exceptions than the superclass's declaration?~Yes");
		rawQuestions.add("254~Exceptions~Can main() be declared to throw an exception, and if so, what happens?~Yes.<br>The program will exit and throw the exception");
		rawQuestions.add("255~Exceptions~Can you declare a method to throw an exception even if you never throw it?~Yes, however, you will need to wrap that method in a try if it is a checked exception when it is called");
		rawQuestions.add("256~Exceptions~Can you have a catch, finally, or catch/finally without a try?~No");
		rawQuestions.add("257~Exceptions~Can you have a try/finally without a catch?~Yes");
		rawQuestions.add("258~Exceptions~Can you omit the catch and finally clauses and only have a try?~No.<br>You can omit any one of them, but not both at the same time");
		rawQuestions.add("259~Exceptions~Can you put code between try/catch if/else etc. blocks?~No");
		rawQuestions.add("260~Exceptions~Can you throw and catch Errors?~Yes");
		rawQuestions.add("261~Exceptions~How can you enable/disable assertions for a package?~java -ea:com.mypackage...   (yes the '...' is really three periods)");
		rawQuestions.add("262~Exceptions~How do you create your own Exception class?~Subclass IOException or a more specific subclass of IOException");
		rawQuestions.add("263~Exceptions~How do you enable assertions?~By default, assertions are disabled.<br>In java 1.4, you need to enable assertions when compiling to tell the compiler you want to use assert as a keyword to assert and not as a lable of some sort.<br>You do this by saying javac -source 1.4 *.java.<br>In java 5, assert is assumed to be a keyword by default, so you do not have to do anything at compile time.<br>For 1.4 + you need to enable assertions when you run the program.<br>You do this by adding a -enableassertions or -ea flag.<br>Similarly, if assertions are enabled, -disableassertions or -da will disable them.<br>The enable and disable assertion flags can be used in general(for all classes), or be set on a class or package level (ex: -ea:MyClass -ea:com.blah.blah  this will turn on assertions for MyClass and com.blah.blah's classes and subpackage classes.<br>There are also flags (enablesystemassertions etc) for ... system assertions");
		rawQuestions.add("264~Exceptions~How do you throw an exception?~throw new <exception class>();<br>ex: throw new EOFException();");
		rawQuestions.add("265~Exceptions~How do you use an assertion?~There are two ways.<br>assert condition; assert condition : expression<br>Assertions will make a program exit with an exception if the assertion condition is false");
		rawQuestions.add("266~Exceptions~How do you use an assert?~There are two ways : assert(i&lt;0); and assert (i&lt;0) : &lt;something that returns a value, usually a string&lt;;");
		rawQuestions.add("267~Exceptions~How much code should you wrap in exception handling?~You should probably separate it on a task basis.<br>If it is it's own task, it can have it's own try/catch/finally block");
		rawQuestions.add("268~Exceptions~If a finally is attached to a try that is being broken or continued out of, does that finally get executed?~Yes");
		rawQuestions.add("269~Exceptions~If code in a try block throws an exception for which there is no catch block, does the finally block still execute?~Yes");
		rawQuestions.add("270~Exceptions~If you throw an unchecked exception, does the compiler force to you setup a try/catch block for it?~No");
		rawQuestions.add("271~Exceptions~If you extend Exception, does it become a checked exception?~Yes.<br>You can however extend RuntimeException, and then it will not be checked");
		rawQuestions.add("272~Exceptions~If you have a finally block on a catch/try, is there any way for the finally block to not run when executing the try?~Unless you call System.exit(), you will get to the finally.<br>Even an return statement in the try or catch blocks will still branch to the finally block before the actual return");
		rawQuestions.add("273~Exceptions~If you have a return in a try block, and also have a return in a finally block, which one actually does the return?~The one in the finally block");
		rawQuestions.add("274~Exceptions~If you must get more detail from a method that does not allow you to throw checked exceptions, what can you do?~You can wrap an exception in a RuntimeException (unchecked) and throw that");
		rawQuestions.add("275~Exceptions~If you need to throw an exception, but need more details about it's context, what can you do?~You can either throw the exception and give it a detailed message in it's constructor(containing possibly another exception's getMessage(), or you can wrap a lower level exception in a higher one to get more context like this :<br>Throwable e2 = new IOException(&lt;some desc&gt;);<br>e2.setCause(e);<br>throw e2;<br>This latter method is recommended because you do not loose any details");
		rawQuestions.add("276~Exceptions~Is there any way to decouple try/catch and try/finally blocks?~Yes.<br>You can have a try/finally that executes code and then closes resources, and wrap that whole thing in a try catch.<br>This way, you are sure that resources are closed, but are also sure that any exceptions that would be in a catch or finally are then caught.<br>Each of the two blocks has a single responsibility : one to finish up, and one to catch exceptions");
		rawQuestions.add("277~Exceptions~Is there a way to avoid the IllegalAccessException on the get() call of a Field object that represents a private member variable?~Yes.<br>Call that field's setAccessable() method and pass it true");
		rawQuestions.add("278~Exceptions~Should exception handling replace testing, if so/not, why?~No.<br>Exception handling adds complexity to the code, and makes it run slower.<br>You should use it when you need to, but not more");
		rawQuestions.add("279~Exceptions~Should you ever throw Error?~No.<br>They are reserved for interal errors and interal resource exhaustion");
		rawQuestions.add("280~Exceptions~What can cause an IllegalStateException?~Trying to access a resource that has been closed");
		rawQuestions.add("281~Exceptions~What does the error message \"bad class file ... class file has wrong version\" mean?~Different versions of the java compiler have been used to create class files that are calling each other");
		rawQuestions.add("282~Exceptions~What happens if no handler catches an exception?~That thread terminates");
		rawQuestions.add("283~Exceptions~What happens if you divide a float or double by zero?~You end up with positive/negative infinity or NaN");
		rawQuestions.add("284~Exceptions~What happens if you do not handle or throw checked exceptions that happen in your code?~The compiler generates an error and will not compile the code");
		rawQuestions.add("285~Exceptions~What is the base class for all exceptions?~Throwable");
		rawQuestions.add("286~Exceptions~What is the difference between a checked and unchecked exception?~An unchecked exception is an exception that is derived from Error or RuntimeException that is either a result of an internal error, or programming error.<br>A checked exception is an exception that deals with IO.<br>The compiler always wants to make sure that anything that can throw a checked exception (IO) is handled in some way");
		rawQuestions.add("287~Exceptions~What is the difference between the throw and throws keyword?~throws is put after the parameter list on a method definition to say that it is possible that the method throws one or more exceptions.<br>Throw is used to actually throw an exception at runtime");
		rawQuestions.add("288~Exceptions~What is the purpose of assertions?~To help find programming errors during testing.<br>A good example of their use is making sure method preconditions are met");
		rawQuestions.add("289~Exceptions~What kind of exception code must go in a method?~A method must declare all IOExceptions that can happen in it.<br>It does this by adding \"throws IOException\" right after the closing parenthases that ends the method parameter list.<br>If there is more than one exception that is being declared as being possible, they are seperated by commas in a list (ex: throws EOFException, MalformedURLException).<br>You can also catch the exception(s) and handle them in the method rather than declaring them");
		rawQuestions.add("290~Exceptions~What kind of exceptions are not checked at compile time?~Runtime exceptions");
		rawQuestions.add("291~Exceptions~What two exception classes are derived from Exception, and what is the difference?~IOException and RuntimeException.<br>The difference is that RuntimeExceptions are caused by programming errors (ex: ArrayIndexOutOfBounds).<br>IOExceptions are caused by something that is out of the control of the code (ex: FileNotFound)");
		rawQuestions.add("292~Exceptions~What two exception classes are derived from Throwable?~Error and Exception");
		rawQuestions.add("293~Exceptions~When can you get a divide by zero exception?~When deviding an int or long by zero");
		rawQuestions.add("294~Exceptions~Will the compiler or jvm match the best catch block to what exception is being thrown if there are multiple catch blocks for a try?~No.<br>If, for example, you have a catch block for type Exception, the compiler will complain if you have another catch block after it because every exception will have already been caught by the general Exception block.<br>It goes in order from top to bottom trying each one individually");
		rawQuestions.add("295~Exceptions~Will the finally block run if there is an exception in the catch block?~Yes");
		rawQuestions.add("296~Exceptions~Will throwing or catching an exception of a super type allow the throwing or catching of one of it's sub types?~Yes");
		rawQuestions.add("297~Exceptions~If you have a superclass that throws a FileNotFoundException, what rules do you need to remember when creating a subclass?~The subclass cannot throw a more general exception than what what thrown in the superclass (It can throw specifics, or handle them and not throw anything).<br>Also, if the superclass does not throw any exception, niether can the subclass (becuase of polymorphism if you did allow this, the compiler could not catch it) unless it is an unchecked exception.<br>You also must not specify that more exceptions can be thrown in a subclass than are thrown in the a superclass");
		rawQuestions.add("298~Extending Classes~What is the difference between overloading and overriding a method?~Overriding a method means declaring a method with the same signature as a method in a superclass,in a subclass.<br>Overloading a method means having more than one method with the same name, but different parameters");
		rawQuestions.add("299~Extending Classes~Are constructors inherited?~No");
		rawQuestions.add("300~Extending Classes~Are there good reasons to override variables in subclasses?~Probably not, because you lose readability by adding confusion");
		rawQuestions.add("301~Extending Classes~Can abstract classes have constructors?~Yes");
		rawQuestions.add("302~Extending Classes~Can a class that is implementing a method declare any more checked exceptions than what are declared in the interface?~No");
		rawQuestions.add("303~Extending Classes~Can a method local inner class be instantiated or declared outside the method in which it is defined?~No");
		rawQuestions.add("304~Extending Classes~Can a method local inner class use the local variables from the method inside of which it is declared?~Only if they are declared to be final");
		rawQuestions.add("305~Extending Classes~Can an abstract class extend a concrete class?~Yes");
		rawQuestions.add("306~Extending Classes~Can an abstract class implement an interface?~Yes");
		rawQuestions.add("307~Extending Classes~Can an anonymous inner class implement more than one interface, or both extend a class and implement an interface?~No");
		rawQuestions.add("308~Extending Classes~Can an interface extend a concrete class or implement anything?~No");
		rawQuestions.add("309~Extending Classes~Can an interface extend more than one interface?~Yes");
		rawQuestions.add("310~Extending Classes~Can an interface variable be given a value by an implementing class?~No.<br>Interface variables are automatically made final");
		rawQuestions.add("311~Extending Classes~Can anything that extends a reference type be assigned to that reference type?~Yes");
		rawQuestions.add("312~Extending Classes~Can a subclass access the private members or methods of it's superclass?~No");
		rawQuestions.add("313~Extending Classes~Can a subclass access the protected and public members of it's superclass?~Yes");
		rawQuestions.add("314~Extending Classes~Can inner classes have static declarations?~No.<br>They are always tied to an instance of their outer class");
		rawQuestions.add("315~Extending Classes~Can interfaces have static method declarations?~No.<br>Interfaces can only declare static variables that will be made final");
		rawQuestions.add("316~Extending Classes~Can methods be declared as protected, if so what does it do?~Yes.<br>Only it's class, subclasses, and package classes can have access to them");
		rawQuestions.add("317~Extending Classes~Can you add a non final variable to an interface?~Yes, but it is automatically made static and final");
		rawQuestions.add("318~Extending Classes~Can you always implement more than one interface?~Only if the interfaces do not specify the same method/parameters with different return types");
		rawQuestions.add("319~Extending Classes~Can you assign a superclass object to a subclass variable ex: Manager m = new Employee()?~No.<br>You will get a compile time error.<br>If it is an array assignment, you will not see the error however, until runtime with an ArrayStoreException or ClassCastException");
		rawQuestions.add("320~Extending Classes~Can you call a superclass's superclass's method ex: super.super.go()?~No.<br>You can only call methods one level up");
		rawQuestions.add("321~Extending Classes~Can you call this(...) and super(...) in the same constructor?~No");
		rawQuestions.add("322~Extending Classes~Can you call this(...) or super(...) outside of a constructor?~No");
		rawQuestions.add("323~Extending Classes~Can you change only the return type of an overridden method?~As long as it is a subtype of the return type in the superclass, and you are using at least java 5");
		rawQuestions.add("324~Extending Classes~Can you declare a method local inner class inside a static method?~Yes, but it will only have access to the outer class's static members");
		rawQuestions.add("325~Extending Classes~Can you declare and reference static and final static variables in an abstract class from without it?~Yes");
		rawQuestions.add("326~Extending Classes~Can you declare constants in an interface?~Yes");
		rawQuestions.add("327~Extending Classes~Can you have abstract static methods?~No");
		rawQuestions.add("328~Extending Classes~Can you implement a static inner class inside an interface?~Yes");
		rawQuestions.add("329~Extending Classes~Can you implement two interfaces that both declare the same method, at the same time?~Yes");
		rawQuestions.add("330~Extending Classes~Can you make a class non-subclassable, if so how?~Yes, declare the class final");
		rawQuestions.add("331~Extending Classes~Can you make a method non-overridable, if so how?~Yes, declare the method final");
		rawQuestions.add("332~Extending Classes~Can you override a final variable in a subclass?~Yes");
		rawQuestions.add("333~Extending Classes~Can you override a variable in a subclass?~Yes");
		rawQuestions.add("334~Extending Classes~Can you override static methods?~No, but you can redefine them");
		rawQuestions.add("335~Extending Classes~Can you change a variable's type when overriding it in a subclass?~Yes");
		rawQuestions.add("336~Extending Classes~Can you run the main method of an abstract class?~Yes");
		rawQuestions.add("337~Extending Classes~Can you use the instanceof operator with interfaces?~Yes");
		rawQuestions.add("338~Extending Classes~Do abstract method definitions end with a semicolin?~Yes");
		rawQuestions.add("339~Extending Classes~Do all interface methods, and constants have to be public?~Yes");
		rawQuestions.add("340~Extending Classes~Does either down casting(going more specific) or up casting(going more general) need to have an explicit cast to work(ex: a=(A)b vs a=b)?~Down casting(going more specific) requires an explicit cast");
		rawQuestions.add("341~Extending Classes~Does static inheritance work the same as non-static inheritance?~No.<br>If you have a superclass and a subclass, both of which implement the same static method, and you instantiate a copy of both and assign them both to a superclass reference, only the superclass static method will be called");
		rawQuestions.add("342~Extending Classes~How do you access a constant in an interface?~Use the interface name . constant name. Ex: MyInterface.MY_CONSTANT");
		rawQuestions.add("343~Extending Classes~How do you call a superclass's method that you have overridden?~super.supermethod()");
		rawQuestions.add("344~Extending Classes~How do you declare and instantiate static inner classes?~public static class StaticClass{}<br>OuterClass.StaticClass s = OuterClass.StaticClass();");
		rawQuestions.add("345~Extending Classes~How do you get a reference to the outer class from within the inner class?~OuterClass.this");
		rawQuestions.add("346~Extending Classes~If a class declares that it implements some interface, does it have to provide the interface methods?~Not if one of it's superclasses implements the methods or if it is abstract");
		rawQuestions.add("347~Extending Classes~If a subclass is put into a different package than the superclass, can it override/inherit default(package level access) methods?~No");
		rawQuestions.add("348~Extending Classes~If a super class does not implement a default constructor, do you have to call super(with args) in your subclass constructors?~Yes");
		rawQuestions.add("349~Extending Classes~If a superclass has a private method, can it's subclass re-declare it?~Yes, because it doesn't inherit it");
		rawQuestions.add("350~Extending Classes~If you extend an abstract class, do you have to implement all the abstract methods?~Only if it is not abstract itself");
		rawQuestions.add("351~Extending Classes~If you have a class assigned to a variable who's type is the class's super type, can you execute the subclass's methods<br>ex:Employee e = new Manager();e.methodOnlyInManager();?~No");
		rawQuestions.add("352~Extending Classes~If you have an abstract method, does the class need to be declared as abstract?~Yes");
		rawQuestions.add("353~Extending Classes~If you implement an interface, do you have to implement all it's methods?~Only if the class implementing the interface is not abstract");
		rawQuestions.add("354~Extending Classes~Name access modifiers from weakest to strongest.~private, package(none), protected, public");
		rawQuestions.add("355~Extending Classes~What are all interface methods implicitly?~public and abstract");
		rawQuestions.add("356~Extending Classes~What are all variables in an interface implicitly?~public, static, and final");
		rawQuestions.add("357~Extending Classes~What is the default if you do not specify public for a method in an interface?~Public");
		rawQuestions.add("358~Extending Classes~What is the difference in declaring an inner class if you are outside vs inside the outer class?~If you are inside the outer class, you declare it like any other class : InnerClass i = new InnerClass();.<br>If you are outside of the outer class, the syntax is different : OuterClass.InnerClass i = outerClass.new InnerClass();");
		rawQuestions.add("359~Extending Classes~When declaring an abstract method (in an abstract class or interface), if you will throw any exceptions, do you have to add a throws clause for them?~Yes");
		rawQuestions.add("360~Extending Classes~When you override a method, can the method have a more restrictive access modifier(superclass:public a(), subclass:protected a())?~No");
		rawQuestions.add("361~Extending Classes~When you override a method, can you specify a stronger access modifier ex: superclass has a protected method, can the subclass override that method to be public?~Yes");
		rawQuestions.add("362~Extending Classes~When you override a variable in a subclass, does the new variable(in the subclass) shadow the superclass's variable?~This depends. In most cases, yes.<br>It only de-shadows the superclass's variable if you are calling a superclass method that references the variable, and the subclass is assigned to a superclass variable, or super.thatVariable is used.");
		rawQuestions.add("363~Extending Classes~When you try to call the overridden method of an object that is assigned to a variable who's type is the object's superclass, is the superclass's method called, or the subclass's method called?~The subclass's method is called");
		rawQuestions.add("364~Extending Classes~When you use an abstract class, do you extend it, or implement it?~Extend it");
		rawQuestions.add("365~Extending Classes~When you use an interface, do you extend it or implement it?~You can extend an interface to another interface, or implement an interface in a concrete or abstract class");
		rawQuestions.add("366~Extending Classes~If you call super(), does it have to be the first statement or call in a constructor?~Yes");
		rawQuestions.add("367~File I/O~Can you delete a directory with File.delete() if the directory is not empty?~No");
		rawQuestions.add("368~File I/O~Can you lock files or portions of a file?~Yes, but many of the operations are OS dependent.<br>You use the FileChannel and FileLock objects");
		rawQuestions.add("369~File I/O~Does creating a new File object with a new file name create a file?~No");
		rawQuestions.add("370~File I/O~Does creating a new Writer or Stream object create a new file if the file represented does not exist?~Yes.<br>You don't even have to do anything with it, or close it.");
		rawQuestions.add("371~File I/O~Does java allow you to change encoding schemes when reading or writing files. If so, how?~Yes.<br>You can specify a scheme as a parameter to a new Input/OutputStreamWriter object");
		rawQuestions.add("372~File I/O~Does java use big or little endian format when writing data do files, and what is the difference?~It uses big endian, which means that the most significant byte is first");
		rawQuestions.add("373~File I/O~How do you load properties from a file on disk?~FileInputStream fis = new FileInputStream(&lt;property file name&gt;);<br>&lt;Properties object&gt;.load(fis);");
		rawQuestions.add("374~File I/O~How do you save properties to a file on disk?~FileOutputStream fos = new FileOutputStream(&lt;property file name&gt;);<br>&lt;Properties object&gt;.store(fos, \"manditory comment\");");
		rawQuestions.add("375~File I/O~How do you usually construct useful file input and output objects?~First start with a FileInputStream, or a FileOutputStream.<br>Then you can keep wrapping the object in successive layers of FilterInput/OutputStream objects until you get what you want");
		rawQuestions.add("376~File I/O~If you construct a File object, and give a filename without a path, what is the filename relative to?~The directory that you were in when the program was launched");
		rawQuestions.add("377~File I/O~If you have a large file that you are dealing with, is there any way to speed things up?~Yes.<br>You can use the java.nio and java.nio.channels classes like FileChannel and MappedByteBuffer objects to store the whole file in memory, and access it as you would a buffer without having to create extra storage objects.<br>You can either have changes persist to the file or not persist");
		rawQuestions.add("378~File I/O~If you want to load properties files relative to the classpath, do you have to specify the property file in the classpath, or just the directory containing the property file?~The directory containing the file.<br>Then you must use ClassLoader's getResource method to return a URL, and call that URL's openStream method.<br>Once you have that InputStream, you can call Properties.load() on a properties object, and pass it that InputStream");
		rawQuestions.add("379~File I/O~Is there any interesting differences between File's getAbsolutePath() and getCanonicalPath()?~Yes.<br>The canonical path strips out things like . and .. where the absolute path does not.<br>Ex: dir1/../dir2(absolute) vs dir2(canonical)");
		rawQuestions.add("380~File I/O~Is there any utility to compare filenames besides comparing String objects?~Yes.<br>File.equals() can take into account case sensitivity/extra slashes and ignore them if they do not matter");
		rawQuestions.add("381~File I/O~What is the difference between stream classes and reader/writer classes?~Stream classes read and write bytes.<br>Readers/writers read and write characters");
		rawQuestions.add("382~File I/O~Will creating a file that does not exist, in a directory that does not exist create the directory?~No.<br>It will not create a file or directory, and it will throw an exception");
		rawQuestions.add("383~General~Are array elements given default values?~Yes");
		rawQuestions.add("384~General~Are compile time computations strictfp automatically?~Yes");
		rawQuestions.add("385~General~Are hex numbers case sensitive?~No.<br>0XfF is valid");
		rawQuestions.add("386~General~Are init blocks of superclasses run when their subclasses are loaded/instantiated?~Yes");
		rawQuestions.add("387~General~Are local variables given default values?~No");
		rawQuestions.add("388~General~Are the char, boolean, and numeric wrapper classes immutable?~Yes");
		rawQuestions.add("389~General~Are there any basic hash code 'rules'?~Yes.<br>Any two objects that are equal(based on .equals()) should return the same hash code");
		rawQuestions.add("390~General~Are there any interesting things with the Boolean wrapper class?~Yes.<br>Constructing one from a string can take a case insensitive \"true\". The result will be true. Anything else will be false");
		rawQuestions.add("391~General~Are there any problems with putting classes in the extensions directory?~There can be if those classes use any classes that are on the classpath.<br>The extension class loader does not use the classpath");
		rawQuestions.add("392~General~Are there any special types of javabean propertied?~Yes.<br>There are Indexed properties, that add a parameter (before any others) to specify an index to get or set, as well as the normal getter and setters for the whole array object.<br>Bound properties are properties which when changed, notify listeners.<br>Constrained properties are properties that are verified when changed.<br>If verification fails, the new value is rejected");
		rawQuestions.add("393~General~Are wrapper objects immutable?~Yes");
		rawQuestions.add("394~General~Can a constructor be declared as strictfp?~Not manually, but it will be if the class is declared that way");
		rawQuestions.add("395~General~Can Comparators be used when searching for primitives?~No");
		rawQuestions.add("396~General~Can the Math class use strictfp?~No.<br>You must use the StrictMath class");
		rawQuestions.add("397~General~Can you compare something to NaN?~You can use == to compare against Double.NaN or Float.NaN, but it will always return false because NaN can be one of several values and is un-ordered.<br>You should use Float.isNaN or Double.isNaN");
		rawQuestions.add("398~General~Can you make 'inline' methods in java?~Yes, but it is left to the compiler to decide if they should be inline or not.<br>Generally if the method is short, not-overridden, and frequently used, the compiler will make it inline");
		rawQuestions.add("399~General~Can you move values back and forth between a char and a short?~You can, but you will loose precision (char is unsigned, short has a sign bit)");
		rawQuestions.add("400~General~Can you nest conditional(tertiary) operators?~Yes");
		rawQuestions.add("401~General~Can you pass an array to a varargs parameter if the types are the same?~Yes");
		rawQuestions.add("402~General~Can you place a labeled continue or break statement outside of a loop?~No.<br>They must be inside the loop that has the labels declared right above it");
		rawQuestions.add("403~General~Can you use == or instanceof with incomparable types(ex Integer and int or Integer and String)?~No");
		rawQuestions.add("404~General~Can you use the & and | bitwise operators with booleans?~Yes, they work like && and || but they do not short circuit");
		rawQuestions.add("405~General~Can you use the instanceof operator with primitives?~No");
		rawQuestions.add("406~General~Can you use variables that have already been declared for your enhanced for loop variable?~No");
		rawQuestions.add("407~General~Do all 'collections' extend Collection?~No.<br>None of the Map classes (including Hashtable) do");
		rawQuestions.add("408~General~Does autoboxing(transparently using wrapped primitives in place of primitives and vice versa) work in every case?~No.<br>You must use the .equals() method to compare the wrapper objects instead of == unless you have a boolean, byte, char<=127, or short or int between -128 and 127");
		rawQuestions.add("409~General~Does java implement anything that allows you to use threads to accomplish a task safely and correctly without explicitly using locking or synchronizing?~Yes. You can use queues<br>(ex: java.util.concurrent.ArrayBlockingQueue).<br>These queues are thread safe, and allow a thread to add things to the queue and remove things from the queue");
		rawQuestions.add("410~General~Does main's signature (for running a class) have to be public static void main(String[] args)?~No.<br>It can be public static void main(String... x) and use varargs");
		rawQuestions.add("411~General~Does the default case of a switch statement have to be the last case?~No");
		rawQuestions.add("412~General~Do java and javac look in the current directory by default for files(as opposed to specifiying . on the classpath)?~Only javac does");
		rawQuestions.add("413~General~Do javabeans need a default constructor?~That is not in the spec, but many tools require them");
		rawQuestions.add("414~General~Do javabeans need to be serializable?~They don't have to be, but need to if you use javabean persistence.<br>They can be Externalizable as well");
		rawQuestions.add("415~General~How are chars represented?~By a 2 byte unsigned int");
		rawQuestions.add("416~General~How are javabeans packaged?~They are usually packaged in jar files containing a specific manifest format : Manifest-Version: 1.0 &lt;blank line&gt; Name: com/blah/MyBean.class Java-Bean: True &lt;blank line&gt; next bean... etc.");
		rawQuestions.add("417~General~How can you match an else statement to the correct if statement if there are several nested ifs?~An else will match the closest if or else if that is above it that does not already have an else");
		rawQuestions.add("418~General~How do you declare a vararg(variable argument) method?~With the last argument having a ... between the type and parameter name. Ex: public void test(String... s)");
		rawQuestions.add("419~General~How do you use a bound property in a javabean?~Create an instance variable PropertyChangeSupport pcs = new PropertyChangeSupport(this);<br>Then in the setter, call pcs.firePropertyChanged(&lt;property name as string&gt;, &lt;old value&gt;, &lt;new value&gt;);<br>Then you need to add two methods :<br>public void add/removePropertyChangeListener(PropertyChangeListener listener)<br>{<br>pcs.add/removePropertyChangeListener(listener);<br>}<br>To use it, implement PropertyChangeListener.<br>It defines one method : public void propertyChange(PropertyChangeEvent evt);");
		rawQuestions.add("420~General~How do you use a constrained property in a javabean?~It is almost exactly like a bound property, except all PropertyChange names are VetoableChange, and the setXXX() methods need to throw PropertyVetoException");
		rawQuestions.add("421~General~How do you use variable arguments inside a var args method?~The var args param in the method header translates to an Array of that type with that given name");
		rawQuestions.add("422~General~If an expression uses another declaration or variable that is strictfp, is that expression automatically strictfp as well?~Yes");
		rawQuestions.add("423~General~If either operand of the + operator is a String, are both concatenated?~Yes");
		rawQuestions.add("424~General~If there is a method a(Long l), and you call a(new Integer(5)), will it work?~No. Wrappers will not widen/shorten to another wrapper automatically");
		rawQuestions.add("425~General~If there were two overloaded methods a(Integer i) and a(int...a), which would a(5) call?~a(Integer i). The compiler will choose boxing over varargs");
		rawQuestions.add("426~General~If there were two overloaded methods a(Integer i) and a(long l), which would a(5) call?~a(long l). The compiler will choose widening over boxing");
		rawQuestions.add("427~General~If there were two overloaded methods a(long i) and a(double d), which would a(5) call?~a(long i). When an exact match is not found, the JVM picks the match with the smallest arg that is wider than the passed type");
		rawQuestions.add("428~General~If you have a basic class that does not import anything, has no member or static fields, and no methods except for a main that does not do anything, how many classes does the jvm load in Java 5?~295");
		rawQuestions.add("429~General~If you redefine .equals(), should you do anything else?~Yes, redefine hashcode");
		rawQuestions.add("430~General~If you run the java compiler on classes that are in packages(subdirectories), if you are using the -d option to specify where to put class files and the new location does not contain the package directory structure, will javac create the directory hierarchy that it needs?~Yes, but only if the base destination directory exists.<br>If the base destination directory does not exist, you will get a compiler error");
		rawQuestions.add("431~General~If you want to assign a floating point literal(a user defined number like 0.5) to a float, do you have to add a suffix?~Yes.<br>F or f");
		rawQuestions.add("432~General~In what order are init blocks of super/subclasses run?~static super, static sub, non-static super, non-static sub");
		rawQuestions.add("433~General~Is int[][] a[][]; valid?~Yes. It is the same as inta[][][][];");
		rawQuestions.add("434~General~Of what type is the result of any operation involving an int?~int, unless you are using a compound operator like +=, *= etc. on a float, double, etc.");
		rawQuestions.add("435~General~What are the javabean getter and setter naming conventions?~For each field, there is a getXXX() and setXXX() method where XXX is the field name with the first letter capitalized.<br>If the field is a boolean value, isXXX() is preferred to getXXX(), and if both are specified, isXXX() will take precidence.<br>If there are any strange things like fields that start with a capital etc., the tools seem to figure out the correct mapping(ex: NetBeans 6.1 will map getAName() to aName, and getBName to Bname");
		rawQuestions.add("436~General~What can be declared strictfp?~Classes, Interfaces, and non-interface methods.<br>Variables cannot be declared strictfp");
		rawQuestions.add("437~General~What characters can variable names start with or contain?~They can start with :<br>any letter, _, $, or anything verified by Character.isJavaIdentifierStart().<br>They can contain anything they can start with, as well as any number and anything allowed by Character.isJavaIdentifierPart()");
		rawQuestions.add("438~General~What does narrowing a primitive to(ex: long a=&lt;some big number&gt;; int c = (long)a);?~It will truncate the high order bits");
		rawQuestions.add("439~General~What does resolving the class mean?~It is the process of loading all classes that a given class depends on");
		rawQuestions.add("440~General~What does the -D option on java do?~It allows you to specify a system property and it's value on the command line (ex: java -Dprop1=\"hi there\" MyClass).<br>The quotes are optional if there are no spaces in the property value");
		rawQuestions.add("441~General~What does the Java language spec say that the .equals method should do?~x.equals(x)<br>if x.equals(y) then y.equals(x) should hold<br>if x.equals(y) and y.equals(x) then z.equals(x) should hold<br>if the objects you are comparing do not change, the equals method should return consistent values over time<br> for any non-null x: x.equals(null) should return false");
		rawQuestions.add("442~General~What does the strictfp modifier do?~It forces intermediate results to be platform independent.<br>By default, non-strictfp operations can yield different results on different platforms because it allows extra register space to be used for more precision");
		rawQuestions.add("443~General~What happens if you concat a null object onto a string, or call the String's static valueOf call and pass it a null object?~It concats/returns the string \"null\"");
		rawQuestions.add("444~General~What is a good way to redefine hashcode so that hash codes are scattered?~Add the hash codes of it's members or things that are meaningful in the .equals() method");
		rawQuestions.add("445~General~What is a javabean?~A reusable software component that can be manipulated easily in a builder tool");
		rawQuestions.add("446~General~What is the difference between Collection and Collections?~Collection is what Sets, Lists, and Queues implement.<br>Collections contains a set of static utillity methods");
		rawQuestions.add("447~General~What is the difference between java.lang.Comparable, and java.util.Comparator?~Comparable is an interface that classes implement that allows them to have one way of sorting.<br>Comparator is a interface that can be implemented by a class for the sole purpose of sorting something.<br>You can create as many Comparator classes for an object as you want");
		rawQuestions.add("448~General~What is the difference between StringBuffer and StringBuilder?~StringBuilder is not thread safe");
		rawQuestions.add("449~General~What is the difference between String s = \"asdf\"; and String s = new String(\"asdf\");?~In the second example, two strings are created.<br>One in pool and one in non-pool memory.<br>Pool memory is stored in perm-gen.<br>It can be garbage collected, just as classes can be loaded and unloaded.<br>If you call .intern() on a string, then you will get a string that has been put in the pool and will have an equal address as other same strings that are interned.<br>Also, all string literals are added to the pool");
		rawQuestions.add("450~General~What is the formula for the range of a type?~-2^(bits-1) to 2^(bits-1)-1");
		rawQuestions.add("451~General~What is the syntax for static imports?~import static &lt;thing&gt;; (ex: import static java.lang.System.out;).<br>You cannot say static import, it must be import static");
		rawQuestions.add("452~General~What method types does the compiler statically bound instead of dynamically bound?~private<br>static<br>final<br>and constrictor");
		rawQuestions.add("453~General~What must a switch statement's expression evaluate to?~A char, byte, short, int, or enum");
		rawQuestions.add("454~General~Why is it a good idea to close files when you are done with them?~It closes OS resources.<br>It can, but might not(it is not specified in the api) flush any pending output to the file if you are writing to it");
		rawQuestions.add("455~Generics~Are generic classes generic in just the code, or in the code, and byte code?~Generic classes are provided for compiler checks.<br>If the compiler says the code passed assignment checks, and everything is the correct type, it continues and treats the generic as a normal raw type");
		rawQuestions.add("456~Generics~Are there any optimizations that you can do when using multiple bounds on generics?~Yes.<br>If you implement a generic that is bounded by both a tagging supertype, and a non-tagging supertype (ex: Serializable and Comparable), if you place the non-tagging type first in the generic bounds list, the compiler will insert fewer casts");
		rawQuestions.add("457~Generics~Are there any standard letters to use when defining generic classes and methods?~Yes.<br>E for a type of collection, K and V for key and value, and T, R, S for any type");
		rawQuestions.add("458~Generics~Can you construct actual generic types?~Only through reflection (Class.newInstance() and Array.newInstance() methods)");
		rawQuestions.add("459~Generics~Can you create an array of generics, why or why not?~No.<br>If you could, there would be a problem because of erasure.<br>If types are erased, there is nothing to keep a Pair&lt;Integer&gt; and a Pair&lt;String&lt; from being put into the same array. If you have an array of Object, when you pull Pairs out at runtime.. what is the dynamic type... Pair, not Pair&lt;something&gt; so you loose type safety");
		rawQuestions.add("460~Generics~Can you define generic methods in both generic and non-generic classes?~Yes");
		rawQuestions.add("461~Generics~Can you do this : Some variable declared as List&lt;Animal&gt; gets a List&lt;Dog&gt; where Dog extends Animal... Why or why not?~No.<br>You can with Arrays because you can have an ArrayStoreException when trying to store the wrong type to an array index.<br>With generics, because of erasure, there is no way to throw an exception, because the generic type is lost");
		rawQuestions.add("462~Generics~Can you have both generic static and generic non-static methods?~Yes");
		rawQuestions.add("463~Generics~Can you pass a generic type to a method that takes a raw type, or assign a generic type to a raw type and vice versa?~Yes, but when going from a raw to a generic, you will get a compiler warning");
		rawQuestions.add("464~Generics~Can you use a generic type in a static field, or in a static method?~No.<br>You would have the same static instance field for all generic versions of that class");
		rawQuestions.add("465~Generics~Can you use generics to extend exception classes?~No");
		rawQuestions.add("466~Generics~Does anything bad happen when you cast or use the instanceof operator with generics?~The compiler will generate a warning, but will still compile fine.<br>You just need to make sure you guarantee to yourself that types are really what you think they are throughout the code that generated warnings");
		rawQuestions.add("467~Generics~How do you bound generics?~You use the extends keyword and & operator.<br>Ex: public class MyClass&lt;T extends Comparable&gt;<br>or<br>public class MyClass&lt;T extends Comparable & Serializable&gt;.<br>You can extend as many interfaces as you want, and you can extend a concrete class, but only one.<br>If you extend a concrete class, it must be first in the list if there is more than one");
		rawQuestions.add("468~Generics~How do you call a generic method?~ String val = MyClass.&lt;String&gt;getStr(myInput);<br>You should, however, be able to let the compiler infer the type and just say String val = MyClass.getStr(myInput);");
		rawQuestions.add("469~Generics~How do you define a generic class?~public class MyClass&lt;T, R, S, ...&gt; { then use that letter in place of a specific type<br>Ex: public T myMethod(T input) { T val = input; return val; }");
		rawQuestions.add("470~Generics~How do you define a generic method?~public static &lt;T&gt; T myMethod(T input){}");
		rawQuestions.add("471~Generics~If you are creating a generic method without creating a generic class, how do you declare the generic variable?~It goes before the return type<br>ex: public &lt;T&gt; void a(T t)");
		rawQuestions.add("472~Generics~Is there any way to help protect against smuggling the wrong type into a raw collection when using generics?~Yes.<br>You can use the Collections.checkedList() view to do runtime checks and throw an exception when the object is being stored.<br>Note that this does not protect against generics of generics ex: Pair&lt;Pair&lt;String,String&gt;&gt; vs Pair&lt;Pair&lt;Integer,Integer&gt;&gt;.<br>Ex: List&lt;String&gt; l = Collections.checkedList(someStringList, String.class);");
		rawQuestions.add("473~Generics~Is there any way to pass a generic subtype collection to a method with a generic superclass collection as a parameter(ex: List&lt;Cat&gt; c; to void a(List&lt;Animal&gt;))?~Yes.<br>You must change the method signature to be a wildcard (ex: void a(List&lt;? extends Animal&gt;).<br>You must also NOT add anything to the collection.");
		rawQuestions.add("474~Generics~What are bridge methods with respect to generic types?~They are methods that the compiler inserts into classes to help them polymorph correctly since generics can mess with polymorphism when you introduce subclasses of a generic class.<br>For example if a superclass is a generic type, and you want to overwrite getter (no params) then an interesting thing happens.<br>Types are erased from the superclass, and the superclass then has something like Object get().<br>What you were expecting is that your method would override the superclass method, so a bridge method of Object get() is created for the sub class.<br>You end up with two methods that are distinguished by only return types, but that is ok in bytecode because the compiler knows which one you mean to call, just not in typed code (where the compiler cannot infer that info).<br>Bridge methods are also created for methods that are co-variant in return types");
		rawQuestions.add("475~Generics~What does List&lt;?&gt; mean?~It is identical to List&lt;? extends Object&gt;");
		rawQuestions.add("476~Generics~What happens if you have a generic class that defines &lt;T&gt; and a generic method inside that class that defines &lt;T&gt;?~The method's &lt;T&gt; type will shadow the classes &lt;T&gt; type");
		rawQuestions.add("477~Generics~What happens when you call the .getClass() method on an instantiated generic class?~It returns the raw type");
		rawQuestions.add("478~Generics~What is bounding with respect to generics?~It is declaring your generic variables such that they must be in a certain class hierarchy like so : public &lt;T extends Dog&gt; void a(T t)");
		rawQuestions.add("479~GUI~Are inner classes the best way to add listeners to objects, and why?~Usually they are because you do not have to branch or match text back and forth like the ActionEvent.getActionCommand() method");
		rawQuestions.add("480~GUI~Are there any good ways to debug swing apps?~Yes. You can hit Ctrl+Shift+F1 and get layout info of the current window printed to the console.<br>You can also get some pretty cool actions and info by using setDebugGraphicsOptions<br>Ex: RepaintManager.currentManager(getRootPane()).setDoubleBufferingEnabled(false);<br>((JComponent) getContentPane()).setDebugGraphicsOptions(DebugGraphics.FLASH_OPTION);<br>Look at DebugGraphics for more options");
		rawQuestions.add("481~GUI~Can you add a JFrame to a JFrame or Jpanel?~No, a JFrame represents the actual window");
		rawQuestions.add("482~GUI~Can you create your own cursors, if so how?~Yes. Use the Tooklit.getDefaultToolkit.createCustomCursor and pass it an image, hotspot, and name");
		rawQuestions.add("483~GUI~Can you form the window frame to it's contents (keeping it square) after adding contents, rather than trying to fit all the contents to the window size, if so how?~Yes.<br>Use pack();");
		rawQuestions.add("484~GUI~Can you turn on an overwrite mode for text boxes, if so how?~Yes.<br>You must either subclass and add functionality, or you can use a Formatter and use the setOverwriteMode() to true.<br>The insert key will not affect overwrite mode");
		rawQuestions.add("485~GUI~Can you use HTML in labels, buttons, and menu items?~Yes, by starting the text with &lt;html&gt;");
		rawQuestions.add("486~GUI~Does JSlider have an addActionListener method?~No, it has an addChangeListener method that takes an implementation of ChangeListener");
		rawQuestions.add("487~GUI~Does pack() always squeeze everything tightly around the inserted components?~Only if setPreferredSize() has not been called");
		rawQuestions.add("488~GUI~Does setting a layout manager's vertical and horizontal gap size do the same thing across all look and feel implementations?~No");
		rawQuestions.add("489~GUI~Do you have to take care of updating or refreshing the checked/unchecked state of a checkbox?~No");
		rawQuestions.add("490~GUI~How can you copy an area of graphics to another part?~g.copyArea()");
		rawQuestions.add("491~GUI~How do you add actions to menu items?~You can add an action listener to a menu item, or create an extension of AbstractAction that can be used for a menu item as well as a toolbar");
		rawQuestions.add("492~GUI~How do you add an event listener to a button?~JButton b = new Jbutton(\"label\");<br>panel.add(b);<br>Action a = new Action();<br>b.addActionListener(a);<br>where Action is a class that implements ActionListener");
		rawQuestions.add("493~GUI~How do you add radio buttons?~First create a ButtonGroup object.<br>Then use the ButtonGroup's add method to add each radio button to the group.<br>You must also add each button to a panel, or frame as well");
		rawQuestions.add("494~GUI~How do you add scrolling abilities to a JTextArea?~Instedad of adding a JTextArea to a component, construct a JScrollPane, passing it the JTextArea, and add that JscrollPane to the component");
		rawQuestions.add("495~GUI~How do you associate a key or virtual key to an action?~InputMap = getInputMap(JComponent.&lt;which map ex: WHEN_ANCESTOR_OF_FOCUSED_COMPONENT&gt;;<br>imap.put(KeyStroke.getKeyStroke(KeyEvent.VK_B, InputEvent.CTRL_MASK), SOME_KEY);<br>alternatively you can pass an InputMap a string representation of the virtual key<br>ex: ActionMap amap = getActionMap();<br>amap.put(SOME_KEY, someActionObject);");
		rawQuestions.add("496~GUI~How do you change the cursor?~Call setCursor() on a component.<br>Pass it one of the constants in the Cursor class");
		rawQuestions.add("497~GUI~How do you change the look and feel?~UIManager.setLookAndFeel(\"look.and.feel.class\");<br>SwingUtilities.updateComponentTreeUI(panel);");
		rawQuestions.add("498~GUI~How do you create a tooltip?~Make sure you implement Action, or extend AbstractAction instead of ActionListener.<br>Then, in the constructor make a call to putValue() and pass it Action.SHORT_DESCRIPTION, as well as the text for the tooltip");
		rawQuestions.add("499~GUI~How do you draw shapes and lines?~Call the draw or fill method on a Graphics or Graphics2D object, and pass it the shape");
		rawQuestions.add("500~GUI~How do you get the key's code in a KeyListener method?~Call event.getKeyCode() which returns an int to be compared with KeyEvent.<that key's constant>");
		rawQuestions.add("501~GUI~How do you set(change) a layout?~panel/frame.setLayout(new layoutclass(optional args));");
		rawQuestions.add("502~GUI~How do you tell if a radio button was selected?~There are two ways.<br>1 - use an action listener for each selection.<br>2 - Call setActionCommand() to set the action, and call buttonGroup.getSelection().getActionCommand to match which is selected");
		rawQuestions.add("503~GUI~How do you use fonts?~Font f = new Font(\"SansSerif\", Font.BOLD, 14);<br>g.setFont(f);<br>g.drawString(msg, x, y);");
		rawQuestions.add("504~GUI~How do you use keystroke listeners?~Use addKeyListener() on a panel, frame, or control, and pass it a class that implements KeyListener");
		rawQuestions.add("505~GUI~If you are adding a large number of items to a combo box, should you do anything differently than calling it's addItem() method?~Some say to construct a DefaultComboBoxModel, call addElement() on it for each element you want to add, and then call the setModel() method of the JComboBox.<br>Both are generally fast unless you add many elements.<br>For example, the first method took a couple of seconds longer to load when there were two JComboBoxes each populated with 50000 elements");
		rawQuestions.add("506~GUI~If you are changing sizes or layouts, what should you call to refresh the screen?~Call revalidate() on the surrounding container, or if you want to refresh the entire frame, call validate() on the frame");
		rawQuestions.add("507~GUI~Is disabling menu items in a menu action listener a good idea?~Probably not because an accelerator key can bypass that disabling effect and run that menu item's action");
		rawQuestions.add("508~GUI~Is there any non-intutitive behavior that occurs when manually typing and then bluring a JComboBox?~Yes.<br>An ActionListener gets called twice.<br>Once for comboBoxChanged, and again for comboBoxEdited");
		rawQuestions.add("509~GUI~Is there any way to automate the testing of a GUI?~Yes.<br>There is a java.awt.Robot class that can automate mouse clicks and key presses");
		rawQuestions.add("510~GUI~What are the main formatters you can use with JFormattedTextField to only accept certain patterns or characters?~1 - Basic number commit/revert on lost focus : construct a JFormattedTextField with NumberFormat.getXxxInstance() to specify what type of number you would like. The defualt is a commit or revert scheme, but this can be changed to only commit or only revert.<br>2 - Create an actual filter : Construct a JFormattedTextField and construct it with InternationalFormatter anonymous inner class, overwritting DocumentFilter getDocumentFilter() that returns a subclassed DocumentFilter, which overrides a method to modify the text when it is changed.<br>3 - Add a input verifier that automatically returns focus to a poorly formatted text field if focus leaves it in a bad state : Extend InputVerifier, and call setInputVerifier on the text field, passing the subclass of InputVerifier.<br>4 - Verify a date : Create a JFormattedTextField and construct it with a DateFormat object.<br>5 - Make sure a string is a correct representation of an object : If you have an object like URL that takes a string in it's constructor and can produce a correct result using toString(), you can use it to verify that object by constructing a JFormattedTextField with a DefaultFormatter, and then passing a new instance of the class you want to validate to the setValue() method of the JFormattedTextField.<br>6 - Verify a formatted string with possible special characters in set places (ex: xxx-xxxx for a phone number) : Use a MaskFormatter that is constructed with the correct sequence and mask, to construct a JFormattedTextField.<br>7 - Create a custom formatter : Extend DefaultFormatter and override the methods String valueToString(Object value), and Object stringToValue(String text). These functions should throw a parse exception if the object or string is invalid");
		rawQuestions.add("511~GUI~What are the main layout types?~BorderLayout<br>FlowLayout<br>GridLayout<br>BoxLayout");
		rawQuestions.add("512~GUI~What basic things do you need to do to create a GUI app?~Create a frame and panel (from JFrame and JPanel), set the frame to be visible, add the panel to the frame, and add anything else to the panel");
		rawQuestions.add("513~GUI~What can you add a border to, and how do you do it?~You can add a border to anything that is subclassed from JComponent by calling it's setBorder() method and passing it an instance of a Border class");
		rawQuestions.add("514~GUI~What do you use to get events from a text field?~An ActionListener is called on enter key events.<br>A DocumentListener is called when data is inserted, deleted, or changed.<br>A DocumentListener is NOT called when an enter key is pressed");
		rawQuestions.add("515~GUI~What do you usually do to implement a button that does something?~Create a button using Jbutton,<br>Create a class that implements ActionListener,<br>add what you want the button to do to the ActionPerformed(ActionEvent) method of that new class,<br>and add that class to the button using addActionListener()");
		rawQuestions.add("516~GUI~What methods are required to be implemented for DocumentListener?~public void insertUpdate(DocumentEvent e),<br>public void removeUpdate(DocumentEvent e),<br>public void changedUpdate(DocumentEvent e)");
		rawQuestions.add("517~GUI~What methods does ChangeListener require you to implement?~public void stateChanged(ChangeEvent e)");
		rawQuestions.add("518~GUI~What methods does KeyListener require you to implement?~keyPressed(KeyEvent),<br>keyReleased(KeyEvent),<br>keyTyped(KeyEvent)");
		rawQuestions.add("519~GUI~What methods does MouseListener require you to implement?~mouseClicked,<br>mouseEntered,<br>mouseExited,<br>mousePressed,<br>mouseReleased");
		rawQuestions.add("520~GUI~What methods does MouseMotionListener require you to implement?~mouseDragged,<br>mouseMoved");
		rawQuestions.add("521~GUI~What methods does the ActionListener interface require that you implement?~Just one : actionPerformed(ActionEvent)");
		rawQuestions.add("522~GUI~What should you use to get the text of a JPasswordField?~You can use getText(), but it returns a string(immutable) that keeps the password in jvm memory until it is garbage collected.<br>getPassword() returns a char[] that you can overwrite after you are done using it");
		rawQuestions.add("523~GUI~When using JSpinner, are there any non-intuitive things you need to remember?~Yes.<br>When creating an AbstractSpinnerModel extention, call fireStateChanged() at the end of setValue().<br>Also, do not call setValue(), or set the final value in getNextValue() of getPreviousValue()");
		rawQuestions.add("524~GUI~Will a JFormattedTextField that is constructed with a DateFormat object also verify that the date exists (ex: Feb 34, 2010)?~If it is an invalid date, a date object is created and it is rolled forward or backwards (ex: Feb 34 gets set to Mar 6)");
		rawQuestions.add("525~GUI~Will the JSlider's getValue() method return floating point values if the slider is between two numbers?~No, it will round up or down to the nearest whole number");
		rawQuestions.add("526~Inner Classes~Can local inner classes see local variables of the method they are defined in?~Yes, if the local variables are final");
		rawQuestions.add("527~Inner Classes~Can you declare and use an inner class inside a static or non-static method?~Yes");
		rawQuestions.add("528~Inner Classes~Can you declare a 'nested' class to be public?~No. The compiler tells you it should be in it's own file");
		rawQuestions.add("529~Inner Classes~Can you declare a normal inner class inside an interface?~Yes, but it will automatically be made public and static");
		rawQuestions.add("530~Inner Classes~Does the java compiler do anything to change the constructor of an inner class?~Yes. It adds the implicit parameter (this) of the outer class");
		rawQuestions.add("531~Inner Classes~How can you create a new instance of the innerclass?~Create an outerclass instance, and then write <outerclass instance>.new <Innerclass name>()<br>Ex: person.new Shoes() or new Person().new Shoes();");
		rawQuestions.add("532~Inner Classes~How can you explicitly reference a part of the outerclass from an innerclass?~<OuterClassName>.this.<attribute> Ex: Person.this.eye where Person is the outerclass, and eye is one of it's member variables");
		rawQuestions.add("533~Inner Classes~How do you access the 'this' element of an outer class from within an inner class?~Classname.this");
		rawQuestions.add("534~Inner Classes~How do you create an instance of a static inner class?~Just like you would any normal class ex : StaticPerson sp = new StaticPerson();");
		rawQuestions.add("535~Inner Classes~If an inner class has the same name as another class in the same package, what will happen?~The inner class will take precedence when you try to declare/instantiate an object by that name");
		rawQuestions.add("536~Inner Classes~Is there any possible security risk when using inner classes that access private outer class variables?~Yes. The compiler adds accessors for those members so that the inner class can get to them");
		rawQuestions.add("537~Inner Classes~What is an anonymous inner class and why would you want to use one?~It is an inner class that is only used once.<br>You use it almost the same as an inner class, but instead of defining one outside of a method, you simply include a class definition between the parenthases and semicolin at the end of a statement that creates a new object like Person p = new Person();<br>Ex: Person p = new Person() { public void a() {} };<br>If the supertype of anonymous inner class is an inteface, the  anonymous inner class implements it, if the supertype is a actual class, the anonymous inner class will extend it");
		rawQuestions.add("538~Inner Classes~What is an inner class and why would you want to use one?~An inner class is exactly that, a class declared inside another class's definition.<br>Some uses of inner classes are creating a class that is only accessible by the class it is wrapped in, not having to create more getters and setters for private variables just to accommodate one class, and creating a new class type without actually formally defining one.<br>Mostly, inner classes are used with callbacks ex: the Timer class, or in Swing, but some things that you might not want to normally create a whole class file for can be accomplished with this method");
		rawQuestions.add("539~Inner Classes~What is a static inner class and how do you use it?~It is the same as an inner class with the exception that it has no implicit reference to the outer class, and it can be used in static methods");
		rawQuestions.add("540~Internationalization~Can unicode characters be used outside of quotes?~Yes, they can be used pretty much anywhere.<br>Ex:<br>puclic static void main(String[] args).<br>This code will compile and run normally");
		rawQuestions.add("541~Internationalization~Can you fine tune international sorting of strings?~Yes.<br>You can control Strength and Decomposition.<br>Strength has three options.<br>Primary strength makes no distinction with regards to capitalization or accents. Secondary strength determines if there is a difference between capitalized and lowercase. Tertiary strength makes distinctions with respect to capitalization as well as accents.<br>Decomposition determines how to break apart characters when comparing them (base+accent, half or full width etc). You can use strengths and decomposition by calling their setXxx methods on java.text.Collation objects");
		rawQuestions.add("542~Internationalization~Can you have resource classes?~Yes.<br>You name the classes MyClass.java, MyClass_en.java, MyClass_en_CA.java etc.<br>Then call ResourceBundle b = ResourceBundle.getBundle(\"MyClass\", locale); Note, if there are both bundle classes, and bundle properties files with the same names (MyClass.properties and MyClass.java) the classes take precidence and are loaded");
		rawQuestions.add("543~Internationalization~Can you keep a formatter from rolling dates (ex changing Feb 30 into Mar 2)?~Yes.<br>You can turn on and off 'leniency' by calling fmt.setLenient(boolean)");
		rawQuestions.add("544~Internationalization~Can you speed up comparison of international strings?~Yes.<br>If you use java.text.CollationKeys, you will speed up comparisons because they are computed hashes so to speak of international strings.<br>You can save these 'hashes' and then compare the hashes for ordering instead of comparing a character by character each time.<br>You can get a CollationKey like this:<br>CollationKey k = coll.getCollationKey(myString);<br>Note that only keys from the same collation can be compared");
		rawQuestions.add("545~Internationalization~Does java support variants (differences in a specific language, in a specific country)?~Yes. It is specified as an additional parameter when constructing a Locale");
		rawQuestions.add("546~Internationalization~How can you construct an object identifying a country and language?~Locale l = new Locale(\"fr\", \"CA\"); Locale l = Locale.CANADA_FRENCH;");
		rawQuestions.add("547~Internationalization~How can you format a string such that it can contain parameters(ex: Hello %s) that are not only inserted into the correct places, but also are computed to take locale into account?~You can use the MessageFormat class.<br>String msg = MessageFormat.format(\"Hi {0}. Today is {1, date, long}.\", name, new Date());<br>This will take the default locale into account when inserting things like dates, ints(including primitives), etc.<br>You can specify an alternative locale like this :<br>MessageFormat mf = new MessageFormat(str, locale);<br>String msg = mf.format(new Object[] {&lt;values&gt;});<br>You can also fine tune parameters by giving them a type(number, time, date, choice, integer, currency, percent) and a style(short, medium, long, full).<br>DecimalFormat and SimpleDateFormat can also be used to get specific formats.<br>For the choice type, an example is this : {1,choice,0#no|1#maybe|2#yes} where each element (separated by a comma) after the choice type is a limit (&lt;=0,1,&gt;=2).<br>You can do tings like unicode infinity signs etc before the # sign which is really a synonym for &lt;=");
		rawQuestions.add("548~Internationalization~How can you format dates to different locales?~DateFormat fmt = DateFormat.getDate/Time/DateTimeInstance(&lt;datestyle, timestyle or only one&gt;, locale);<br>Date now = new Date(); fmt.format(now);");
		rawQuestions.add("549~Internationalization~How can you parse a date string into a Date?~DateFormat fmt = DateFormat.getDateInstance(&lt;style such as DateFormat.MEDIUM&gt;);<br>Date input = fmt.parse(&lt;some string&gt;);");
		rawQuestions.add("550~Internationalization~How can you print the locale in it's own language?~System.out.println(l.getDisplayName(Locale.CANADA_FRENCH));");
		rawQuestions.add("551~Internationalization~How can you sort international strings correctly?~You can use Collators.<br>Collators are comparison objects that take into account locales.<br>Collator c = Collator.getInstance(locale);<br>if (coll.compare(a,b)&lt;0) ...<br>-OR-<br>Collections.sort(strings, coll)");
		rawQuestions.add("552~Internationalization~How can you tag a currency with a different local without formatting it in that local?~You can use numberFormat.setCurrency(Currency.getInstance(&lt;currency string&gt;);");
		rawQuestions.add("553~Internationalization~How can you take a formatted number for another locale, and parse it into a double or long?~NumberFormat n = NumberFormat.getXxxInstance(&lt;optional locale&gt;);<br>Number num = n.parse(&lt;string with . and , but no other non-numeric chars like $&gt;);<br>System.out.println(num.doubleValue());");
		rawQuestions.add("554~Internationalization~How do you get the default Locale?~Locale l = Locale.getDefault();<br>The JVM determines this from the host's operating system settings and preferences");
		rawQuestions.add("555~Internationalization~How do you internationalize numbers and dates?~Use Number/DateFormat.getInstance(locale);<br>String s = formatter.format(someNumber/Date);");
		rawQuestions.add("556~Internationalization~How do you print out a number formatted as a number/currency for a locale?~java.text.NumberFormat f = NumberFormat.getNumber/CurrencyInstance(locale);<br>System.out.println(f.format(1234.5));");
		rawQuestions.add("557~Internationalization~How do you use resource bundles with properties files?~Create several properties files (such as props.properties, props_en.properties, props_en_CA.properties).<br>Then you can call ResourceBundle bundle = bundle.getString(\"props\"), locale);<br>String myElement = bundle.getString(\"someProperty\");");
		rawQuestions.add("558~Internationalization~How do you use resource classes?~Create a class that is named with the right format (MyClass_en_CA for example), and extend ListResourceBundle.<br>Create a method public Object[][] getContents() { return contents; }. Create another method private static final Object[][] contents = { {key, value},{key2, value2},...} where the keys are strings and the values are objects.<br>Then to get a class resource, call bundle.getObject(key), and cast it's return value to whatever the value really is.<br>Alternatively, you can implement a class resource bundle by extending ResourceBundle.<br>With this option you implement two methods : Enumeration&lt;String&gt; getKeys() and Object handleGetObject(String key) that enumerates all keys, and looks up an object given a key");
		rawQuestions.add("559~Internationalization~Is there anything wrong with using chars to traverse a string?~If there are supplementary unicode characters, the traversal will not work as expected.<br>There will be counting issues.<br>String codePoint methods should be used");
		rawQuestions.add("560~Internationalization~Is there any way to convert from unicode to normal characters etc?~Yes. Use the java.nio.charset.Charset class");
		rawQuestions.add("561~Internationalization~What is a locale?~The API says it is a geographical, political, or cultural region");
		rawQuestions.add("562~Internationalization~What is native2ascii?~It is a tool that converts all non ASCII files to ASCII files with escaped unicode codes.<br>You can use this to convert java source files as well as resource files since resource files must be in ASCII format.<br>If you pass -reverse to the app, it changes all unicode escaped codes to their character equivilents");
		rawQuestions.add("563~Internationalization~What is the searching order for resource bundles?~bundleName_currentLocaleLang_currentLocaleCountry_currentLocaleVariant -> strip variant -> strip country -> bundleName_defaultLocaleLang_defaultLocaleCountry_defaultLocaleVariant -> strip variant -> strip country -> bundleName -> MissingResourceException.<br>Note that if it finds one, it still loads the others as parents, and consults them if resources are missing in the first existing file");
		rawQuestions.add("564~Internationalization~Will String.length() work on a string with extended unicode characters?~It will compile and execute, but will not return the correct answer.<br>You should use String.CodePointCount() because length() will return an answer as if all the characters were two bytes or one code point.<br>Ex: \u0041\u00DF\u6771\uD801\uDC00<br>will return 5 from length() and 4 from CodePointCount()");
		rawQuestions.add("565~java/javac/tools~What is apt?~The Annotation Processing Tool.<br>It is a wrapper around javac, and can be used to... process annotations.<br>One example I have seen is a @Note annotation that was made.<br>It was used to mark methods as incomplete, and also give them a priority.<br>If you create an Annotation Processing Factory by implementing com.sun.mirror classes found in tools.jar in the JDK's lib dir.<br>Specifically you implement AnnotationProcessorFactory and AnnotationProcessor.<br>You then run apt instead of javac, but you add the -factory flag and give it the AnnotationProcessorFactory class to use.<br>Then, when compiling, it could output all places where methods still need to be finished, with their priorities");
		rawQuestions.add("566~java/javac/tools~What is javah?~It is a C header and stub generator that is used in writing native code");
		rawQuestions.add("567~java/javac/tools~What is javap?~It is a class file disassembler");
		rawQuestions.add("568~java/javac/tools~What is extcheck?~It is used to detect jar conflicts");
		rawQuestions.add("569~java/javac/tools~What is pack200/unpack200?~They are tools that convert jar files to pack files and vice versa.<br>The benifit of using a pack file is the compression algorithm is tuned to class files, but you cannot simply unzip it to look at the contents");
		rawQuestions.add("570~java/javac/tools~What is jvisualvm?~It is a graphical tool that lets you see memory, thread, and class levels.<br>It also will analyze heap dumps, core dumps, and save a thread stack snapshot easily");
		rawQuestions.add("571~java/javac/tools~What is jconsole?~It is a graphical tool that lets you see memory, thread, and class levels.<br>It also lets you manage MXBeans");
		rawQuestions.add("572~java/javac/tools~What is jps?~It is like ps(a tool that lists processes running), but does so for only java apps");
		rawQuestions.add("573~java/javac/tools~What is jstat?~It is a command line tool that outputs statistics on a running process.<br>Usage: jstat -&lt;what you want to see&gt; &lt;pid&gt; &lt;milliseconds between updates&gt;<br>Ex: jstat -gc 1234 1000");
		rawQuestions.add("574~java/javac/tools~What is jstatd?~It is a RMI app(daemon) that monitors vms running and can log information about them");
		rawQuestions.add("575~java/javac/tools~What is jinfo?~It is a command line tool that prints info like VM options, and environmental variables about a process");
		rawQuestions.add("576~java/javac/tools~What is jhat?~It is the Java Heap Analysis Tool.<br>It has an embedded web server that you can use with a browser to read a heap dump");
		rawQuestions.add("577~java/javac/tools~What is jmap?~It is a command line tool that prints shared object memory maps and heap usage of a process or core dump.<br>jmap &lt;pid&gt;<br> jmap -heap:format=b &lt;pid&gt;");
		rawQuestions.add("578~java/javac/tools~How can you startup a process with the ability to create a hprof heap dump?~java -Xrunhprof:format=b,file=&lt;filename&gt;.hprof &lt;Classname&gt;");
		rawQuestions.add("579~java/javac/tools~How can you turn on remote debugging for an app?~-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000");
		rawQuestions.add("580~java/javac/tools~What is jstack?~It is a command line tool that prints all thread stack traces for a process");
		rawQuestions.add("581~java/javac/tools~Can a classpath specified in a jar's manifest specify jars within that jar to use?~No. You must write your own class loader using something like URLClassLoader, specify a jar URL like jar:file:./inner.jar!/outer.jar, and then use a JarInputStream to read each entry and load that class");
		rawQuestions.add("582~java/javac/tools~Can you compile a java file that is declared to be in a certain package when the file is not actually in a package?~Yes, if it only references things that are in correct packages/locations");
		rawQuestions.add("583~java/javac/tools~Can you list all of the -X params, if so how?~Yes : java -X");
		rawQuestions.add("584~java/javac/tools~Are there any special things to remember when creating manifest files for jar files?~Yes.<br>If you are manually editing a manifest file, or manually adding one to a jar, there must be a newline character after the last line.<br>If you use the jar utility to add your own manifest file, it will automatically add a new line character for you");
		rawQuestions.add("585~java/javac/tools~Can a classpath specified in a jar's manifest specify jars within that jar to use?~No.<br>You must write your own class loader using something like URLClassLoader, specify a jar URL like jar:file:./inner.jar!/outer.jar, and then use a Jar");
		rawQuestions.add("586~java/javac/tools~How can you get debug output describing what classes are being loaded?~java -verbose Application");
		rawQuestions.add("587~java/javac/tools~How can you know what classes are being loaded and unloaded?~-XX:+TraceClassloading -XX:+TraceClassUnloading");
		rawQuestions.add("588~java/javac/tools~How can you look everywhere in a jar or in a classpath to find some resource?~URL url = &lt;SomeClass&gt;.class.getResource(&lt;resource name in string form&gt;)");
		rawQuestions.add("589~java/javac/tools~How do you create a signed jar?~Really, you need a third party registration.<br>Then you can say if you want to trust an app or not (all or nothing).<br>At that point, you can create a policy file that tells what permissions you want the applet or app to get.<br>This info can be added to the &lt;home dir&gt;.java/deployment/deployment.properties file with a line such as deployment.user.security.policy=file:///blah");
		rawQuestions.add("590~java/javac/tools~How do you generate javadoc files from comments in source code?~Run javadoc with any fine tune options.<br>Usually the standard is to go to the directory right below your base (the directory containing com. Then run javadoc -d &lt;directory to write comment files to&lt; -subpackages &lt;base package&gt;");
		rawQuestions.add("591~java/javac/tools~How do you sign and verify a jar?~jarsigner -keystore &lt;somename&gt;.store myJar.jar;<br>jarsigner -verify myJar.jar");
		rawQuestions.add("592~java/javac/tools~How do you start and end javadoc comments?~/** ... */");
		rawQuestions.add("593~java/javac/tools~Is there any alternative to the zipped version or a jar file, if so, what is the difference?~Yes.<br>As of Java 5, there is pack200.<br>This is a compression algorithm that is based on having lots of class files.<br>It is designed to specifically compress and optimize the transfer of class files.<br>If a jar is mostly resource files, use zip, otherwise, use pack200");
		rawQuestions.add("594~java/javac/tools~What compile param will check for certain warnings?~-Xlint");
		rawQuestions.add("595~java/javac/tools~What is JDPA?~It is the Java Platform Debugger Architecture.<br>It has three layers:<br>JDI(Java Debug Interface) - A high level Java interface that includes support for remote debugging<br>JDWP(Java Debug Wire Protocol) - A defining format of information and requests transferred while debugging<br>JVMTI(Java Machine Tool Interface) that replaces the JVMDI(Java Machine Debug Interface) and JVMPI(Java Machine Profiler Interface)");
		rawQuestions.add("596~java/javac/tools~What does signing a jar do to the jar?~It modifies the MANIFEST.MF in the META-INF dir, and adds &gt;name&lt;.DSA and &lt;name&gt;.SF");
		rawQuestions.add("597~java/javac/tools~What does -Xlint:unchecked do?~-Xlint tells you about warnings.<br>It is a compiler flag.<br>Following it with something like :unchecked narrows the warnings to a more specific subset");
		rawQuestions.add("598~java/javac/tools~What do index files in jars do?~They map what classes are in what jars so that in the case where a jar file specifies other jar files, if the class loader is searching for a jar file, it does not need to download all the jars in the order specified to find the one class.<br>It can see which jar contains the specific class and download it without waiting for everything else");
		rawQuestions.add("599~java/javac/tools~What happens if you try to add a class to a package that has been signed in a jar?~You will get a java.lang.SecurityException: sealing violation");
		rawQuestions.add("600~java/javac/tools~What HTML modifiers can you include in javadoc comments?~em(emphasis), code(monospace), strong(string emphasis), and img(image)");
		rawQuestions.add("601~java/javac/tools~What is jar sealing and why would you want to do it?~It can keep people from adding classes to packages.<br>Reasons for wanting to do this may include not wanting to grant access to package visible elements or keeping versions straight.<br>You can sign a jar by adding a Signed: true line to it's manifest jar.<br>You can do this for the whole jar, or for specific packages.");
		rawQuestions.add("602~java/javac/tools~What is the average way to create an executable jar?~jar cvfm MyJar.jar manifest.mf -C &lt;classes&gt; *;<br>where &lt;classes&gt; is the base .class directory, and manifest.mf file contains the line  Main-Class: &lt;the main class to run&gt;");
		rawQuestions.add("603~java/javac/tools~What is the difference between -, -X, and -XX?~- is standard, -X is non-standard (not guarenteed to be in all Vms), and -XX needs specific requirements or privileges many times");
		rawQuestions.add("604~java/javac/tools~What java parameter do you need to use to enable jmx monitoring?~-Dcom.sun.management.jmxremote<br>To enable this for remote connections, add -Dcom.sun.management.jmxremote.port=8899<br>To disable security, add -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false<br>To use password protection, you need to setup jmxremote.access and jmxremote.password files");
		rawQuestions.add("605~java/javac/tools~What special javadoc comments can classes have?~@author name<br>@version text<br>@since test<br>@deprecated text<br>@see reference (where reference is package.class#feature label, &lt;a href...&gt;label&lt;/a&gt;, or text");
		rawQuestions.add("606~java/javac/tools~What special javadoc comments can fields have?~None");
		rawQuestions.add("607~java/javac/tools~What special javadoc comments can methods have?~@param var desc<br>@return desc<br>@throws class desc");
		rawQuestions.add("608~java/javac/tools~When compiling java files with javac, can you use wild cards ex: javac E*.java?~Yes");
		rawQuestions.add("609~java/javac/tools~Where can you add 'javadoc' comments?~Packages, Public classes and interfaces, Public and protected methods, and Public and protected fields");
		rawQuestions.add("610~java/javac/tools~Where do javadoc comments go?~Directly above the thing you are commenting unless they are package comments.<br>You can place a file called package.html in the root of the package you are commenting, and sun has a template to follow in creating a package.html");
		rawQuestions.add("611~JSP~Are there any implicit variables you can access via the EL?~Yes.<br>pageContext,<br>param,<br>paramValues,<br>header,<br>headerValues,<br>cookie(returns an actual Cookie object),<br>initParam,<br>pageScope,<br>requestScope,<br>sessionScope,<br>and applicationScope");
		rawQuestions.add("612~JSP~Are there any 'reserved words' in the EL?~Yes.<br>Mostly operators like div, mod, eq, ne, lt, gt, le, ge, and, or, not, and empty");
		rawQuestions.add("613~JSP~Are there xml equivilents to JSP expressions?~Yes.<br>&lt;jsp:expression&gt;some expression&lt;/jsp:expression&gt;. You cannot mix the xml style with the non-xml style in the same page");
		rawQuestions.add("614~JSP~Can you change the JSP buffer size for outputting to the client?~Yes.<br>&lt;%@ page buffer=\"&lt;some number&gt;kb\"%&gt;");
		rawQuestions.add("615~JSP~Can you check the session without creating a new one if none exists?~Yes.<br>Use &lt;%@ page session=\"false\"%&gt;");
		rawQuestions.add("616~JSP~Can you disable EL in the JSP?~Yes.<br>&lt;%@ page isELIgnored=\"true\"%&gt;");
		rawQuestions.add("617~JSP~Can you do something conditionally when a bean is created and not when it is being found after already being created?~Yes.<br>If you have an opening and closing tag for &lt;jsp:useBean&gt; you can place statements between the opening and closing tags. These statements will only be executed if the bean is being created");
		rawQuestions.add("618~JSP~Can you have comments that do not appear in the resulting html output?~Yes.<br>&lt;%-- comment --%&gt;");
		rawQuestions.add("619~JSP~Can you include init/shutdown methods that are auto called?~Yes.<br>You can override jspInit() and jspDestroy()");
		rawQuestions.add("620~JSP~Can you map a url to a JSP file?~Yes.<br>Use a &lt;jsp-file&gt; entry in web.xml instead of a &lt;servlet-class&gt; entry to get a servlet name for use in a mapping entry");
		rawQuestions.add("621~JSP~Can you override doGet/doPost from within the JSP?~No.<br>You will not get an error, but no.<br>You will get an error however if you try to overload/write things like _jspService()");
		rawQuestions.add("622~JSP~Can you set all bean properties from the request object without specifying each one?~Yes.<br>&lt;jsp:setProperty beanName=\"beanName\" property=\"*\"/&gt;");
		rawQuestions.add("623~JSP~Can you specify which files from a directory to attempt to load if only a directory is specified as a URL?~Yes.<br>Use the &lt;welcome-file-list&gt; block in web.xml, and include in it &lt;welcome-file&gt; elements with values such as index.html, i.jsp, etc.");
		rawQuestions.add("624~JSP~Can you use JSP 2.0 tag library processes in a 2.0 compliant container, from within a JSP 1.2 webapp?~Yes");
		rawQuestions.add("625~JSP~Can you use only the class name, and not include the package name in the useBean's class attribute if you import that package?~No");
		rawQuestions.add("626~JSP~Can you use the predefined JSP variables in declaration methods?~Only if you pass them.<br>They are local to _jspService()");
		rawQuestions.add("627~JSP~Do directives get put in the _jspService() method?~They are, but not directly.<br>They are parsed specially and may not be in the order they were typed");
		rawQuestions.add("628~JSP~Does jsp:useBean create a new instance, find a previous one, or both?~It will use an existing bean if one in the specified scope already exists.<br>Otherwise, it will create a new one");
		rawQuestions.add("629~JSP~Does the &lt;c:out&gt; tag have any optional attributes?~Yes.<br>escapeXML by default is true.<br>Also default allows you to specify a default if the value is evaluated to null");
		rawQuestions.add("630~JSP~Does the include directive have an xml equivilent?~Yes.<br>&lt;jsp:directive.include file=\"somefile\"/&gt;.<br>Both the main and included pages must use either xml or non-xml syntax");
		rawQuestions.add("631~JSP~Do you have to use double quotes with directives?~No.<br>You can substitute single quotes, and escape either if needed in the values");
		rawQuestions.add("632~JSP~How are scriptlets and non-scriptlets transformed to servlet code?~Scriptlet code is inserted into _jspService() exactly as it is.<br>Html is converted to print statements and inserted");
		rawQuestions.add("633~JSP~How can you add an attribute to a tag lib?~You simply add a setter for that variable using javabeans naming conventions ex: public void setMyAttr(Strting) for a var(attribute) myAttr.<br>In the tld file, you need an &lt;attribute&gt; block with a &lt;name&gt; element(what the attribute is), a &lt;required&gt; attribute (true/false), and an optional &lt;rtexprvalue&gt; element(default false) that can allow EL or scripting as the value of the attribute if set to true.<br>If &lt;rtexprvalue&gt; is true, you can pass it any object(using EL). If it is false, you must use a String as an attribute");
		rawQuestions.add("634~JSP~How can you declare methods, member variables, static/nonstatic init blocks, or anything that is valid to put in a class, outside a method (JSP declarations)?~Use &lt;%! //put stuff here %&gt;");
		rawQuestions.add("635~JSP~How can you modify the body of a taglib(for use as a filter or something)?~Use a string writer to write the body to, then modify the string, and write out the modified string.<br>Ex:<br>StringWriter sw = new StringWriter();<br>getJspBody().invoke(sw);<br>String modded = sw.toString();<br>//modify the modded variable<br>JspWriter out = getJspContext().getOut();<br>out.print(modded);");
		rawQuestions.add("636~JSP~How can you output &lt;% or %&gt; in a JSP?~Escape the %. ex: &lt;\\%");
		rawQuestions.add("637~JSP~How can you save a bean from a servlet, so that it is accessable via a jsp with jsp:useBean?~You need to call the setAttribute(key, value) method of the request, session, or servletContext to store the bean.<br>Then use that same key for the id attribute of jsp:useBean");
		rawQuestions.add("638~JSP~How can you tell a servlet to go to a JSP?~javax.servlet.RequestDispatcher r = request.getRequestDispatcher(relativeURLThatCanIncludeJspsInWEBINF);<br>r.forward(request, response);<br>The url on the browser will not change to the new address, but will still show the original address.<br>Because of this, remember that any references to things like stylesheets etc. need to use the full reference(from the webapp root, rather than from the current page)");
		rawQuestions.add("639~JSP~How do you access a parent tag from a taglib?~There are two methods :<br>getParent()<br>and<br>findAncestorWithClass(JspTag fromTag, Class toBeMatchedClass)<br>ex: OuterTag parent = (OuterTag)findAncestorWithClass(this, OuterTag.class);");
		rawQuestions.add("640~JSP~How do you create a EL function?~You can use any class's public static function as the EL function.<br>The only real changes you need to make are : <br>In the tld file, you need a &lt;function&gt; block that includes a &lt;name&gt; element, a &lt;function-class&gt; element, and a &lt;function-signature&gt; element<br>Ex: &lt;function-signature&gt;java.lang.String doThing(java.lang.String)&lt;/function-signature&gt;<br>Then call the function like this in the jsp after doing a normal @taglib directive line :<br>${prefix:name(params)}");
		rawQuestions.add("641~JSP~How do you create a java class to be used as a tag library?~Generally you extend the SimpleTagSupport class.<br>The class must have a no-arg constructor.<br>You need to override the public void doTag() method.<br>To get the output stream, call getJspContext.getOut().<br>A new instance of the tag handler class is created for every tag occurrence on the page");
		rawQuestions.add("642~JSP~How do you create a JSP file that uses a tag lib?~You need a line that imports the tag lib.<br>It must include a attribute (url) that tells the container where the tld file is, and a prefix, which is some new string that kindof represents that taglib as an object.<br>Ex: &lt;%@ taglib uri=\"/WEB-INF/example.tld\" prefix=\"mytag\" %&gt;.<br>Then to use it, have a line &lt;prefix:taglibNameFromTLD optionalAttributes=\"\"/&gt;");
		rawQuestions.add("643~JSP~How do you create a JSP tag file?~You create a jsp fragment file with a .tag extention, and place it into a tags directory inside WEB-INF.<br>In the JSP that uses the tag file, the only things that change are instead of uri, you use tagdir, and give it \"/WEB-INF/tags\", and the text to use for the name (after the prefix:) is the name of the tag file without the .tag extention.<br>Ex: &lt;prefix:myTag /&gt;");
		rawQuestions.add("644~JSP~How do you create a Tag Library(basic steps)?~You need a class that represents the actions of what you want the new tag to do.<br>You also need a .tld file that the a JSP can reference to know how to use the new tag.<br>The last thing you need is to add some code to a JSP file to invoke the new tag");
		rawQuestions.add("645~JSP~How do you create a tld file for a tag library?~Aside from the boilerplate xml and namespace etc lines, you need a &lt;tag&gt; block.<br>At the minimum, you need a &lt;name&gt;(suffix) element, a &lt;tag-class&gt;(the actual java file that represents this tag lib), a &lt;body-content&gt; element that can be empty(no body), scriptless(the default for a body that allows EL), tagdependent(Does not translate EL, it keeps it as-is), and JSP(only in JSP 1.2 or less).<br>The tld file must be in the WEB-INF directory tree");
		rawQuestions.add("646~JSP~How do you create attributes for a tag file?~At the beginning of the tag file, include a &lt;%@ attribute name=\"someName\" required=false %&gt;, and then access that variable in the jsp fragment as if it was an in scope variable");
		rawQuestions.add("647~JSP~How do you create the old style, classic tags(JSP 1.2), Java class?~You extend either TagSupport or BodyTagSupport (javax.servlet.jsp.tagext package).<br>For basic tags you just need to override the public int doStartTag() method.<br>Depending on if your tag has a body or not, you should return a constant like SKIP_BODY, EVAL_BODY_INCLUDE, EVAL_BODY_AGAIN, EVAL_BODY_BUFFERED, and EVAL_PAGE.<br>You can also override doEndTag().<br>If you want to manipulate the body, you should use BodyTagSupport which adds two methods : doAfterBody() and getBodyContent().<br>Most everything else is the same as the newer JSP 2.0 spec for implementing the Java class.<br>The tld and JSP changes should be the same as the newer tag library process, with the exception of the version number");
		rawQuestions.add("648~JSP~How do you import something in a JSP page?~&lt;%@ page import=\"package.class\"%&gt;<br>-OR-<br>&lt;%@ page import=\"blah, blah, ...\"%&gt;");
		rawQuestions.add("649~JSP~How do you print the body of a tag file to a client?~&lt;jsp:doBody/&gt;");
		rawQuestions.add("650~JSP~How do you send the body of a tag lib to a client?~This is usually the incatation : getJspBody().invoke(null)");
		rawQuestions.add("651~JSP~How do you use EL to access a property of a variable?~${var.property} is the basic syntax.<br>You can also use ${var[\"property\"]} to specify a property at runtime, or to access a certain element of a collection or hashtable");
		rawQuestions.add("652~JSP~How do you use &lt;jsp:getProperty&gt;?~&lt;jsp:getProperty name=\"beanName\" property=\"propertyName\"/&gt;");
		rawQuestions.add("653~JSP~How do you use jsp javabeans?~You include a line : &lt;jsp:useBean id=\"name\" class=\"package.SomeClass\"/&gt;");
		rawQuestions.add("654~JSP~How do you use &lt;jsp:setProperty&gt; to set a property to a request parameter?~&lt;jsp:setProperty name=\"beanName\" property=\"beanProperty\" param=\"nameOfRequestParam\"/&gt;<br>You can also implicitly set it from the request object if the parameter name and the bean property are the same like this :<br>&lt;jsp:setProperty name=\"beanName\" property=\"beanProperty\"/&gt;");
		rawQuestions.add("655~JSP~How do you use &lt;jsp:setProperty&gt; to set some value you have?~&lt;jsp:setProperty name=\"beanName\" property=\"propertyName\" value=\"some value\"/&gt;");
		rawQuestions.add("656~JSP~How do you use the &lt;c:catch&gt; tag?~Create a &lt;c:catch&gt; block.<br>Any code in that block that throws an exception will pick up at the code right after the closing &lt;/c:catch&gt; tag.<br>If the optional var attribute is used, the exception thrown will be stored in a page scoped attribute that var specified.<br>Using this is highly discouraged because that logic shold not be handled in a JSP");
		rawQuestions.add("657~JSP~How do you use the &lt;c:choose,when,otherwise&gt; tags?~A &lt;c:choose&gt; block's purpose groups &lt;c:where&gt; and &lt;c:otherwise&gt; tags. &lt;c:where&gt; has a test attribute that acts like the &lt;c:if&gt; tag.<br>There can be many &lt;c:where&gt; tags within a &lt;c:choose&gt; tag block and these are mutually exclusive.<br>Even if more than one test passes, only the first &lt;c:where&gt; tag to match will be executed.<br>If no &lt;c:where&gt; tags match, and there is a &lt;c:otherwise&gt; tag is there, the &lt;c:otherwise&gt; tag will execute");
		rawQuestions.add("658~JSP~How do you use the &lt;c:forEach&gt; and &lt;c:forTokens&gt; tags?~&lt;c:forEach var=\"i\" begin=\"1\" end=\"10\" step=\"2\"&gt;${i}&lt;/c:forEach&gt;.<br>&lt;c:forEach var=\"item\" items=\"${list}\"&gt;${item}&lt;/c:forEach&gt;.<br>&lt;c:forTokens var=\"item\" items=\"asdf,asdf,asdf\" delims=\",\"&gt;${item}&lt;/c:forTokens&gt;");
		rawQuestions.add("659~JSP~How do you use the &lt;c:if&gt; tag?~&lt;c:if test=\"some el test<br>Ex: ${i&gt;3}\"&gt;conditional body&lt;/c:if&gt;");
		rawQuestions.add("660~JSP~How do you use the &lt;c:import&gt; tag?~&lt;c:import&gt; has an attribute url, that specifies a url, to include, and an optional var attribute that if specified, puts the string in that var instead of sending it to the client.<br>The &lt;c:import&gt; tag can be used as a block tag and include &lt;c:param name=\"\" value=\"\"/&gt; elements");
		rawQuestions.add("661~JSP~How do you use the contentType directive?~&lt;%@ page contentType=\"text/html\"&gt;");
		rawQuestions.add("662~JSP~How do you use the &lt;c:out&gt; tag?~&lt;c:out value=\"something\" default=\"optionalSomething\"/&gt;");
		rawQuestions.add("663~JSP~How do you use the &lt;c:redirect&gt; tag?~&lt;c:redirect url=\"\"/&gt; works in one of two ways : if the url is absolute, the it sends a 3xx code so the browser will redirect.<br>If the url is relative, it will do a RequestDispatcher forward, and the browser will not redirect, the server will just send the redirected content");
		rawQuestions.add("664~JSP~How do you use the &lt;c:set&gt; and &lt;c:remove&gt; tags?~&lt;c:set&gt; can have either a var attribute(setting a new scoped attribute), or a target attribute (modifying some pre-existing object).<br>There can also be an optional scope attribute.<br>With the &lt;c:set&gt; target, there is also a property attribute, and both have a value attribute. With &lt;c:remove&gt;, if no scope is specified, all scoped vars(in any scope) with that name are removed");
		rawQuestions.add("665~JSP~How do you use the &lt;c:url&gt; tag?~The &lt;c:url&gt; tag, or block with &lt;c:param&gt; elements, will do URL rewriting and encoding for you (for session tracking or for spaces in param values etc.)");
		rawQuestions.add("666~JSP~If the request parameter that matches a jsp:setProperty call does not exist, is the bean property changed?~No");
		rawQuestions.add("667~JSP~If you use a regular EL like ${name} what scope will be checked to find the variable?~First PageContext, then HttpServletRequest, HttpSession, and ServletContext (in that order)");
		rawQuestions.add("668~JSP~If you want to use the string ${ in a JSP page that allows EL, how do you do it?~Escape the $. ex: \\${");
		rawQuestions.add("669~JSP~Is there a default content type in a JSP?~Yes<br>text/html");
		rawQuestions.add("670~JSP~Is there a different get / post handler in a JSP?~No.<br>The servlet's service method calls _jspService() which handles both get and post requests");
		rawQuestions.add("671~JSP~Is there an xml equivilent to a JSP scriptlet?~Yes.<br>&lt;jsp:scriptlet&gt;code&lt;/jsp:scriptlet&gt;.<br>The xml and non-xml cannot be mixed in the same page");
		rawQuestions.add("672~JSP~Is there an xml equivilent to declarations?~Yes.<br>&lt;jsp:declaration&gt;//stuff&lt;/jsp:declaration");
		rawQuestions.add("673~JSP~Is there an xml equivilent to directives?~Yes.<br>&lt;jsp:directive.directiveType attrivute=\"value\" /&gt;.<br>The xml and non xml versions cannot be both used in the same page");
		rawQuestions.add("674~JSP~Is there any difference in how to identify the bean to use between useBean and get/setProperty?~Yes.<br>useBean has the id attribute, while get/setProperty has the name attribute");
		rawQuestions.add("675~JSP~Is there a standard prefix when using the JSTL?~Yes.<br>It is: c");
		rawQuestions.add("676~JSP~What are the predefined variables available in a JSP?~request, response, session, out, application, config, pageContext, page");
		rawQuestions.add("677~JSP~What does &lt;@ page autoFlush=\"false\"%&gt; do?~It throws an exception if the sending buffer gets full");
		rawQuestions.add("678~JSP~What happens if you use EL, and it cannot find a matching variable?~A empty string is returned");
		rawQuestions.add("679~JSP~What is a JSP directive?~It is something that affects the overall structure of the servlet that results from the JSP, and includes import, contentType, pageEncoding, session, isELIgnored, buffer, autoFlush, info, errorPage, isErrorPage, isThreadSafe, language, and extends");
		rawQuestions.add("680~JSP~What is the difference between a JSP scriptlet and a JSP expression?~A scriptlet is actual java code contained within &lt;% and %&gt; tags.<br>An expression is contained within &lt;%= and %&gt; tags, has no semicolin, is one thing, and must evaluate to a value which is then output.<br>Scriptlets contain statements, expressions return values");
		rawQuestions.add("681~JSP~What is the difference between &lt;%@ include file=\"somefile\"/&gt; and &lt;jsp:include page=\"somefile\"/&gt;?~The jsp:include really like an include that cannot share data with the main page, but still has access to the request.<br>&lt;jsp:include&gt; can also include a &lt;jsp:param&gt; that can override params on the request, but only applies to the included page, not the main page.<br>&lt;jsp:include&gt; also has an optional flush=\"true\" attribute that will force the main page to be flushed before including the secondary page.<br>The include directive allows you to share data, but you have to touch the main page each time the included page chages");
		rawQuestions.add("682~JSP~What is the formate of a JSP directive?~&lt;%@ directive attribute=\"value\" %&gt;<br>-OR-<br>&lt;%@ directive attrivute1=\"value\" attribute2=\"value\" ... %&gt;");
		rawQuestions.add("683~JSP~What is the general format for JSP EL?~Name : ${name}<br>-OR-<br>HI : &lt;jsp:include page=\"${firstName}blah${lastName}\"/&gt;");
		rawQuestions.add("684~JSP~What is the &lt;jsp:forward&gt; tag?~It simply forwards you somewhere else");
		rawQuestions.add("685~JSP~What scope options does the jsp:useBean have?~page, request, session, and application.<br>The default is page");
		rawQuestions.add("686~JSP~What variables can the EL output?~Any scoped variable");
		rawQuestions.add("687~JSP~Where can you use the JSP EL(expression language)?~Anywhere normal text or JSP expressions are allowed");
		rawQuestions.add("688~JUnit~How can you create a global setup and teardown system for all junit tests you will run?~You can extend TestSetup instead of TestCase, and then using a TestCase class to load the TestSetup class before junit runs it's test methods");
		rawQuestions.add("689~JUnit~What are the basic things you need to do to create a junit test?~Create a test class that extends junit.framework.TestCase.<br>Create a method for each test that starts with 'test' (must be lower case).<br>Call one of TestCase's assert methods like assertEquals()");
		rawQuestions.add("690~JUnit~What is the basic structure for a junit target in ant?~Include a &lt;junit&gt; block with &lt;test&gt; and &lt;classpath&gt; elements.<br>It can optionally include &lt;batchtest&gt; and &lt;junitreport&gt; blocks");
		rawQuestions.add("691~JUnit~What methods can you implement in a TestCase extention to do setup and cleanup?~setUp() and tearDown()");
		rawQuestions.add("692~JUnit~When creating TestCase classes, what can you do instead of leaving a testXXX method with a blank body?~Throw an exception so you don't forget to implement a test and have it always pass");
		rawQuestions.add("693~JUnit~When creating try/catch blocks to catch exceptions that should happen for some tests, are there any naming conventions to keep in mind?~Yes.<br>Name the exception variable expected");
		rawQuestions.add("694~JUnit~Where is a good place to put test classes?~In the same package(to give access to protected methods), but a different directory(Parallell package paths)");
		rawQuestions.add("695~JUnit~Why are tests that are dependent on each other a bad idea?~There are three main reasons:<br>They are not portable (the reflection api does not guarentee in what order it returns method names).<br>They are hard to maintain(If one test changes, you may have to change another test to keep from getting lots of errors).<br>They are hard to read(You may need to understand distant test cases to fully grasp the one you are working on)");
		rawQuestions.add("696~Logging~By default, where are all Log messages that use Loggers directed?~System err, not system out");
		rawQuestions.add("697~Logging~Does calling System.setProperty(\"java.util.logging.config.file\", file); work?~No, the VM has already initialized logging by the time that the code will have run");
		rawQuestions.add("698~Logging~How can you configure default logging options?~By changing the logfile.<br>The default is : jre/lib/logging.properties");
		rawQuestions.add("699~Logging~How can you filter log messages?~You can create and use a filter.<br>First create a class that implements Filter.<br>Then implement one method : public boolean isLoggable(LogRecord record).<br>Then you can check the string form of the log data (record.getMessage()) and return true if you want to log it, otherwise false.<br>Then, where you want to log, instantiate one of your Filter classes and pass it to logger.setFilter().<br>You can also get the record's class, method etc. info");
		rawQuestions.add("700~Logging~How can you specify a different logging.properties file to use?~Use the java parameter :<br>-Djava.util.logging.config.file=<some file>");
		rawQuestions.add("701~Logging~How can you tell the logger to push logs to a file?~Create a FileHandler, and use the Logger class's addHandler() method to add the FileHandler to the logger.<br>Then you will get both screen and file output.<br>You can disable the screen output by calling logger.useParentHandlers(false);");
		rawQuestions.add("702~Logging~What is a more customized way to do general logging?~import java.util.logging.*;<br>Logger logger = Logger.getLogger(\"some key\");<br>logger.setLevel(Level.INFO);<br>logger.log(Level.INFO, message);");
		rawQuestions.add("703~Logging~What is the easiest way to log?~import java.util.logging.*;<br>Logger.global.setLevel(Level.INFO);<br>Logger.global.info(\"log stuff\");");
		rawQuestions.add("704~Memory~Can finalize be called more than once on the same instance?~No. Even if it does not finish the method, or if the finalize call creates a new reference to the to be deleted current object, which is then no longer to be deleted");
		rawQuestions.add("705~Memory~Can the VM garbage collect island references(islands of isolation) that refer to each other, but are not reffered to by code that is somewhere in scope?~Usually(IF they are discovered in the GC algorithm, they will be collected)");
		rawQuestions.add("706~Memory~Can you set the young generation memory size to anything?~Yes, but setting it to 1/2 or more of the heap forces only major collections because the young generation guarentee cannot be met");
		rawQuestions.add("707~Memory~Does Sun recommend object pooling or calling System.gc()?~No. Pooling causes objects to stay around longer than they normally would. The GC has enough knowledge to make good decisions as to when to garbage collect");
		rawQuestions.add("708~Memory~Does the GC compact to prevent fragmentation?~Only in tenured, not in young");
		rawQuestions.add("709~Memory~How can you get GC details?~-verbose:gc");
		rawQuestions.add("710~Memory~Is the PermGen mem size included in the heap?~No, it is pre-reserved, and then the max heap is allocated");
		rawQuestions.add("711~Memory~Should you do anything to your memory params when using concurrent GC opts?~Yes, increase it. There must be more contiguous memory to prevent major Gcs because of thread buffers");
		rawQuestions.add("712~Memory~Should you worry if you are having just a few major Gcs?~Anytime you have major Gcs, Sun recommends that you look at your memory opts");
		rawQuestions.add("713~Memory~What does the concurrent collector do and how do you enable it?~It concurrently does garbage collection while the app is running.<br>-XX:+UseConcMarkSweepGC<br>Drawbacks: slows slightly the app but there will be no big pauses for GC during execution. It probably will not work on uniprocessor machines because it uses 1/Nth of the CPU where N is the number of processors.<br>It gets better as N increases");
		rawQuestions.add("714~Memory~What does the throughput collector do and how do you enable it?~It allows more threads (normally 1 per cpu) to do GC.<br>-XX:+UseParallelGC<br>Side effects include gaps in tenure because each thread has a part of tenured + a buffer");
		rawQuestions.add("715~Memory~What is a SoftReference?~It is a reference that the garbage collector ignores if it needs more memory.<br>It can be used to implement caches");
		rawQuestions.add("716~Memory~What is a WeakReference?~It is a reference that the garbage collector ignores if there are no more regular references.<br>Objects that are only referenced by weak references can be collected");
		rawQuestions.add("717~Memory~What percent of your mem should you take into account for floating garbage(Things that die right after being checked by the GC, and sit until the GC finishes and checks again)?~20%");
		rawQuestions.add("718~Memory~What significance is 'finalize' in java?~It is the name of a method that you can declare in a class.<br>This method will be executed when the VM does a garbage collection.<br>Usually you should not rely on this method because you do not know for sure when garbage collection will occur, if it will occur");
		rawQuestions.add("719~Networking~Can you interrupt a thread in which a socket is blocking, or waiting for a timeout to connect or read?~Only if you use the java.nio.SocketChannel class to open a connection. Ex: SocketChannel sc = new SocketChannel.open(new InetSocketAddress(host, port)); Scanner in = new Scanner(sc); OutputStream os = Channels.newOutputStream(sc); If a thread is executing these or reads, and blocking, then a interrupt() call to that thread will cause the thread to generate a ClosedByInterruptException");
		rawQuestions.add("720~Networking~Can you pass parameters to remote objects in rmi?~Yes, if they are serializable");
		rawQuestions.add("721~Networking~Does URL/URLConnection handle https?~Yes");
		rawQuestions.add("722~Networking~Do you get feedback (ex: 404 messages etc.) if something in the request goes wrong?~Not automatically.<br>URLConnection will throw a FileNotFoundException.<br>When you catch and handle this exception, create an InputStream object that is assigned the return value of casting the URLConnection to a HttpURLConnection, and calling getErrorStream() on it.<br>Ex: InputStream err = ((HttpURLConnection) connection).getErrorStream();<br>Now you can read it like a normal stream, and see the output of any special error page etc.<br>If you do not care about a special error page, you can get the http return status with HttpURLConnection's getResponseCode() method");
		rawQuestions.add("723~Networking~Do you have to do anything before running an rmi server class?~Yes.<br>If you are pre java 1.5, you must compile the implementation class, and then run rmic on it to create a stub.<br>You must run rmiregistry, and then start the server class");
		rawQuestions.add("724~Networking~Do you have to worry about encoding names and values (ex change spaces to %20)?~Yes.<br>There is a utility class to help you with this : URLEncoder.<br>It has the method enccode(value, charset); where a charset example is \"UTF-8\"");
		rawQuestions.add("725~Networking~How can you get ip address/host info and convert back and forth?~Use the java.net.InetAddress class");
		rawQuestions.add("726~Networking~How do you create a server with sockets?~import java.net.ServerSocket;<br>ServerSocket s = new ServerSocket(port);<br>Socket incoming = s.accept();<br>InputStream is = incoming.getInputStream();<br>OutputStream os = incoming.getOutputStream();<br>Scanner in = new Scanner(is);<br>PrintWriter out = new PrintWriter(os, true);");
		rawQuestions.add("727~Networking~How do you use a Socket to connect to a host/port?~import java.net.Socket;<br>Socket s = new Socket(\"some.host.name\", port);<br>InputStream is = s.getInputStream();<br>Scanner in = new Scanner(is);<br>in.nextLine();<br>you can also replace scanner with : BufferedReader br = new BufferedReader(new InputStreamReader(is)); br.readLine();");
		rawQuestions.add("728~Networking~If you are doing a POST in a url connection, do you have to call anything before sending data?~Yes.<br>You need to call setDoOutput(true);<br>At this point, you can get a PrintWriter, and on the same line(separated by '&') send name value pairs for post data");
		rawQuestions.add("729~Networking~If you create a subclass of a remote object(one that extends UnicastRemoteObject), can you call methods that the subclass adds?~No.<br>Stubs are only created for UnicastRemoteObjects.<br>Because of this, when you lookup a class from the registry, only the superclass stub is returned, which does not know about the added subclass methods");
		rawQuestions.add("730~Networking~If you run a server that registers some objects with an rmi registry, can you kill the process after the object are registered, and still have access to them?~No.<br>Killing the server after something has been registered seems to force clients that are then started to quit with strange connection or authentication errors");
		rawQuestions.add("731~Networking~Is there a higher level abstraction for connections to take care of https and do things like set and get headers etc?~Yes.<br>URL and URLConnection.<br>Ex: URL url = new URL(\"http://google.com\");<br>URLConnection con = url.openConnection();<br>con.connect();<br>From this point you can do things like use get/setRequestProperty() etc.<br>Note that you must call setDoInput() or setDoOutput() if you wish to send/receive data");
		rawQuestions.add("732~Networking~Is there any specific ordering of when you need to call URLConnection methods that may not be obvious?~Yes.<br>SetDoInput(), setDoOutput(), and setUseCaches() must be called before connect()");
		rawQuestions.add("733~Networking~Is there anything different about hashCode() and equals() when dealing with remote objects?~Yes.<br>They do not take into account the contents of the object when executing.<br>This is because something could go wrong in execution so hashCode() and equals() would need to throw a RemoteException.<br>The problem is that subclass methods that override cannot throw more exceptions than the superclass versions of the method.<br>The equals method returns true if two references refer to the same server object.<br>The hashCode is computed only from the object identifier");
		rawQuestions.add("734~Networking~Is there any way that you don't have to extend UnicastRemoteObject in the implementation class for a remote object, so you can extend another class?~Yes.<br>Instead of extending UnicastRemoteObject, you can call UnicastRemoteObject.exportObject(this,0); in the implementation's constructor");
		rawQuestions.add("735~Networking~Is there any way to delay the loading of objects into an rmi registry until they are called (like lazy loading)?~Yes.<br>You can use rmi activation.<br>This is a little more involved, and includes incantations.<br>You do everything the same as you would in normal rmi, but you change the Implementation of the remote class's definition and constructor as well as create an activation class to replace the server class.<br>You also need a security polict and a rmid policy file.<br>You also need to launch rmid, and when you launch the activation class, it will exit upon finishing main()");
		rawQuestions.add("736~Networking~What code do you need to create a remote object?~You generally need three things.<br>You need an interface, to use so that the client and server both are aware of a remote object's structure.<br>You need an implementation of the remote object.<br>You need a server to register remote objects");
		rawQuestions.add("737~Networking~What index does the n in java.net.URLConnection.getHeaderFieldKey(n) start at?~1.<br>Although, the getHeaderFields() call does return a list where the first field key is null, but the value is valid");
		rawQuestions.add("738~Networking~What is a stub?~An ordinary method on a proxy object");
		rawQuestions.add("739~Networking~What is parameter marshaling?~The process of encoding parameters");
		rawQuestions.add("740~Networking~What is rmi?~Remote Method Invocation allows you to access methods of an object you have access to that resides on a remote jvm");
		rawQuestions.add("741~Networking~What rules does the client rmi code need to adhere to?~Construct a context object using javax.naming.InitialContext (ex: Context context = new InitialContext();).<br>Then do lookups on a remote registry (ex: Product p = (Product) context.lookup(url + \"name you bound it to the registry with\"); where url is something like String url = \"rmi://localhost/\";)");
		rawQuestions.add("742~Networking~What rules does the server rmi code have to adhere to?~The remote object interface must extend java.rmi.Remote, and all it's methods must throw a java.rmi.RemoteException.<br>The implementation must extend java.rmi.remote.UnicastRemoteObject, and implement the interface.<br>All implementation methods must throw java.rmi.RemoteException.<br>The server must create an InitialContext object (ex: Context context = new javax.naming.InitialContext();) and when it instantiates the remote object implementation, must call context's bind() method to actually register them (ex: ProductImpl p = new ProductImpl(); context.bind(\"rmi:myproduct\", p);");
		rawQuestions.add("743~Networking~Why does the server class not exit when main() is finished running?~When you create a class that extends java.rmi.server.UnicastRemoteObject, a separate thread is spawned that keeps the process alive indefinitely");
		rawQuestions.add("744~Networking~Will the call Socket s = new Socket(\"someplace.com\", someport); timeout if it does not get a response?~No.<br>It can block indefinitely.<br>To add a timeout do the following :<br>Socket s = new Socket();<br>s.connect(new InetSocketAddress(\"someplace.com\", someport), timeout);<br>To set a timeout for a read, call s.setSoTimeout(timeout);");
		rawQuestions.add("745~OOP~Are all final variables really final?~Yes and no.<br>They are final in the sense that they always point to the same object.<br>The reference cannot change.<br>The problem is that if the object being pointed to is not immutable, it's contents can change");
		rawQuestions.add("746~OOP~Are all strings shared if they are the same?~Only constants are, or if the string was created with String.intern()");
		rawQuestions.add("747~OOP~Are default members visible to sub-classes?~Only if the subclasses are in the same package");
		rawQuestions.add("748~OOP~Are local variables given defaults if none are specified?~No");
		rawQuestions.add("749~OOP~Are there any tips on what to name classes, interfaces, and methods?~Yes.<br>You can name Classes to be nouns (Person), Interfaces to be adjectives (Runnable), and Methods to be verb-nouns (getBalance)");
		rawQuestions.add("750~OOP~Are there any basic rules to remember when implementing compareTo()?~Yes.<br>x.compareTo(y) should return a number who's sign is opposite of the sign returned from y.compareTo(x)");
		rawQuestions.add("751~OOP~Are there any things to remember when returning objects from methods?~Yes.<br>If you are returning a mutable object, you should clone it and return the clone");
		rawQuestions.add("752~OOP~Are you limited to just one static/normal init block?~No.<br>You may have as many of either as you want");
		rawQuestions.add("753~OOP~By default, what access is given to a var/class if none is specified?~Package visibility");
		rawQuestions.add("754~OOP~Can a final instance var be initialized via a method called in a constructor?~No");
		rawQuestions.add("755~OOP~Can an object access the private member variables of another object of the same class?~Yes");
		rawQuestions.add("756~OOP~Can any member(method or variable) of a class be used in a call to a superclass constructor (ex: super(&lt;here&gt;))?~Only statics");
		rawQuestions.add("757~OOP~Can constructors be called on an object to re-initialize it?~No");
		rawQuestions.add("758~OOP~Can constructors be final?~No.<br>You get a compile error");
		rawQuestions.add("759~OOP~Can the main method of a class call that class's private constructor?~Yes");
		rawQuestions.add("760~OOP~Can you call a static method from one of it's instantiated classes Ex: A a = new A(); a.myStaticMethod()?~Yes");
		rawQuestions.add("761~OOP~Can you create a clone method in an object without implementing Cloneable?~Yes, but if you call Object's clone (super.clone()) it will throw a CloneNotSupportedException");
		rawQuestions.add("762~OOP~Can you have a private or protected class?~No.<br>It won't compile");
		rawQuestions.add("763~OOP~Can you have two different methods that have the same types and numbers of arguments, but in different orders?~Yes");
		rawQuestions.add("764~OOP~Can you re-declare and shadow a var in a lower code block?~No, you can only shadow member variables inside functions either by declaring them locally or having them passed as method parameters");
		rawQuestions.add("765~OOP~Can your return statment be anything other than return; when a return type is void?~No");
		rawQuestions.add("766~OOP~Do all declared classes need to have a name matching the class file name that they are in?~No.<br>Only public classes need to match names.<br>There can only be one public class per file.<br>You can however have as many package access classes in a file as you want, and instantiate them from the same class as well as package level classes");
		rawQuestions.add("767~OOP~Does args[0] from the command line refer to the program name, or the first argument after the program name?~The first argument after the program name");
		rawQuestions.add("768~OOP~Does every class that extends an abstract class need to implement all abstract methods?~Only non abstract classes(abstract classes can extend abstract classes).<br>The first concrete class must implement all abstrace methods");
		rawQuestions.add("769~OOP~Does the compiler decide whether you can call a method based on the reference type instead of the object type?~Yes");
		rawQuestions.add("770~OOP~Does the main method of a class have access to it's class's private fields and methods?~Yes");
		rawQuestions.add("771~OOP~Do static variables get the same defaults as member variables?~Yes");
		rawQuestions.add("772~OOP~Do you have to initialize all static final and non-static final vars?~Yes.<br>you will get a compiler error saying the var might not have been initialized if you do not");
		rawQuestions.add("773~OOP~Do you need to do anything to a java file when you make it a package?~Yes.<br>you must give it a package name(including hierarchy) as the first statement in the file (ex: package myPackage.util;)");
		rawQuestions.add("774~OOP~How can you initialize an array at the time of declaration?~int[] a = {1,2,3};<br>int[] a = new int[] {1,2,3};<br><br>or to reassign :<br>a=new int[] {1,2,3};");
		rawQuestions.add("775~OOP~How do you call another constructor from a constructor in the same class?~this(...)");
		rawQuestions.add("776~OOP~How do you create an anonymous array?~new int[] {1,2,3}");
		rawQuestions.add("777~OOP~How do you initialize at declaration a two dimentional array?~int[][] a= { {1,2,3},{1,2,3}};<br>int[][[] a = new int[2][3];<br>int[][] a = new int[3][]; for() a[i]=new int[x];");
		rawQuestions.add("778~OOP~How do you use the 'for each' loop and why would you want to use it?~for(variable:collection)<br>Ex: for(int e:myCollection){//do something with e} where myCollection is an array or an object that implements the Iterable interface");
		rawQuestions.add("779~OOP~If a class has a private field, can one of it's methods take in a different object of it's same type and have access to the different object's private field?~Yes");
		rawQuestions.add("780~OOP~If a property is boolean, what naming conventions do you use for the 'getter'?~getXxx() or isXxx()");
		rawQuestions.add("781~OOP~If one of your classes is too general and you don't want anyone to instantiate it, what can you do?~Make it abstract, or declare a private constructor(the latter seems like a hack)");
		rawQuestions.add("782~OOP~If you call one constructor that calls another constructor, that calls the first again, can you get stuck in an infinite loop or get a out of stack space error?~No, the compiler will give you a recursive constructor invocation error");
		rawQuestions.add("783~OOP~If you call this(...) does it have to be the first statement or call in a constructor?~Yes");
		rawQuestions.add("784~OOP~If you do not assign a member variable a default value, but set a default value in the constructor, does the variable first still get the default value and then the new value in the constructor?~Yes");
		rawQuestions.add("785~OOP~If you do not assign default vaules to non-final instance variables, does the compiler do anything for you, if so, what?~Yes, the compiler assignes:<br><table><tr><td><b>Default value</b></td><td>(char)0</td><td>0</td><td>0.0</td><td>false</td><td>null</td></tr><tr><td><b>Datatype</b></td><td>char</td><td>int</td><td>float</td><td>boolean</td><td>object</td></tr></table>");
		rawQuestions.add("786~OOP~If you don't write any constructors, will the compiler add one for you?~Yes");
		rawQuestions.add("787~OOP~If you have two overloaded methods where one has a parameter of a superclass and the other a subclass, and you pass in an object, will the compiler choose which method to call based off of the reference type, or the actual type?~The decision is made at compile time, and it is based on the reference type");
		rawQuestions.add("788~OOP~If you overload a function, can you only change the return type?~Only if the return type is a subclass of the original method's return type(a covariant)");
		rawQuestions.add("789~OOP~If you write a constructor that takes args, but not a default constructor, will the compiler provide a default one for you?~No");
		rawQuestions.add("790~OOP~If you write a constructor that takes args, do you have to provide a default constructor as well?~No.<br>Only if you or something in a subclass tries to call the default constructor (ex: if a subclass does not implement a default constructor, the compiler will for it, and it will also implicitly try to call it's supperclasses' default constructor)");
		rawQuestions.add("791~OOP~In what order are constructors, static init blocks, and normal init blocks run in?~Static, Super Constructors, Normal, Constructor");
		rawQuestions.add("792~OOP~Is goto a reserved word... can it be used?~It is a reserved word, but you will get a compile error if you try to use it because it is disabled");
		rawQuestions.add("793~OOP~Is the for loop limited to declaring and modifying one variable?~No<br>You can have many separated by commas.<br>Ex: for(int y=0, int r=0;r&lt;10;r++, y++).<br>The middle, comparison spot however, can only have one test.");
		rawQuestions.add("794~OOP~Should you always be specific in your code ex: adding the public modifier for methods in an interface?~The Java language spec recommends that redundant keywords should not be supplied");
		rawQuestions.add("795~OOP~Should you always create a variable of some collection type to hold an instantiated collection?~Often, it is good to have a declared interface point to and hold the actual collection");
		rawQuestions.add("796~OOP~Should you use assertions to validate method parameters~Only if the method is private");
		rawQuestions.add("797~OOP~Strings are immutable. Why is this, and what does that mean?~They cannot be modified.<br>If you try to change the string, an entirely new string will be in it's place.<br>The compiler and JVM can store them in a pool if they are literals or intern() returned");
		rawQuestions.add("798~OOP~To determine if a class should be an instance var what phrase can you use?~HAS-A");
		rawQuestions.add("799~OOP~To determine if a class should be extended what phrase can you use?~IS-A");
		rawQuestions.add("800~OOP~What are the names of all primitive Java types?~Integer types: <table><tr><td><b>Datatype</td><td>byte</td><td>short</td><td>int</td><td>long</td><td>float(non-integer type)</td><td>double(non-integer type)</td><td>char</td><td>boolean</td></tr><tr><td><b>Size</b></td><td>1 byte</td><td>2 bytes</td><td>4 bytes</td><td>8 bytes</td><td>4 bytes</td><td>8 bytes</td><td>2 bytes (unsigned!)</td><td>vm dependant</td></tr></table><br>(see java jvm spec chapter 3 for more details)</b>");
		rawQuestions.add("801~OOP~What can you do to verify an object is a certain type before casting/assigning it even if that object might be null?~Use the instanceof operator ex: if (o instanceof x)");
		rawQuestions.add("802~OOP~What does a labeled continue do?~It can skip the rest of an iteration and continue with a higher level loop.<br>All for loop vars do get updated along the way");
		rawQuestions.add("803~OOP~What does a non-labeled continue do?~It skips the remainder of the loop for that iteration");
		rawQuestions.add("804~OOP~What do you need to do to add a cloning option to a class?~Make that class implement Clonable, add a public method clone that throws CloneNotSupportedException, have that method first call super.clone(), and then use what is returned from the super call to call clone on all mutable member fields by setting all remaining fields on the object returned by the super.clone() call");
		rawQuestions.add("805~OOP~What happens to a protected member of a class when it is subclassed?~It becomes private to all other classes except to it's own subclasses for which it will be still protected, or to classes in the original initial superclass directory");
		rawQuestions.add("806~OOP~What is a good way of allowing access to the methods of member objects of a class?~Create methods that access the getters and setters of the member object");
		rawQuestions.add("807~OOP~What is a labled break and how do you use it?~A break that can break out of more than just the inner most loop or case, as long as it is still in the current method or init block. It must be placed before the loop or case you want to break out of");
		rawQuestions.add("808~OOP~What is an adapter class and why would use use it?~It is a class that implements all the methods of an interface, but does so giving them all blank bodies. You would use one if you want to use one method of an interface without making blank bodies for all the other methods. You do this by extending the adapter class and then overriding the methods you actually call");
		rawQuestions.add("809~OOP~What is a ragged array?~An array of arrays(a 2 dimentional array) who's second dimention of arrays are of different lengths");
		rawQuestions.add("810~OOP~What is cohesion?~The degree to which one class has one single purpose");
		rawQuestions.add("811~OOP~What is coupling?~The degree to which one class knows about another class");
		rawQuestions.add("812~OOP~What is the default visibility for methods and fields is none is specified?~Package");
		rawQuestions.add("813~OOP~What is the difference between call by reference and call by value?~Call by value copies the values of the variables and passes the copied values.<br>Call by reference actually passes the references(memory locations)");
		rawQuestions.add("814~OOP~What is the difference between default(package) and protected?~Default is package restriction.<br>Protected is package + kids");
		rawQuestions.add("815~OOP~What kind of constants can you declare in an interface?~public static final");
		rawQuestions.add("816~OOP~What should JavaBeans listener methods be named?~add&lt;ListenerType&gt;() ex: addActionListener(), and remove&lt;ListenerType&gt;().<br>They must end with the word Listener");
		rawQuestions.add("817~OOP~What visibility do protected methods and fields give?~Visibility to subclasses and to package classes");
		rawQuestions.add("818~OOP~When is a non method {} block run?~When a class is instantiated");
		rawQuestions.add("819~OOP~When is a static block{} run?~When a class is instantiated, when a static var is read, or when a static var is set");
		rawQuestions.add("820~OOP~When is it a good time to use inheritance?~When one class is a more specific type or when you have behavior that should be shared");
		rawQuestions.add("821~OOP~When should you cast?~Probably, only when you need to fully use an object again after it's real identity has been temporarily forgotten");
		rawQuestions.add("822~OOP~Where can init blocks go?~The compiler will allow them to be anywhere, but if they appear before variable declarations, strange things can happen that are inferred in Java bug lists");
		rawQuestions.add("823~OOP~Where can you set a non-static final instance var?~At it's declaration, in a non-static init block, or in a constructor");
		rawQuestions.add("824~OOP~Where can you set a static final var?~At it's declaration or in a static init block if the block is after the declaration");
		rawQuestions.add("825~OOP~Will a labled break statement only affect the inner most while, do, for, or switch?~Yes");
		rawQuestions.add("826~OOP~Will the for each loop go through the first dimention of a 2 dimentional array, the 2nd, or both?~Only the first");
		rawQuestions.add("827~Operators~Are any operators right to left?~Yes.<br>Bang, tilde, ++, --, unary+ and  -, ?:, =, +=, -=, *=, /=, %=, &=, !=, ^=, &lt;&lt;=, &gt;&gt;=, &gt;&gt;&gt;=. ex: a += b += c is equivalent to a += ( b += c )");
		rawQuestions.add("828~Operators~Are boolean operators equal in precedence to bitwise operators?~No.<br>Bitwise operators are before boolean operators");
		rawQuestions.add("829~Operators~Are normal operators(+, -, *, /, %) equal in precedence to boolean operators?~No.<br>Normal operators are before boolean operators");
		rawQuestions.add("830~Operators~Can you use anything as operands for shift operations?~No.<br>They must be ints, or longs");
		rawQuestions.add("831~Operators~Can you use bitwise operators with the boolean type?~Yes, but they do not allow any short circuits");
		rawQuestions.add("832~Operators~Do || and && have equal precedence?~No, && is before ||");
		rawQuestions.add("833~Operators~How do you read a shift expression ex: x >> y?~x right shifted by y");
		rawQuestions.add("834~Operators~Is there a &lt;&lt;&lt;?~No");
		rawQuestions.add("835~Operators~What happens if you shift an int(32 bits) by 32 or more bits, or a long(64 bits) by 64 or more bits?~It actually shifts by shiftAmount % 32 or shiftAmount %64");
		rawQuestions.add("836~Operators~What is the difference between >> and >>>?~>>> fills the top bits with zero and >> extends the sign bit");
		rawQuestions.add("837~Reflection~Can you interchange the Integer.class and int.class in the Class[] parameter of the getDeclaredConstructor() method?~No");
		rawQuestions.add("838~Reflection~Can you interchange the Integer.class and int.class in the Object[] parameter of newInstance()?~Yes");
		rawQuestions.add("839~Reflection~How can you instantiate a class with a default constructor via reflection?~First get a class object of the type you want to instantiate.<br>Then call the newInstance() method on that object and cast the result to the type of object you are trying to instantiate");
		rawQuestions.add("840~Reflection~How can you instantiate a class with a non-default constructor?~First get a class object of the type you want to instantiate.<br>Then call getDeclaredConstructor() and pass it a Class[] of the parameter types that it needs(this will pick the correct constructor).<br>This call will return a java.lang.reflect.Constructor object.<br>Call the newInstance() method of this object, passing it an Object[] of the actual parameters.<br>Finally, cast the returning Object to the type you are instantiating");
		rawQuestions.add("841~Reflection~What is the difference between the getFields() method and the getDelaredFields() method (same question for getMethods() as well as getConstructors()?~The getFields() method only returns public fields.<br>The getDeclaredFields() method returns public, protected, private, and package visible fields");
		rawQuestions.add("842~Security~What makes a class unique?~It's name, package, and classloader.<br>One example of the usefulness of this is how browsers can load applets of the same name and still distinguish between them");
		rawQuestions.add("843~Security~Are there any gotchas when writing your own class loaders that you might not think about even knowing the rules?~Yes.<br>If you use your own class loader to load a Test.class, it first delegates to the system class loader, and this loader finds it, you will have a conflict.<br>One thing you can do is to rename the extention of the class, or use a parameter to pass in a path that is not the class path so the normal loaders do not find the file, but your new class loader does");
		rawQuestions.add("844~Security~By default what locations does java look for a java.policy file, and can you change those locations?~In the java platform home dir(usually java/jre/lib/security), and in the user's home dir (prefixed with a . ex: .java.policy). You can change the locations by editing java.security (found in java/jre/lib/security)");
		rawQuestions.add("845~Security~Can java still block reading private fields even when trying to call setAccessable()?~Yes.<br>You can use a SecurityManager");
		rawQuestions.add("846~Security~Can you specify a policy file on the command line?~Yes.<br>-Djava.security.policy=myPolicy.policy will add this policy file to the set java already knows about.<br>Alternatively, you can use a ==<br>Ex: -Djava.security.policy==myPolicy.policy that will only load that policy");
		rawQuestions.add("847~Security~Does java automatically use .java.policy in the current directory?~Yes, but only if a security manager is turned on");
		rawQuestions.add("848~Security~Does java by default use any security manager or policy when running locally?~No");
		rawQuestions.add("849~Security~Does one policy file take precedence over another?~The different policy files that are found are combined and added one to another.<br>It seems that you can only add permissions, and not take them away");
		rawQuestions.add("850~Security~Does the root or bootstrap classloader have a parent class loader, and what does getting it's parent return?~No.<br>It returns null");
		rawQuestions.add("851~Security~How can you use JAAS to authenticate?~You generally need four files.<br>You need a normal class that runs everything, a class that runs code only for an authenticated user, a policy file, and a JAAS config file.<br>The normal class file is the biggest thing.<br>There are six main lines of code that the normal class needs :<br>Besides including java.security, javax.security.auth, and javax.security.auth.login.<br>LoginContext ctx = new LoginContext(\"&lt;some jaas config&gt;\");<br>context.login();<br>Subject sub = ctx.getSubject();<br>PrivilegedAction act = new MySpecialUserActionClass();<br>Object retult = Subject.doAsPrivleged(sub, act, null); ctx.logout();<br>The doAsPrivileged can be doAs(), the difference being that doAsPrivileged() can run with a different set of permissions, where as doAs(); keeps the same privileges as the calling method(with doAsPrivileged() you don't have to grant the calling method stack privileges, only the user code.<br>The special user class must implement java.security.PrivilegedAction, which requires a method : public Object run();<br>The policy file must include grants for the code running authentication to get javax.security.auth.AuthPermission for \"createLoginContext.&lt;name of JAAS config&gt;\" and \"doAsPrivileged\".<br>It must also include grant primcipal com.sun.security.auth.SomePrimcipal \"some token\" with what ever privileges that user can get.<br>The JAAS config file includes a block that starts with &lt;name of jaas config&gt; { com.SomeModule required; other module permissions}; required can be one of the following : required, sufficient, requisite, or optional.");
		rawQuestions.add("852~Security~How do you create a MD5 or SHA hash?~MessgaeDigest md = MessageDigest.getInstance(\"&lt;hash type&gt;);<br>For all data (in byte form) call md.update(data);<br>To get the hash after all data has been entered, call md.digest();<br>This returns a byte array");
		rawQuestions.add("853~Security~How do you setup a ketstore for tracking keys and signing jars?~keytool -genkey -keystore &lt;somename&gt;.store -alias &lt;somealias&gt;");
		rawQuestions.add("854~Security~How do you sign and verify data?~Create a KeyPairGenerator:<br>KeyPairGenerator kp = KeyPairGenerator.newInstance(&lt;algorithm&gt;);<br>kp.initialize(&lt;modulus bit len&gt;, SecureRandom);<br>KeyPair keyPair = kp.generateKeyPair();<br>Public/PrivateKey public/privateKey = keyPair.getPublic()/Private();<br>Signature sig = Signature.getInstance(&lt;algorithm&gt;);<br>That is the init code that is the same for signing and verifying.<br>At this point call sig's initSign() or initVerify() methods, passing the private key to sign or public key to verify.<br>Then call update() on sig to pass it data, and finally call sign() to return the signed version (byte[]) or verify to return a boolean of whether it passed verification");
		rawQuestions.add("855~Security~How do you tell java to use a security manager?~System.setSecurityManager(new SecurityManager());<br>-OR-<br>-Djava.security.manager");
		rawQuestions.add("856~Security~How do you use encryption/decryption?~First, create a key using either the KeyGenerator.getInstance(&lt;algorithm&gt;) method for private key, or the KeyPairGenerator(&lt;algorithm&gt;) for public key.<br>Initialize the key with a SecureRandom, and then pass it to a Cipher (created by Cipher.getInstance(&lt;algorithm&gt;)) with the init() method.<br>The init method takes a key as well as a mode (Cipher.ENCRYPT_MODE, DECRYPT_MODE, WRAP_MODE, or UNWRAP_MODE).<br>Create an input stream and an output stream. Get the input block size for the algorithm with cipher.getBlockSize(), and the output block size with cipher.getOutputSize(blockSize).<br>Then, call cipher.update() as long as there are more byte[blockSize] to read in.<br>If the input ends on a border (the input is a exact multiple of the block size), call cipher.doFinal() at the end.<br>If the last block is not full, instead of doing an update on the last partly full block, call cipher.doFinal() to pad.<br>Write out the output bytes each time update() or doFinal() is called");
		rawQuestions.add("857~Security~How do you use SecureRandom?~import java.security.SecureRandom;<br>SecureRandom sc = new SecureRandom();<br>Pass some random started seed as a byte[] or long to it's setSeed() method.<br>To get the actual random set of bytes, call sc.nextBytes() and pass it a byte[] to fill");
		rawQuestions.add("858~Security~How do you write a basic class loader?~Create a class that extends ClassLoader.<br>The only method you have to override is protected Class findClass(String name) throws ClassNotFoundException.<br>That method takes a prameter of a class in dot-package format (ex: com.sun.blah.SomeClass).<br>It's purpose should be to read in a .class file from somewhere into a byte array.<br>You then pass that byte array to an inherited ClassLoader method called defineClass() along with the class name, and the starting and ending bytes for the class in the array.<br>This method (defineClass) will return a Class object (which then you return) if the data in the byte array was valid");
		rawQuestions.add("859~Security~If you are working in code that is having trouble loading a class because different class loaders are in charge of the different class paths etc., what can you do to resolve this and start at the highest level classloader for a given piece of code?~Thread.currentThread().getContextClassLoader.loadClass(className);");
		rawQuestions.add("860~Security~If you misspell a class name in a policy file, will you get an error or warning if that class is not found?~No");
		rawQuestions.add("861~Security~If you want to go into detail into JAAS, how can you (for example to use roles)?~You can create your own Princples, LoginModules, and CallbackHandlers to use with the basic LoginContext classes");
		rawQuestions.add("862~Security~What are the available KeyPairGenerator algorithms?~1.x, OID, DiffieHellman, DH, DSA, RSA.<br>Keep in mind that some algorithms are proprietary and are not available by default");
		rawQuestions.add("863~Security~What do you need to do to create your own Permission class?~Create a class that extends java.security.Permission.<br>That class must have a constructor with two string params(target and action) that then calls super and passes it the target param, and implement the following methods :<br>String getActions(),<br>boolean equals(),<br>int hashCode(),<br>and boolean implies(Permission other).<br>When using the custom Permission, you must instantiate it with two parameters(the target and action), and then pass it to an instantiated SecurityManager's (via System.getSecurityManager()) checkPermission() method.<br>One strange thing to note is that you get the permission's target with a getName() method");
		rawQuestions.add("864~Security~What is bytecode verification?~When a class is compiled, it is checked for things like uninitialized variables etc.<br>These same checks are carried out when a class is loaded because bytecode could have been changed");
		rawQuestions.add("865~Security~What is JAAS?~The Java Authentication and Authorization Service");
		rawQuestions.add("866~Security~What is the basic form for an entry in a policy file?~grant codesource { permission1; permission2; ...};<br>where codesource is the url of a directory or jar, or a file.<br>If there is a trailing '/' a directory is assumed.<br>If there is no trailing '/', a jar or class file is assumed.<br>Ex: grant codeBase \"www.blah.com/classes/\" or \"www.blah.com/A.jar\" or \"file:C:/blah/\" or \"file:/usr/blah/\".<br>The permission is of the form : permission classNams targetName, actionList;<br>Ex: permission java.io.FilePermission \"-\", \"read\" will give those classes read only access to all files in the current dir and it's sub dirs.<br>permission java.net.SocketPermissino \"*.google.com:5000-6000\", \"connect\"; will only allow programs to access google.com on ports 5000-6000 and no other connections can be made.<br>There are also some macros like ${user.home} and ${/} for file separator.<br>policytool is something you can use to create policy files.<br>Make sure that you do not paste in any strange characters into the policy file.<br>A strange error will come up in some versions of java if there are strange characters(2 byte chars for example)");
		rawQuestions.add("867~Security~What is the classloader delegation model?~Classloaders are supposed to ask their parent classloaders to load the class before trying to load it themselves, which can happen only if the parent fails to load it");
		rawQuestions.add("868~Security~What is the difference between java.security amd java.policy?~The security file is for general java security settings, while the policy file is for security settings specific to classes or sets of classes");
		rawQuestions.add("869~Security~What message digests are available?~MD2, MD5, SHA-1, SHA-256, SHA-384, SHA-512, SHA1");
		rawQuestions.add("870~Security~When checking permissions for security, is only the current method checked for access rights, or are all methods on the call stack?~All methods on the call stack are checked");
		rawQuestions.add("871~Security~When creating your own SecurityManager, what do you need to do?~You need to extend java.security.SecurityManager.<br>You also should override the public void checkPermission(Permission P) method.<br>This method can do things like do an instanceof on the type of permission, an then based on the parameters of that permission(ex: getName()), you can decide what to do.<br>There are some gotchas : If you set the security manager, your class must have a policy that states it can (ex: a grant of java.security.AllPermission) this is because it is not a system class, so it must be given explicit permission.<br>You also need to make sure that a call in the security manager does not spawn a check in the security manager to see if it, itself, needs permissions (causing an overflow in recursiveness).<br>This can be avoided by looking at the return of getClassContext() it returns the pending methods waiting to be executed.<br>You can loop through and if you see the security manager in the below any top security manager calls, you know to give it access to itself");
		rawQuestions.add("872~Serialization~Are statics saved in serialization?~No");
		rawQuestions.add("873~Serialization~Can you generate a serialVersionUID using serialver from a .java file?~No. It must be from a .class file");
		rawQuestions.add("874~Serialization~Can you speed up serialization?~If you need a faster method than the normal serialization, you can implement the Externalizable interface that includes the two methods :<br>public void readExternal(ObjectInputStream s) throws IOException, ClassNotFoundException<br>and<br>public void writeExternal(ObjectOutputStream s) throws IOException, ClassNotFoundException.<br>This method can be 30% faster, but you do need to worry about including superclass data");
		rawQuestions.add("875~Serialization~How can you get the serialVersionUID of a class?~serialver &lt;classname&gt;<br>Ex: serialver MyClass");
		rawQuestions.add("876~Serialization~How can you take care of initializing transient variables when deserializing?~You can override the private void readObject(ObjectInputStream) method, and after a call to the ObjectInputStream's defaultReadObject(), you can then read an int, or something else that was stored this way in an overriden writeObject() method");
		rawQuestions.add("877~Serialization~How does java remember when serializing an object that is referenced in multiple places not to make multiple copies?~It gives each object a serial number and when it writes and reads, if that object is already in stream form meaning whatever it at that memory address has already been serialized, it refers to it with a serial number that references the original, fully written out object");
		rawQuestions.add("878~Serialization~If a subclass is tagged serializable, but it's superclass is not, what happens to the variables inherited from the superclass upon deserialization?~The superclass's constructor will run and set all the inherited variables to their default values");
		rawQuestions.add("879~Serialization~If you are using a serialVersionUID and serialize an object, later changing a transient field to a non-transient / or vice versa, what will the value of that field be when you deserialize the object?~The compiler default value for that field, NOT the class set default value");
		rawQuestions.add("880~Serialization~If you have a class that is serializable, and it has a reference to a class that is also serializable, will serializing the first class also save/persist it's references?~Yes");
		rawQuestions.add("881~Serialization~What can you use if you need to serialize something that is not serializable?~You can write out your own raw serialization scheme for a class by creating methods with the signatures private void writeObject(ObbjectOutputStream out) throws IOException and readObject(ObjectInputStream in) throws IOException.<br>These methods only need to be concerned about their data fields, not superclass info or anything of the like");
		rawQuestions.add("882~Serialization~What happens if you are deserializing an old version of the class that has an ok serialVersionUID, and the new class has extra data fields?~They get default values");
		rawQuestions.add("883~Serialization~What happens if you are deserializing an old version of the class that has an ok serialVersionUID, and the new class has fewer data fields?~The extra info in the serialized version will be ignored");
		rawQuestions.add("884~Serialization~What happens if you try to deserialize a class who's definition or parts have changed?~If no serialVersionUID is set, you get a InvalidClassException");
		rawQuestions.add("885~Serialization~What happens when you deserialize a class with statics?~The statics are set to whatever the current static value is if that class has a current instantiation.<br>If the class was not currently instantiated, it gets it's default values");
		rawQuestions.add("886~Serialization~What happens when you try to output or serialize something that is not tagged with the serializable interface?~You get a NotSerializableException");
		rawQuestions.add("887~Serialization~What happens when you try to serialize a class that is tagged as serializable, but that has a var that is not tagged as serializable or transient?~You get a NotSerializableException");
		rawQuestions.add("888~Serialization~What is the transient keyword used for?~Tagging a var as non-serializable");
		rawQuestions.add("889~Serialization~What should you do if you are deserializing singleton, or typesafe(a fixed number of instances) classes (usually those with a private constructor)?~You shoud add a readResolve method (protected Object readResolve() throws ObjectStreamException) that creates and returns a correct instance");
		rawQuestions.add("890~Servlets/Servlet spec~Can you add configuration points to some set of JSPs?~Yes.<br>If you have a &lt;jsp-config&gt; block in your web.xml with a &lt;jsp-property-group&gt; block in it, it can include elements like &lt;url-pattern&gt;, &lt;el-ignored&gt;, &lt;include-prelude&gt;, &lt;include-coda&gt;, &lt;scripting-invalid&gt;, &lt;is-xml&gt;, and &lt;page-encoding&gt;");
		rawQuestions.add("891~Servlets/Servlet spec~Can you override the default MIME type for a file extention?~Yes.<br>If you add a &lt;mime-mapping&gt; block to web.xml, with &lt;extention&gt; and &lt;mime-type&gt; elements");
		rawQuestions.add("892~Servlets/Servlet spec~How can you get/set the session timeout time?~session.get/setMaxInactiveInterval() the param is in seconds.<br>You can also add a web.xml entry in a &lt;session-config&gt; block with a &lt;session-timeout&gt; entry that takes minutes. A 0 or negative number in the xml file entry means a session will never expire, whereas only a negative number with the session.setMaxInactiveInterval() will mean doesn't expire");
		rawQuestions.add("893~Servlets/Servlet spec~How do you enable SSL in Tomcat?~Edit the server.xml file and uncomment the SSL Connector block.<br>You need to have a .keystore file and a password associated with this.<br>For testing you can use the keytool utility.<br>You then must place the .keystore file in tomcat's root dir, and add a keystoreFile and keystorePass attributes to that server.xml Connector entry");
		rawQuestions.add("894~Servlets/Servlet spec~Is there any way to display a custom error page for some 404, 500, etc return HTTP codes?~Yes.<br>Add a &lt;error-page&gt; block to web.xml that includes a &lt;error-code&gt; and &lt;location&gt; entry for each error code you want to handle.<br>The request object will have access to the error info in attributes found in javax.servlet.error as String objects");
		rawQuestions.add("895~Servlets/Servlet spec~Is there any way to display a custom error page for some exception type that is thrown instead of the general exception error the user sees?~Yes.<br>Add a &lt;error-page&gt; block to web.xml that includes &lt;exception-type&gt; and &lt;location&gt; elements.<br>This will work for things like Throwable/Error.<br>The request object will have access to the error info in attributes found in javax.servlet.error as String objects");
		rawQuestions.add("896~Servlets/Servlet spec~What is the difference between FORM and BASIC authentication when using declaritive container security?~Form based allows you to create login and failure pages that automatically check a list of username password pairs.<br>Basic, tells the browser to show a popup dialog, but that dialog may not look like the rest of your application, and it is harder to logout/login as a different user.<br>You use the &lt;security-constraint&gt; and &lt;login-config&gt; blocks in web.xml to configure this");
		rawQuestions.add("897~Servlets/Servlet spec~Are init parameters accessable when accessing a servlet through it's normal name as opposed to a mapped name?~No");
		rawQuestions.add("898~Servlets/Servlet spec~Can the same request header appear more than once?~Yes.<br>Ex: Accept-Language");
		rawQuestions.add("899~Servlets/Servlet spec~Can you add listeners to servlet/jsp related objects?~Yes.<br>ServletContext, ServletContextAttribute, HttpSession, HttpSessionAttribute, HttpSessionActivation, HttpSessionBinding, ServletRequest, ServletRequestAttribute.<br>All these are interfaces if you add 'Listener' to the end of the name");
		rawQuestions.add("900~Servlets/Servlet spec~Can you call request.getSession() anytime?~No.<br>Because getSession() can create a new session, thus creating a new JSESSIONID cookie that it sends in the response, it must be called before any document data has been sent");
		rawQuestions.add("901~Servlets/Servlet spec~Can you change what times the server reports back for the 'last modified' timestamp?~Yes.<br>You can override the long getLastModified(HttpServletRequest) method");
		rawQuestions.add("902~Servlets/Servlet spec~Can you get form data in some other way besides getParameter?~Yes.<br>You can use request.getReader()/getInputStream() to get the raw data.<br>Note : If you read the raw data, it is not guarenteed to be accessable via getParameter().<br>It is also niether parsed, nor URL decoded");
		rawQuestions.add("903~Servlets/Servlet spec~Can you have more than one request parameter with the same name?~Yes.<br>Multi-select boxes can return multiple values with the same key");
		rawQuestions.add("904~Servlets/Servlet spec~Can you load servlets, and initialize them on server startup?~Yes.<br>User the &lt;load-on-startup&gt;some int&lt;/load-on-startup&gt; tag in a servlet block in web.xml.<br>The number (some int) should be lower (0 for example) for the servlets you want to load first.<br>If two servlets have the same load number, the server decides which to load first.<br>If the number is negative, loading at startup is not guarenteed");
		rawQuestions.add("905~Servlets/Servlet spec~Can you provide declaritive initialization parameters to servlets via web.xml?~Yes.<br>There is a &lt;init-param&gt; block that contains &lt;param-name&gt; and param-value&gt; entries.<br>This goes inside a servlet block.<br>These parameters can be accessed via a call to getServletConfig().getInitParameter(someParameter); inside a servlet's init method or JSP's jspInit method");
		rawQuestions.add("906~Servlets/Servlet spec~Can you see what is on the session and get a session object without creating a new session if one does not exist?~Yes.<br>Use request.getSession(false);");
		rawQuestions.add("907~Servlets/Servlet spec~Do filters work without direct access (if a servlet forwards or includes another servlet/JSP)?~Not by default.<br>If you are servlet spec 2.4 or greater, you can add &lt;dispatcher&gt; elements to a &lt;filter-mapping&gt; block that can have as a value REQUEST, FORWARS, INCLUDE, or ERROR.<br>Request is the default, unless you specify one explicitly that is not request, and then request is no longer included");
		rawQuestions.add("908~Servlets/Servlet spec~How can you change the character set of the response?~request.setCharacterEncoding()");
		rawQuestions.add("909~Servlets/Servlet spec~How can you forward or redirect to a different url from a servlet?~response.sendRedirect(url);<br>This sends a 302 code, as well as set's the Location header");
		rawQuestions.add("910~Servlets/Servlet spec~How can you remove things from a session?~You can call session.removeAttribute(key), or session.invalidate() to empty the entire session");
		rawQuestions.add("911~Servlets/Servlet spec~How do you add a servlet mapping?~You need to add two sections to the web app's web.xml file.<br>The first section is an opening and closing tag with the name of servlet.<br>It has two tags in it servlet-name and servlet-class.<br>The name is a unique name to call it, and the class is the packageing and class name of the servlet file.<br>The sectond section is an opening and closing tag with the name of servlet-mapping.<br>It has two tags in it servlet-name and url-pattern.<br>The servlet name is the same unique name that you specified with the package and class name.<br>The url pattern is something that will match.<br>Ex: &lt;servlet&gt;<br>&lt;servlet-name&gt;myName&lt;/servlet-name&gt;<br>&lt;servlet-class&gt;mypackage.MyServlet&lt;/servlet-class&gt;<br>&lt;/servlet&gt;<br>&lt;servlet-mapping&gt;<br>&lt;servlet-name&gt;myName&lt;/servlet-name&gt;<br>&lt;url-pattern&gt;/someUrl&lt;/url-pattern&gt;<br>&lt;/servlet-mapping&gt;<br><br>The url-pattern does have a couple of rules.<br>You cannot just use the * as a wildcard.<br>At the end of a pattern, a /* will match any sequence of characters from that point on.<br>The *.something will match anything with that extention.<br>Other wildcards may not work as expected");
		rawQuestions.add("912~Servlets/Servlet spec~How do you create a filter?~You must implement javax.servlet.Filter, which include the methods :<br>doFilter(request, response, chain), init(config), and destroy().<br>Then you must add a &lt;filter&gt; block with &lt;filter-name&gt; and either a &lt;filter-class&gt; or &lt;url-pattern&gt; element.<br>You can pass init parameters to the filter by also having a &lt;init-param&gt; block with &lt;param-name&gt; and &lt;param-value&gt; elements.<br>These parameters can be accessed by calling config.getInitParameter(param); in the init method.<br>Note that some servers require you to set headers before calling doFilter() on the chain.<br>Calling doFilter() on the chain is usually done to then process the next filter, or actual Servlet or JSP");
		rawQuestions.add("913~Servlets/Servlet spec~How do you detect the browser's default language?~request.getHeader(\"Accept-Language\");<br>You must then parse the value returned");
		rawQuestions.add("914~Servlets/Servlet spec~How do you get an output stream for a response in a servlet (the 'out' object)?~PrintWriter out = response.getOutpuStream();<br>Make sure to set the content type to the appropriate setting.<br>Ex: response.setContentType(\"text/html\");");
		rawQuestions.add("915~Servlets/Servlet spec~How do you get form parameters passed in?~Call request.getParameter() with a case sensitive parameter name to get");
		rawQuestions.add("916~Servlets/Servlet spec~How do you get the current session/start one if there is no current session?~HttpSession s = request.getSession();");
		rawQuestions.add("917~Servlets/Servlet spec~How do you read request headers?~request.getHeader(key);<br>The header name that is the key is not case sensitive, although usually the first character of each word(including the first) is capitalized)");
		rawQuestions.add("918~Servlets/Servlet spec~How do you set a response header?~response.setHeader(header, value);<br>There are other methods for the common headers.<br>Ex: response.setContentType(\"text/html\");");
		rawQuestions.add("919~Servlets/Servlet spec~How do you set the HTTP status code?~response.setStatus(HttpServletResponses.SOME_CODE_CONSTANT);<br>The codes are constants that begin with SC_.<br>response.sendRedirect(url) and response.sendError(code, message) where message is a formatted html doc, are two shortcut methods");
		rawQuestions.add("920~Servlets/Servlet spec~How do you use cookies?~You can set a cookie by instantiating one, and then calling response.addCookie(cookie);<br>You can get an array of all the cookies the client has by calling request.getCookies().<br>null will be returned from the request.getCookies() call if there are no cookies.<br>You construct a cookie like this Cookie c = new Cookie(cookieName, cookieValue);<br>Niether the name nor the value should include []()=,\"/?@:; characters.<br>By default, a cookie is only a session/memory cookie and not written to disk(this means when the user restarts the browser, the info is lost).<br>You can override this by calling setMaxAge() on the cookie object, passing it the number of seconds to allow the cookie to be valid.<br>Setting the max age to 0 tells the browser to delete the cookie.<br>Also, note that none of the attributes set on the cookie besides name and value are returned when getting cookies");
		rawQuestions.add("921~Servlets/Servlet spec~If the requested servlet init parameter does not exist, what is returned?~null");
		rawQuestions.add("922~Servlets/Servlet spec~If you are in a distributed environment, should you do anything to session objects?~Yes.<br>Make sure they are serializable");
		rawQuestions.add("923~Servlets/Servlet spec~If you do need to do URL rewriting, do you need to do anything to URL liks?~Yes.<br>You should get a new url by passing them to response.encodeURL(originalURL), or response.encodeRedirectURL(originalURL)");
		rawQuestions.add("924~Servlets/Servlet spec~If you spawn a thread from a servlet, does the original thread that was processing the doGet/doPost method wait until that child thread is finished to terminate?~No.<br>It terminates, and the thread it spawned runs until it finishes");
		rawQuestions.add("925~Servlets/Servlet spec~Is there a difference between not submitting a form value, and submitting a blank form value?~Yes.<br>Not submitting one causes request.getParameter() to return null, while a blank or empty value on a submition returns an empty string");
		rawQuestions.add("926~Servlets/Servlet spec~Is there any servlet equivilent of jsp beans (that auto populates)?~Not built into the API.<br>There is however the Commons BeanUtils(Apache)");
		rawQuestions.add("927~Servlets/Servlet spec~Is there anything special you need to do if manually gzipping a response?~Yes.<br>response.setHeader(\"Content-Encoding\", \"gzip\");<br>PrintWriter out = new GZIPOutputStream(response.getOutputStream());<br>&lt;send data&gt;<br>out.close();<br>Closing the output stream is usually optional except for gzipped data");
		rawQuestions.add("928~Servlets/Servlet spec~Is there any way to activate some listener to preform side effect behavior when adding or removing objects to/from the session?~Yes.<br>If you implement HttpSessionBindingListener (with methods valueBound/valueUnbound, the set/getAttribute methods will trigger the valueBound/valueUnbound methods");
		rawQuestions.add("929~Servlets/Servlet spec~Is there any way to map a wildcard URL to a servlet?~Yes.<br>simply use the * character as you would a wildcard character in a &lt;url-pattern&gt; entry");
		rawQuestions.add("930~Servlets/Servlet spec~Is there a way to pass a context wide init parameter?~Yes.<br>use a &lt;context-param&gt; block with &lt;param-name&gt; and &lt;param-value&gt; entries. Then access the parameters with getServletContext().getInitParameter(someParam)");
		rawQuestions.add("931~Servlets/Servlet spec~Is there a way to tell a browser to refresh besides the html meta tag?~Yes.<br>You can call response.setIntHeader(\"Refresh\", seconds);<br>-OR-<br>response.setHeader(\"Refresh\", \"10; URL=http://blah\");<br>This is not official, but is supported by major browsers(the same goes for Set-Cookie!)");
		rawQuestions.add("932~Servlets/Servlet spec~What can cause the destroy() method of a servlet to be called?~An admin can cause a servlet to unload, or a server can unload a servlet after some idle period.<br>Because of this, do not rely on destroy to save any state");
		rawQuestions.add("933~Servlets/Servlet spec~What controls session timeout times?~The session's get/setMaxInactiveInterval(seconds) will call the valueUnbound methods and kill the session if that time is reached without having a request for that session");
		rawQuestions.add("934~Servlets/Servlet spec~What do you need to do to create a servlet?~Import java.io (PrintWriter), javax.servlet(extends HttpServlet), and javax.servlet.http(HttpServletRequest and HttpServletResponse).<br>Then have your class extend HttpServlet, and override either the doGet() or doPost() method, or both");
		rawQuestions.add("935~Servlets/Servlet spec~What exceptions do the doGet/doPost methods throw?~ServletException and IOException");
		rawQuestions.add("936~Servlets/Servlet spec~What happens if you have more than one URL pattern for mapping in web.xml that overlaps?~Exact matches are handled first.<br>Directory mappings are preferred over file mappings.<br>For overlapping directory mappings, the longer ones are preferred");
		rawQuestions.add("937~Servlets/Servlet spec~What is a filter with respect to web applications?~A filter is code that can run on a server before or after a servlet or JSP to which it has been matched");
		rawQuestions.add("938~Servlets/Servlet spec~What is ServletContext?~It is almost like a global hashtable.<br>It is shared by all servlets and all JSPs in the web application.<br>You get it from the session (session.getServletContext()), and it has methods get/setAttribute()");
		rawQuestions.add("939~Servlets/Servlet spec~What is the basic format of the web.xml file, and where does it go?~There is a xml tag, a doctype tag, and an opening and closing web-app tag.<br>The file goes in the webapp's WEB-INF directory");
		rawQuestions.add("940~Servlets/Servlet spec~What does the message: HTTP method POST is not supported by this URL mean?~You probably are doing something like calling a post on a servlet and have only implemented the doGet() method");
		rawQuestions.add("941~Servlets/Servlet spec~What is the basic servlet lifecycle?~The init() method is called one time when the servlet is first created/used.<br>After this, a new thread is spawned for each request(get/post/etc.).<br>The new thread first runs the servlet's service() method to know what other methods should be called(ex : doGet, doPost).<br>It is possible to force only one thread to access a servlet at a time by implementing SingleThreadModel.<br>If the server decides to unload a servlet, the servlet's destroy() method is called");
		rawQuestions.add("942~Servlets/Servlet spec~What is the request header for Referrer?~Referer (spelling mistake by the original HTTP team)");
		rawQuestions.add("943~Servlets/Servlet spec~What parameters do the doGet/doPost methods take?~HttpServletRequest and HttpServletResponse");
		rawQuestions.add("944~Servlets/Servlet spec~When is the web.xml file read?~It is read only when the server starts");
		rawQuestions.add("945~Spring~Are spring beans singleton or prototype by default, and how do you specify explicitly what a bean should be?~By default they are singleton.<br>Specify it explicitly with a bean's singleton attribute being \"true\" or \"false\" in it's xml definition");
		rawQuestions.add("946~Spring~Can bean injection inject things other than ints and Strings?~Yes.<br>Spring uses PropertyEditors to convert strings in a beans.xml to ints booleans, Arrays, BigDecimals, Files, Classes, InputStreams, Properties, URLs and more.<br>This is done automatically when the setter associated with the property is of that type");
		rawQuestions.add("947~Spring~Can init/destroy-methods have arguments?~No, but they can be static, and return anything they want although the return will be ignored by spring");
		rawQuestions.add("948~Spring~Can you add a destroy method to a spring bean singleton?~Yes.<br>Impliment org.springfactory.beans.factory.DisposableBean, and impliment it's public void destroy() method. You then need to call the destroySingletons() method of the bean factory to start the teardown process.<br>You can also have a custom destroy method that you specify with the destroy-method attribute of the &lt;bean&gt; element.<br>This will destroy all instances of the singleton bean.<br>The destroySingletons() method will actually destroy all singleton beans referenced or configured by the calling factory, not just a single set of singletons from a single class");
		rawQuestions.add("949~Spring~Can you create a singleton bean that has a reference to a non-singleton bean(where the same singleton bean is recalled each lookup, but in each lookup, it references a non-singleton bean)?~Yes.<br>Use method injection by making your singleton bean abstract, creating an abstract getter(that returns the correct type and takes no arguments) and corresponding storage variable.<br>Then add the element &lt;lookup-method&gt; giving it an attribute of name that is set to the abstract method, and a bean attribute that specifies which bean to inject");
		rawQuestions.add("950~Spring~Can you force spring to check at runtime if properties are being setter injected?~Yes. You can as long as you are checking all Collections and built in types, all objects, or all Collections, built in types, and objects are set.<br>Note that default values specified in the source do not matter.<br>The check is to see if a new value is setter injected");
		rawQuestions.add("951~Spring~Can you get direct access to a FactoryBean instead of just using one by it's bean name to get an object?~Yes.<br>When doing a getBean() call, prefix the bean name string with an amperstand(ex: getBean(\"&beanName\"))");
		rawQuestions.add("952~Spring~Can you have 'inner beans' defined in a beans.xml file?~Yes.<br>A property for example, can have a nested bean block in it, if it is only used in one place");
		rawQuestions.add("953~Spring~Can you have more than one property editor registered for a given type?~No");
		rawQuestions.add("954~Spring~Can you use an init-method as well as an init interface callback from InitializingBean?~Yes.<br>Currently the interface callback is called first, and then the init-method.<br>This could change in future versions, so it is best to call one from the other");
		rawQuestions.add("955~Spring~Does the init-method code run before or after the constructor is run?~After");
		rawQuestions.add("956~Spring~How can you create a factory method/object with a spring bean?~You need to add a factory-method attribute to the &lt;bean&gt; element, and set it equal to the method name you want to run.<br>You then add &lt;constructor-arg&gt; elements to pass parameters to the factory method.<br>Then, when you call getBean() to get an instance, you are actually running the static method of the bean definition class, passing it the parameters specified in the &lt;constructor-args&gt; elements.<br>You can use beans that have the factory-method attribute, in other beans, to call methods off of the returning factory objects.<br>For example, you could have a SocketFactory &lt;bean&gt; with a factory-method attribute of getDefault.<br>Calls to get this bean would then act as factory methods, executing getDefault and returning the result.<br>You could then have another bean that has an attribute of factory-bean, with a value of the bean with a factory method like the one previously defined.<br>If you added an attribute called factory-method to this bean, it would in turn call the method on the factory object.<br>You pass parameters to the method with &lt;constructor-args&gt; elements");
		rawQuestions.add("957~Spring~How can you get the bean name of an instantiated bean programatically(to log for example)?~Implement the org.springframework.beans.factory.BeanNameAware interface, specifically adding a public void setBeanName(String).<br>There does not need to be a variable by any specific name(ex: String beanName) for this to work");
		rawQuestions.add("958~Spring~How can you pre-instantiate singleton beans?~Call the preInstantiateSingletons() method on the bean factory object");
		rawQuestions.add("959~Spring~How can you replace a method using spring without changing code?~You must create a new class that implements org.springframework.beans.factory.support.MethodReplacer, and it's public Object reimplement(Object, Method, Object[]) method. You then change your bean definition file, adding a bean that represents the new replacer class, and adding a &lt;replaced-method&gt; block to the bean's class that contains the method to be replaced.<br>This block has arguments name, set to the method to replace, and replacer, which is set to the bean name of the new replcaing class.<br>You then add sub elements of &lt;arg-type&gt; that specify the method to replace's parameters(ex : &lt;arg-type&gt;String&lt;/arg-type&gt;");
		rawQuestions.add("960~Spring~How can you use resources with spring?~If you have an ApplicationContext, you can use it's getResource() method");
		rawQuestions.add("961~Spring~How do you create your own spring property editor?~Extend java.beans.propertyEditorSupport, and make sure you spring instantiate it as a CustomEditorConfigurer, and call it's postProcessBeanFactory, passing in the factory in order to register the property editor with the spring bean factory");
		rawQuestions.add("962~Spring~How do you use ApplicationContext events?~You need a class that implements org.springfamework.context.ApplicationListener, and it's public void onApplicationEvent(ApplicationEvent) method. You also need a class that extends org.springframework.context.ApplicationEvent.<br>When you want to trigger an event, you call the ApplicationContext's publishEvent() method, and pass it an instance of the event class you want to trigger.<br>The listener must be declared as a bean in the ApplicationContext's xml config");
		rawQuestions.add("963~Spring~How do you use the &lt;value&gt; tag inside of a &lt;property&gt; or &lt;constructor-arg&gt; element?~You can specify booleans, floats, ints, strings, and more. They will be auto converted to fit the injection");
		rawQuestions.add("964~Spring~If an exception is thrown in the init-method code, does it come out as a normal exception?~No.<br>It is wrapped in a BeanCreationException");
		rawQuestions.add("965~Spring~Is there any templating mechanism for creating beans?~Yes.<br>There is spring bean inheritance.<br>You can define a parent bean, and then define a child bean that inherits all &lt;constructor-arg&gt; and &lt;property&gt; elements, and allows you to override them in the clild bean.<br>You create a child bean as you would a normal bean with the exception that you add a parent attribute to the &lt;bean&gt; element and assign it the name of the parent bean");
		rawQuestions.add("966~Spring~Is there a way to verify that a bean has been initialized correctly before returning the spring bean to the calling code?~Yes.<br>The bean must impliment org.springframework.beans.factory.InitializingBean, and implement it's public void afterPropertiesSet() method.<br>You can also create your own init method without implementing an interface, and specify it with an init-method attribute in the bean's &lt;bean&gt; element.<br>The custom method cannot have any parameters");
		rawQuestions.add("967~Spring~What are the required attributes for a bean definition?~Technically, only class is required, but id is strongly recommended for future compatibility");
		rawQuestions.add("968~Spring~What built in property editors are available?~Byte array, Class, File, Locale, Properties, String array, and URL");
		rawQuestions.add("969~Spring~What do you need to do to do simple spring dependency injection?~import org.springframework.beans.factory.xml.XmlBeanFactory, org.springframework.beans.factory.BeanFactory, org.springframework.core.io.ClassPathResource;<br>BeanFactory beanfactory = new XmlBeanFactory(new ClassPathResource(\"a.xml\"));<br>A obj2 = (A)beanfactory.getBean(\"abean\");<br>&lt;bean id=\"abean\" class=\"A\"&gt;&lt;property name=\"name\" value=\"norris\"/&gt;&lt;/bean&gt;<br>The class also needs to have a setter and a name variable.<br>You can also do constructor injection with &lt;constructor-arg value=\"somename\"&gt; instead of &lt;property&gt;.<br>If there are multiple constructor arguments, they are represented as multiple &lt;constructor-arg&gt; elements listed in the same order as the method signature");
		rawQuestions.add("970~Spring~What is a FactoryBean, and why would you want to use one?~Sometimes you use a factory object to create or get instances of something, as opposed to using the new operator.<br>Implementing the FactoryBean interface, allows a standard way to initialize a factory object, and then let it return the correct object when needed via spring");
		rawQuestions.add("971~Spring~What is auto-wiring?~It allows spring to attempt to automatically match properties specified by setters to beans defined.<br>It is an attribute of &lt;bean&gt; called autowire, and can be set to byName, byType, constructor, or autodetect(chooses either constructor or byType(used if there is a default constructor)).<br>Spring reccommends that you not use autowire unless it is on a trivial application because the maintenance of knowing if it should be setup by Spring vs. if the code is missing an assignment is not obvious unless you possibly reference the XML bean definitions");
		rawQuestions.add("972~Spring~What is spring's ApplicationContext, and why would you use it?~It is like XmlBeanFactory, except it allows for more declarative configuration which means less code.<br>For example, you would say:<br>ApplicationContext c = new FileSystemXmlApplicationContext(\"some xml file\");<br>and add an attribute called lazy-init set to false to the xml config, and you don't have to call preInstantiateSingletons().<br>You can also have events, and get automatic access to an ApplicationContext in webapps");
		rawQuestions.add("973~Spring~What is the difference between Controller, AbstractController, ParameterizedController, and MultiActionController?~Controller is the main interface that wants you to implements ModelAndView handleRequest(...).<br>The other three all imlement Controller.<br>AbstractController gives you access to ServletContext and WebApplicationContext.<br>The other two extend AbstractController.<br>ParameterizedController simply returns the view specified by it's viewName attribute, and has no real logic.<br>MultiActionController allows you to specify as many ModelAndView(...) methods as you want, or delegate them to other objects.<br>It can match view file names, request parameters, or properties file entries to handlers.<br>You start using a MultiActionController by specifying a org.springframework.web.servlet.mvc.* class as a value to a property such as methodNameResolver of the MultiActionController bean");
		rawQuestions.add("974~Spring~What is the difference between the local and bean attributes in a &lt;ref&gt; tag?~local will only look at the bean's id, whereas bean will look at the id as well as any aliases specified by a bean's name attribute(comma or semicolin separated)");
		rawQuestions.add("975~Spring~What possible xml tags can you have as children to &lt;property&gt; and &lt;constructor-args&gt; blocks?~&lt;value&gt;, &lt;ref&gt;, &lt;list&gt;, &lt;map&gt;, &lt;props&gt;, &lt;set&gt;");
		rawQuestions.add("976~Spring~When doing constructor injection, how can you match &lt;constructor-arg&gt; elements to parameters?~You can specify an index attribute that is zero based");
		rawQuestions.add("977~Spring~When there is more than one constructor with the same number of parameters, how can you tell spring which constructor to use ex: const(String, String) vs const(String, int), when the xml file takes values as String?~You can specify a type attribute on the &lt;constructor-arg&gt; element with the type ex: type=\"java.lang.Integer\" or type=\"int\"");
		rawQuestions.add("978~Threading~How can you interrupt a thread?~You can call the interrupt() method of the thread you want to interrupt.<br>This sets a boolean value that can be checked with a call to interrupted() or isInterrupted().<br>If the interrupted flag is set, and sleep is called, a InterruptedException is thrown. Note that when sleep throws an InterruptedException, it also clears the interrupted flag");
		rawQuestions.add("979~Threading~Are there any new thread safe collections that are in the java.util.concurrent package?~Yes.<br>ConcurrentLinkedQueue, ConcurrentHashMap, CopyOnWriteArrayList, and CopyOnWriteArraySet");
		rawQuestions.add("980~Threading~Are thread priorities reliable in java?~This is OS dependant.<br>Priorities may map to different things on different OSes.<br>For example, if an OS only has 7 priority levels, more than one in the 10 in Java may map to the same priority in the OS.<br>Also, if a thread is set as a low priority, it may get starved and never run");
		rawQuestions.add("981~Threading~Can a thread acquire more than one lock?~Yes");
		rawQuestions.add("982~Threading~Can a thread that currently holds a lock for some code call another method that is guarded by the same lock?~Yes");
		rawQuestions.add("983~Threading~Can classes or variables be synchronized?~No");
		rawQuestions.add("984~Threading~Can you call start() on a thread to re-run it?~No.<br>A thread can only run once.<br>If you try calling start() on it again, it will throw an exception");
		rawQuestions.add("985~Threading~Can you catch and handle unchecked exceptions from a Thread, if so, how?~Yes.<br>You can install a handler by implementing Thread.UncaughtExceptionHandler, and implementing void uncaughtException(Thread t, Throwable e).<br>Then, you can use the setUncaughtExceptionHandler() method.<br>You can set a default handler for all threads by passing the implemented handler to the static setDefaultUncaughtExceptionHandler of the Thread class.<br>You can also subclass ThreadGroup and override it's uncaughtException() method");
		rawQuestions.add("986~Threading~Can you find out if a thread has been started, and has not yet finished running?~Yes.<br>You can call the isAlive() method on it.<br>This method also returns true if the thread is waiting or awaiting");
		rawQuestions.add("987~Threading~Can you get deadlock with volatile variables?~Not in any way I am aware of.<br>They should just be used for inter-thread communication");
		rawQuestions.add("988~Threading~Can you have separate read and write locks that know about each other?~Yes.<br>If you construct a ReentrantReadWriteLock, you can call it's readLock() and writeLock() methods to create two different lock object that know about each other.<br>The read lock allows many readers and no writers, while the write lock only allows one writer");
		rawQuestions.add("989~Threading~Can you interrupt a thread that is blocking while waiting for a lock?~Yes.<br>If you are using the tryLock() method with a timeout, the thread can be interrupted and throw an InterruptedException.<br>You can also use the lockInterruptibly() method without a timeout to attempt to acquire a lock and this can be interrupted as well");
		rawQuestions.add("990~Threading~Can you make a java collection thread safe?~Yes.<br>You can use a synchronization wrapper.<br>For example, to make an ArrayList thread safe... List synchronizedArrayList = Collections.synchronizedList(new ArrayList()); Note though that if you create an interator from one of these, that creation and iteration should take place in a lock/synchronized block");
		rawQuestions.add("991~Threading~Can you re-run a thread by calling start() a second time?~No.<br>You get an IlleagalThreadStateException");
		rawQuestions.add("992~Threading~Can you synchronize anything except methods?~Yes.<br>You can have synchronized blocks");
		rawQuestions.add("993~Threading~Can you try to keep threads from starving?~You can construct a ReentrantLock with a boolean : true.<br>This will attempt to play fair, and pick the thread that has been waiting the longest.<br>Fairness is not, however guaranteed, and fairness can make things much slower (not always, but it can)");
		rawQuestions.add("994~Threading~Does a sleeping thread release any of the locks it holds?~No");
		rawQuestions.add("995~Threading~Does synchronization have any await and signal capabilities?~Yes.<br>They are implicitly inside the Object class.<br>The method names are wait() and notifyAll()/notify().<br>The new concurrent.locs methods would have been named the same thing, but Object's wait() and notify() are declared as final");
		rawQuestions.add("996~Threading~Do Threads get a default name if none is set?~Yes.<br>\"Thread-x\" where x is an incremented number that starts at 0, and skips numbers for which names are set");
		rawQuestions.add("997~Threading~Do you declare a non-static and static synchronized block the same?~No.<br>The non-static usually is declared with synchronize(this){} while the static block is synchronize(MyClass.class){}");
		rawQuestions.add("998~Threading~How can you set and get a Thread a name?~You can specify one by using the setName() method, or specify one in the Thread's constructor.<br>To get the name, call the getName() method if you have access to the Thread object, or if you are in the Thread, you can call Thread.currentThread().getName();");
		rawQuestions.add("999~Threading~How do you use Reentrant locks?~import java.util.concurrent.locks.*;<br>Lock lock = new ReentrantLock();<br>lock.lock();<br>try{ //do stuff } finally {lock.unlock(); }<br>Remember to try to put the unlock in a finally in case there is an exception.<br>This way you will hopefully avoid deadlock");
		rawQuestions.add("1000~Threading~How do you use the Lock mechanism's conditional objects, and why would you want to?~You might want to because it is a built in implementation of trying to make sure things are thread safe, and execute according to rules correctly.<br>Condition condition = lock.newCondition();<br>while(!someConditionThatShouldBeTrue())<br>{ condition.await(); }<br>Await removes the lock from the current thread, and allows another thread to enter in attempt to satisfy the condition that halted the thread which is calling await().<br>When a thread has possibly satisfied the condition, it can call condition.signalAll().<br>Then when the thread that possibly satisfied the condition unlocks the locked code, all the threads that are in an await() state, compete, and one of them get the lock and picks up where that thread left off (right after the await() call).<br>You can call signal() instead of singnalAll() which will let the jvm pick one thread at random to grant access to the locked portion where it called await().<br>This is more efficient than signal all, but also more prone to deadlock.<br>This is because if that is the only other running thread, and the condition is not satisfied, it will call await() again, and all threads will be blocking");
		rawQuestions.add("1001~Threading~If a ThreadGroup is sent an interrupt, do all of it's children ThreadGroups get an interrupt?~Yes");
		rawQuestions.add("1002~Threading~If a thread owns a lock on an object can it get into other blocks for the same object that are also locked?~Yes");
		rawQuestions.add("1003~Threading~If the activeCount() method is called on a ThreadGroup, are all it's children, and child ThreadGroup's children etc counted?~Yes");
		rawQuestions.add("1004~Threading~If the main java process finishes, but threads are still running, does the application finish and terminate the threads?~Only if the running threads are daemon threads.<br>The threads must finish, or be set to daemon threads for the process to finish unless something like System.exit() is called");
		rawQuestions.add("1005~Threading~Is anything wrong with stopping or suspending a thread?~Yes.<br>Because the thread is being stopped or suspended by an outside call, there is no telling where the thread will stop or suspend.<br>This can leave objects in an inconsistent state, or in a locked state");
		rawQuestions.add("1006~Threading~Is it ok for non static methods to access static variables?~It is legal, but not recommended because it can allow static locks to be bypassed if you are trying to separate instance locks from static locks");
		rawQuestions.add("1007~Threading~Is the lock for non-static methods and blocks the same as the lock for static methods and blocks?~No.<br>There are two separate locks that can be acquired separately");
		rawQuestions.add("1008~Threading~Is there an easy way to make non thread-safe collections thread-safe?~Yes.<br>Wrap them in a synchronizedMap/Set/Collection etc.<br>One additional thing you can do is make sure there are no non-wrapped references to the object as well.<br>Ex: Map map = Collections.synchronizedMap(new HashMap&lt;String,String&gt;);<br>Note that if you need to use an iterator, you need to do so in a lock block because only the methods of the collection are serialized.<br>Usually you are better off using the java.util.concurrent versions of collections like ConcurrentHashMap");
		rawQuestions.add("1009~Threading~Is there any way to timeout while waiting for a lock?~Yes.<br>The tryLock() method of the ReentrantLock class allows a timeout to be specified.");
		rawQuestions.add("1010~Threading~Is there any way to wait for a thread to finish before proceeding?~Yes.<br>The join() method with no params will block until that specific thread is finished.<br>The join(x) method with an long param will block until either the thread finishes or x milliseconds have passed (which ever happens first)");
		rawQuestions.add("1011~Threading~Should you rely on thread safe collections and classes to take care of threading and lock issues?~No.<br>They only take care of locking individual methods.<br>There is still the idea that two method calls of a thread safe class should act atomically, but will not if no other locking mechanism is used");
		rawQuestions.add("1012~Threading~What are considerations you might want to think about when deciding between java.util.concurrent locks and normal (pre 1.5) synchronization?~Each has it's uses.<br>The concurrent package allows calls to obtain a lock the ability to timeout.<br>It also allows multiple conditions to await and signal on.<br>The pre 1.5 synchronization takes less to code (tag a method or block with the synchronized keyword)");
		rawQuestions.add("1013~Threading~What are the Callable and Future constructs?~They represent threads that can return something.<br>A class implements the Callable interface, adding one method public &lt;V&gt; call().<br>Another class FutureTask&lt;V&gt; can be constructed with an object that implements Callable.<br>You can then construct a Thread with the FutureTask.<br>When the thread runs, it calls call() which returns something of type &lt;V&gt;.<br>After the thread starts, you can call get() on the FutureTask.<br>This will block until it gets a result, or you can construct it with a timeout");
		rawQuestions.add("1014~Threading~What are two ways to create a thread?~1 - Implementing Runnable, and it's run() method<br>2 - Extending Thread and overwriting it's run() method<br>Implementing Runnable is probably a better idea because you don't use up your extends and your class probably does not pass the 'IS-A Thread' test");
		rawQuestions.add("1015~Threading~What does the Thread.yield() method do?~It allows the current thread to be paused, and another thread to run");
		rawQuestions.add("1016~Threading~What does the t.join() method do?~It pauses the currently running thread, and resumes it as soon as t's run() method finishes");
		rawQuestions.add("1017~Threading~What does the volatile keyword do?~It allows you to declare volatile variables (ex: volatile int a;) that are immune to compiler optimizations and processor caches that do not know about another thread that could read/write to/from that variable.<br>If a variable is declared as volatile, that variable is synced with the master copy each time it is accessed.<br>There is overhead, but not as much as if methods were being synchronized or locked");
		rawQuestions.add("1018~Threading~What happens if you synchronize a static method?~It is the same as synchronizing a non-static method");
		rawQuestions.add("1019~Threading~What has to happen in order to invoke an object's wait(), notify(), and notifyAll() methods?~They must be called from within a synchronized context for that object(the caller must own the lock for the object)");
		rawQuestions.add("1020~Threading~What is a good practice to apply when using wait() and notify()?~You should probably encase the wait() call in a loop so that it does not call wait after a notify has been called");
		rawQuestions.add("1021~Threading~What is an Executor?~It is another name for a thread pool.<br>You can setup a thread pool with a given number of threads, start it with 0 threads and keep them around for an amount of time after they are done so they can be reused, or with 1 thread that serializes all requests so they happen one after another in a queue like fasion.<br>Ex: ExecutorService pool = Executors.newCachedThreadPool();<br>Future&lt;V&gt; result = pool.submit(&lt;some Runnable or Callable&gt;);<br>Calling submit adds a thread type task object to the thread pool queue.<br>You can also make a ScheduledExecutorService that can launch tasks with delays, or repeat runs.<br>You can also do things like shutdown all the tasks");
		rawQuestions.add("1022~Threading~What is a ThreadGroup, and how do you use one?~A ThreadGroup can be created for the purpose of getting active counts, or interrupting a whole group of threads (like if you want to cancel an entire task that is being handled by several different threads).<br>To create one, you construct a ThreadGroup with a unique String.<br>Ex: ThreadGroup tg = new ThreadGroup(uniqueIdentifier);<br>Thread t = new Thread(tg, new MyThread());<br>Then you can do things like interrupt all threads (tg.interrupt();) or get all the threads (Thread[] threads = new Thread[tg.activeCount()]; tg.enumerate(threads); ).<br>If the count changes between the activeCount() call and the enumerate() call, the Array is filled as much as it can be");
		rawQuestions.add("1023~Threading~What is a ThreadLocal?~It is a variable that has a separate copy for each thread");
		rawQuestions.add("1024~Threading~What is one difference between the sleep() and yield() thread methods?~The yield() method will allow the current thread to run if there are no other threads running.<br>Sleep() on the other hand, will just block if there are no other threads running");
		rawQuestions.add("1025~Threading~What will calling the run() method of a thread ready class do?~It will execute the run() method, but not in a separate thread");
		rawQuestions.add("1026~Threading~When wait() is called on an object, does the thread that executed the wait() call give up it's locks?~It does until notify() chooses the waiting thread.<br>At that point, as soon as the lock becomes available, the lock is reacquired");
		rawQuestions.add("1027~Threading~When you enter a synchronized method, is the whole object locked?~No.<br>Only the synchronized methods of the object");
		rawQuestions.add("1028~Unit Testing~How do you use mock objects?~Your code should use an interface as a reference type to collaborating objects.<br>This way, you can switch out the real object for a mock object in the test code, and not change the actual code");
		rawQuestions.add("1029~Unit Testing~What is a mock, or mock object?~An object that is made to stand in for an object that you will be collaborating with.<br>Mock objects should not contain any business logic");
		rawQuestions.add("1030~Unit Testing~What is an expectation?~A feature built into a mock that that it's calling class has the correct behavior.<br>Ex: making sure that a cleanup or close method is called only once by counting and asserting");
		rawQuestions.add("1031~Unit Testing~How can testing affect coding?~If testing is difficult, the code probably needs to be refactored");
		rawQuestions.add("1032~Unit Testing~Taking into account all the different types of tests, what is whitebox/blackbox testing?~Whitebox testing is closer to unit tests.<br>Blackbox testint is closer to acceptance tests");
		rawQuestions.add("1033~Unit Testing~What can you use to stub http etc requests?~Jetty has an embedded HTTP server that works very well for this purpose.<br>You can add handlers to mimic webpages, 404 errors, and 500 errors without having to code any actual pages");
		rawQuestions.add("1034~Unit Testing~What is Acceptance testing?~It is testing that is done by a customer or stakeholder like QA.<br>It checks to see if the application meets the customer's needs.<br>It can be subjective like how easy it is to use, or how it looks and feels");
		rawQuestions.add("1035~Unit Testing~What is a drawback of stubs?~If they become too complex, you will have to start debugging them instead of the real application");
		rawQuestions.add("1036~Unit Testing~What is an API contract?~A formal agreement between the caller and callee");
		rawQuestions.add("1037~Unit Testing~What is a stub?~Code that is inserted at runtime that takes the place of real code, so that the calling code can be isolated frmo the real implementation");
		rawQuestions.add("1038~Unit Testing~What is a test fixture?~A set of common resources or pieces of data that is needed to run one or more tests");
		rawQuestions.add("1039~Unit Testing~What is a unit of work?~Usually it is a single method");
		rawQuestions.add("1040~Unit Testing~What is functional testing?~It involves using the application, and makes sure that for you, it works as expected");
		rawQuestions.add("1041~Unit Testing~What is integration testing?~It is the level right above unit testing, and involves testing how units, modules, etc interact with each other");
		rawQuestions.add("1042~Unit Testing~What is one easy way to do regression testing?~Make sure that old unit tests are still run and that they pass");
		rawQuestions.add("1043~Unit Testing~What is seperation of concerns?~Hiding concerns to increase the flexability and robustness of software");
		rawQuestions.add("1044~Unit Testing~What is Stress/Load testing?~It involves functional testing on a large scale.<br>This tries to mimic many users at the same time, and profiling the application to look for bottlenecks");
		rawQuestions.add("1045~Unit Testing~What is the idea behind TDD(Test Driven Development)?~Start out by writing a test that fails.<br>Write new code only if an automated test fails, and when you write code, remove duplicate functionality.<br>When the test passes, you're done");
		rawQuestions.add("1046~Unit Testing~Why is using a testing framework a good idea?~You want to test the feature, and not worry about someone entering and validating inputs and outputs poorly.<br>You want to preserve the work you did to setup a test, so you do not have to enter the same test data every time.<br>You do not want to rely on searching output for some error message.<br>You should be able to run many tests, get the results, and get a summary.<br>You should be able to easily define which tests will run.<br>Tests should also be run independent of each other, which might mean loading each in their own class loader. ");
		rawQuestions.add("1047~XML~What is the difference between DOM, SAX, and XPath?~DOM has you loop through all parents and children in a node fasion.<br>SAX lets you setup events that watch for certain elements and then can run code when it finds those elements.<br>XPath lets you get straight to the information you want if you know the exact 'XML Path' that they exist at");
		rawQuestions.add("1048~XML~Are there any basic rules to help determine if you should add an element or an attribute?~Some say that attributes should only be used to modify the interpretation of a value, not to specify a value");
		rawQuestions.add("1049~XML~Can you convert xml data to text, html, etc.?~Yes.<br>You can use a XSL Transformation.<br>You can use XPath matches to run through the doc and symboliclly insert data represented at XPaths into specific places in normal text.<br>You use transformation templates that are specified in XML schema.<br>When you hit an element that matches a XPath associated with a template, the template is run");
		rawQuestions.add("1050~XML~Can you include a DTD in the same document as the actual xml?~Yes.<br>Instead of SYSTEM \"dtd.place\", you can enclose the DTD in [] within the DOCTYPE");
		rawQuestions.add("1051~XML~Can you include data in xml that contains &lt;,&gt;,\",',& etc.?~Yes.<br>You can do it in a CDATA section. &lt;![CDATA[]]&gt;.<br>CDATA sections cannot contain the string ]]&gt;.");
		rawQuestions.add("1052~XML~Can you install error handlers for parsing xml?~Yes.<br>If you create a class that implements the ErrorHandler interface, and implement warning(), error(), and fatalError(), you can attach these error handlers to the system with the call builder.setErrorHandler(handler).<br>These handlers can report line and column numbers because each method (warning, error, fatalError) takes a parameter org.xml.sax.SAXParseError that has the methods getLineNumber() and getColumnNumber()");
		rawQuestions.add("1053~XML~Can you jump to anywhere in a document and grab elements, attributes, counts, etc.?~Yes.<br>You can use XPath.<br>import javax.xml.xpath.*;<br>XPathFactory f = XPathFactory.newInstance();<br>XPath path = f.newXPath();<br>String val = path.evaluate(\"/rootnode/../element\", document);<br>You can also get a Node, or NodeList object by givint that path to evaluate, as well as a third parameter of the object type (ex: XPathConstants.NODE/NODESET).<br>The main evaluate string can also take parameters like count(/...) and /rootnode/element/@attr or /rootnode/a[1].<br>Note that the indexes used are 1 based in XPath");
		rawQuestions.add("1054~XML~Can you omit end tags in xml?~No");
		rawQuestions.add("1055~XML~Do you have to enclose all attribute values in xml in quotes?~Yes");
		rawQuestions.add("1056~XML~How can you support a PUBLIC identifier for a DTD when using the DOM?~Create a class that implements EntityResolver.<br>This class needs one method : public InputSource resolveEntity(String publicID, String systemID).<br>This method returns an InputSource to a public DTD");
		rawQuestions.add("1057~XML~How can you write xml as a document?~Once you have a document object, you can call it's appendChild() and setAttribute() methods, passing in an Element or a attribute name/value pair.<br>You keep doing this, and when you are ready to write out the file,<br>Transformer t = TransformerFactory.newInstance().newTransformer();<br>t.transform(new DOMSource(doc), new StreamResult(new FileOutputStream(new File(&lt;filename&gt;))));<br>You will need things like<br>import javax.xml.transform.*;<br>import javax.xml.transform.dom.*;<br>import javax.xml.transform.stream.*;");
		rawQuestions.add("1058~XML~How do you add a comment to xml?~With &lt;!-- --&gt;. Comments cannot include --");
		rawQuestions.add("1059~XML~How do you get the attributes of an element?~element.getAttributes() returns a NamedNodeMap object.<br>This object is a set of attributes, and has the methods getLength(), and item(int).<br>Once you have a Node from the item(int) call, you can either call getNodeName() or getNodeValue().<br>You can also call element.getAttribute(\"nameOfAttribute\"); if you know the name");
		rawQuestions.add("1060~XML~How do you specify an external DTD in an xml document?~&lt;!DOCTYPE rootelement SYSTEM \"filenameOrURL\"&gt;");
		rawQuestions.add("1061~XML~How do you start reading elements from an xml file once it is setup(once you have a Document object)?~document.getDocumentElement(); will return the root element.<br>To get an element's children, call element.getChildNodes() which returns a NodeList.<br>Any time you have an element, you can call it's getTagName() method to get the tag name");
		rawQuestions.add("1062~XML~How do you turn off whitespace reporting as text if there is no mixed content(elements as well as #PCDATA)?~factory.setIgnoringElementContentWhitespce(true)");
		rawQuestions.add("1063~XML~How do you turn validation of the DOM on programatically?~factory.setValidating(true)");
		rawQuestions.add("1064~XML~How do you use the SAX parser?~SAXParserFactory f = SAXParserFactory.newInstance();<br>f.setNamespaceAware(true);<br>SAXParser p = factory.newSAXParser();<br>InputStream in = new URL(url).openStream();<br>p.parse(in, new DefaultHandler() {&lt;override one of the methods like startElement&gt;})");
		rawQuestions.add("1065~XML~How is the SAX parser different than the DOM parser?~The SAX parser is meant for larger files and does not read in the entire file at once.<br>It relies on the program track all the structure info.<br>The DOM parser is actually built on top of the SAX parser.<br>The SAX parser relies on handlers for starting and ending the document and tags, as well as a handler for when character data is encountered");
		rawQuestions.add("1066~XML~If you call the getAttribute(string) method of a NamedNodeMap and there is no attribute by that name, what happens?~No exception is thrown, but an empty string is returned");
		rawQuestions.add("1067~XML~If you call the item(int) method of a NodeList or a NamedNodeMap and there is no item at that index, what happens?~No exception is thrown, but null will be returned");
		rawQuestions.add("1068~XML~Is it a good idea to combine child elements and text(ex: &lt;font&gt;Ariel&lt;size&gt;3*lt;/size&gt;&lt;/font&gt;)?~No");
		rawQuestions.add("1069~XML~Is xml case sensitive?~Yes");
		rawQuestions.add("1070~XML~Usually what is the first thing in a xml doc?~The header, but it is optional although highly recommended.<br>This can be followed by a document type definition");
		rawQuestions.add("1071~XML~What are processing instructions?~They are instructions for the benefit of the application that processes the xml.<br>They are delimeted by &lt;? ?&gt;.<br>Generally all xml files will start with a processing instruction like &lt;?xml version=\"1.0\"?&gt;.");
		rawQuestions.add("1072~XML~What do you do with NodeLists?~NodeList objects have a method item(int) who's int parameter is which Node you want to get(0 indexed).<br>NodeLists have a getLength() method that returns the number of Nodes in the list.<br>When you get Nodes, you may want to make sure that they are not whitespace (Text), by doing an instanceof Element.<br>If a Node is Text, you can cast the child to Text, and call getData() on it.");
		rawQuestions.add("1073~XML~What do you have to do in code to parse an xml file with XML schema?~Turn on namespace support even if you do not use one (factory.setNamespaceAware(true);), factort.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaLanguage\", \"http://www.w3.org/2001/XMLSchema\");, and you have to remember that sometimes (in java 1.5) the parser does not discard element content whitespace");
		rawQuestions.add("1074~XML~What is a character reference?~Character references refer to characters that are extended ascii or unicode.<br>You specify them in this format : &#d; or &#xh; where d is the decimal unicode number and h is the hex unicode number.<br>Ex: &#241; &#x2234;");
		rawQuestions.add("1075~XML~What is a namespace url and alias?~xmlns=\"blah\" sets the default namespace for all children.<br>xmlns:test=\"blah\" sets the namespace for test such that attributes with the test: identifier will be in the test namespace.<br>The urls usually are meaningless except to distinguish differences, but can contain docs at the url that explain the reason for the namespace.<br>DocumentBuilderFactory objects can call the method setNamespaceAware(boolean) to turn on and off namespacing");
		rawQuestions.add("1076~XML~What is an entity reference?~Entity references have predefined meanings.<br>They have the format of &name; where name is lt, gt, amp, quot, apos, or something else defined in a DTD");
		rawQuestions.add("1077~XML~What is an example of a line in a DTD for an attribute?~&lt;!ATTLIST font style (plain|bold) \"plain\"&gt; specifies that the font element has an attribute called style that can either be plain or bold, and defaults to plain");
		rawQuestions.add("1078~XML~What is an example of a line in a DTD for an element?~&lt;!ELEMENT font (name,size)&gt; specifies that a font element is followed by a name and size element");
		rawQuestions.add("1079~XML~What is an XML schema simple type and complex type?~A simple type is a string with formatting restrictions.<br>A complex type is a type composed of other types");
		rawQuestions.add("1080~XML~What is an xsd:sequence tag?~It is like concatenation.<br>Everything in the sequence is how everything should be ordered");
		rawQuestions.add("1081~XML~What is the setup to read a xml file using the DOM?~import javax.xml.parsers.*;<br>import org.w3c.dom.*;<br>DocumentBuilderFactory f = DocumentBuilderFactory.newInstance();<br>DocumentBuilder b = f.newDocumentBuilder();<br>Document d = b.parse(new File(someXmlFile);");
		rawQuestions.add("1082~XML~What is used to validate xml?~DTDs and XML Schema");
		rawQuestions.add("1083~XML~What is the difference between XSL, XSL-FO, XSLT, and XSD?~XSL is the Xml Stylesheet Language. It is also the extention of files containing anything starting with XSL.<br>In the land of XSL, there is XSL-FO(like .css for .xml) and XSLT(transformation templates can be specified with this).<br>There are &lt;xsl:&gt; tags(XSLT) and &lt;fo:&lt; tags (XSL-FO).<br>There is a bit of confusion in that the acronyms are slightly different, by that they are used to specify different things in manytimes, the same context and file.<br>XSD is different in that it is more of a schema for validation of XML");
		rawQuestions.add("1084~JNDI~What is JNDI?~It is the Java Naming and Directory Interface");
		rawQuestions.add("1085~JNDI~What are some common JNDI services?~NDS, DNS, LDAP, NIS, RMI, JMS");
		rawQuestions.add("1086~JNDI~How do you create a context to work with?~java.naming.InitialContext ctx = new java.naming.InitialContext();<br>It also has a constructor that accepts a Properties object.<br>This object can be filled with constants like:<br>InitialContext.INITIAL_CONTEXT_FACTORY<br>and<br>InitialContext.PROVIDER_URL<br>to provide the JNDI classes with the information and protocols needed to connect to the directory services");
		rawQuestions.add("1087~JNDI~Once you have a JNDI Context to work with, how do you get objects from it?~Use the context's lookup() method, and specify what object you want.<br>Ex: TopicConnectionFactory tcf = (TopicConnectionFactory)initialCtx.lookup(JMS_CONNECTION_FACTORY);");
		rawQuestions.add("1088~JMS~What do you need to do to use JMS?~You need a JNDI provider such as JBoss, something to query that is registered with that provider like a JMS queue, and a place to put the query code");
		rawQuestions.add("1089~JMS~What is the difference between a JMS Topic and a JMS Queue?~A Topic allows many subscribers to get messages when they are listening.<br>A Queue allows messages to be put in a queue, and then later on a client can pull them out of the queue.<br>In a queue, the client does not have to be listening when the message is sent");
		rawQuestions.add("1090~JMS~How do you publish a message to a JMS Topic?~First lookup a javax.jms.TopicConnectionFactory object from JNDI.<br>topicConnection = tcf.createTopicConnection();<br>topic = (Topic) initialCtx.lookup(&lt;A JMS topic like topic/test&gt;);<br>topicSession = topicConnection.createTopicSession(false, TopicSession.AUTO_ACKNOWLEDGE);<br>topicConnection.start();<br>TopicPublisher send = topicSession.createPublisher(topic);<br>TextMessage tm = topicSession.createTextMessage(\"This is my message: \" + System.currentTimeMillis());<br>send.publish(tm);<br>Where the all the returning objects are the same type as their name specifies from javax.jms(topicSession for example is javax.jms.TopicSession)");
		rawQuestions.add("1091~JMS~How do you subscribe to and get a message from a JMS Topic?~First lookup a javax.jms.TopicConnectionFactory object from JNDI.<br>topicConnection = tcf.createTopicConnection();<br>topic = (Topic) initialCtx.lookup(&lt;A JMS topic like topic/test&gt;);<br>topicSession = topicConnection.createTopicSession(false, TopicSession.AUTO_ACKNOWLEDGE);<br>topicConnection.start();<br>TopicSubscriber recv = topicSession.createSubscriber(topic);<br>Message msg = recv.receive(5000);<br>if (msg != null)<br>{<br>&nbsp;&nbsp;System.out.println(\"TopicSubscriber.recv, msgt=\"+msg);<br>}<br>Where the all the returning objects are the same type as their name specifies from javax.jms(topicSession for example is javax.jms.TopicSession)");
		rawQuestions.add("1092~JMS~How do you send a message to a JMS Queue?~First lookup a javax.jms.TopicConnectionFactory object from JNDI.<br>QueueConnectionFactory tcf = (QueueConnectionFactory) tmp;<br>queueConnection = tcf.createQueueConnection();<br>queue = (Queue) iniCtx.lookup(&lt;A JMS queue like queue/test&gt;);<br>queueSession = queueConnection.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE);<br>queueConnection.start();<br>QueueSender send = queueSession.createSender(queue);<br>TextMessage tm = queueSession.createTextMessage(\"This is my message: \" + System.currentTimeMillis());<br>send.send(tm);<br>Where the all the returning objects are the same type as their name specifies from javax.jms(queueSession for example is javax.jms.QueueSession)");
		rawQuestions.add("1093~JMS~How do you get a message from a JMS Queue?~First lookup a javax.jms.TopicConnectionFactory object from JNDI.<br>QueueConnectionFactory tcf = (QueueConnectionFactory) tmp;<br>queueConnection = tcf.createQueueConnection();<br>queue = (Queue) iniCtx.lookup(&lt;A JMS queue like queue/test&gt;);<br>queueSession = queueConnection.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE);<br>QueueReceiver queueReceiver = queueSession.createReceiver(queue);<br>JmsExample jmsTopicExample = new JmsExample();<br>queueReceiver.setMessageListener(jmsTopicExample);<br>queueConnection.setExceptionListener(jmsTopicExample);<br>queueConnection.start();<br>System.out.print(\"waiting for messages\");<br>for (int i = 0; i < 10; i++)<br>{<br>&nbsp;&nbsp;Thread.sleep(1000);&nbsp;&nbsp;System.out.print(\".\");<br>}<br>JmsExample must implement MessageListener and ExceptionListener which means that it must include the following methods:<br>public void onMessage(Message message)<br>{<br>&nbsp;&nbsp;TextMessage textMessage = (TextMessage)message;<br>&nbsp;&nbsp;try<br>&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"Got a message: \" + textMessage.getText());<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;catch(Exception e)<br>&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Log.d(HomelessConstants.LOG_TAG_DEBUG, HomelessConstants.LOG_STACKTRACE, e);<br>&nbsp;&nbsp;}<br>}<br>public void onException(JMSException exception)<br>{<br>&nbsp;&nbsp;System.out.println(\"something happened: \" + exception);<br>}<br>Where the all the returning objects are the same type as their name specifies from javax.jms(queueSession for example is javax.jms.QueueSession)");
		rawQuestions.add("1094~JMS~Do JMS messages in a Queue vanish if they are in the queue when the JMS provider goes down?~No.<br>At least not in JBoss.<br>If the provider comes back up, the messages will still be waiting for a consumer to get them");
		rawQuestions.add("1095~JMS~Is there any way to make sure that a consumer gets messages from a topic even when it is not subscribing to that topic?~Yes.<br>If you setup the Topic to be 'Durable', then a client can connect to the topic to let it know that the client exists.<br>Then, if that client disconnects, but the JMS Topic keeps running, it will remember that that client has not recieved the messages that it missed, and send them when that client reconnects");
		rawQuestions.add("1096~JAVA 6~What are some new collection types in Java 6?~ArrayDeque, ConcurrentSkipListSet/Map, LinkedBlockingQueue");
		rawQuestions.add("1097~JAVA 6~What is the Java 6 way to copy an array?~Instead of Java 5's :<br>int[] newArray = new int[newLength];<br>System.arraycopy(oldArray, 0, newArray, 0, oldArray.length);<br><br>You can do:<br>int[] newArray = Arrays.copyOf(a, newLength);");
		rawQuestions.add("1098~JAVA 6~What is JAXP and what has been added to it in Java 6?~JAXP stands for Java API for XML Procesing.<br>It already had:<br>DOM(Document Object Model) for random access of elements<br>and<br>SAX(Simple API for XML) which allows a one pass through the xml document.<br>Mow JAXP has StAX(Streaming API for XML) that allows \"pulls\" to  relative data so you have more context than SAX");
		rawQuestions.add("1099~JAVA 6~What is JAXB?~Java Architecture for XML Binding.<br>This allows you to marshal and unmarshal data to xml format.<br>One example of usage would be reading an xml file.<br>Instead of parsing the whole thing, why not turn it into an object... without writing classes that conform to the xml!<br>If you have a schema, it is easy because there are tools like xjc that will build the needed interfaces and implementations.<br>You can also use JAXB to validate xml against a schema");
		rawQuestions.add("1100~Web Services~What is JAX-RPC?~Java API for XML based RPC.<br>It allows servlet apps to be made available via web services");
		rawQuestions.add("1101~Web Services~What is JAX-WS?~Java API for Web Services.<br>It is used in developing SOAP and REST applications.<br>It replaces JAX-RPC");
		rawQuestions.add("1102~Web Services~What is SOAP?~Simple Object Access Protocol.<br>It is XML based communication protocol that is transfered over HTTP");
		rawQuestions.add("1103~Web Services~What is WSDL?~Web Services Descripion Language.<br>It is XML that is used to describe and locate web services");
		rawQuestions.add("1104~Web Services~What is UDDI?~Universal Description, Discovery, and Integration.<br>It is a directory of services described by WSDL that operates via SOAP");
		rawQuestions.add("1105~Web Services~What is REST?~REpresentational State Transfer");
		rawQuestions.add("1106~JAVA 6~Is there any way to use java programatically, as in compiling?~Yes.<br>Use javax.tools.*");
		rawQuestions.add("1107~JAVA 6~Is there any way to use scripting languages inside of Java?~Yes.<br>Use javax.scripting.*");
		rawQuestions.add("1108~JAVA 6~Is there any database system built into Java?~Yes.<br>The JavaDB which is Apache Derby is shipped with Java 6.<br>It is located in the $JAVA_HOME/db directory");
		rawQuestions.add("1109~JAVA 6~Are there any changes to JDBC and SQL?~Yes.<br>JDBC 4.0 is in Java 6.<br>It has the following additions:<br>Auto-loading of JDBC driver class<br>Connection management enhancements<br>Support for RowId SQL type<br>DataSet implementation of SQL using Annotations<br>SQL exception handling enhancements<br>SQL XML support");
		rawQuestions.add("1110~Hibernate~What problems does an ORM solution solve?~Grandularity, subtypes, identity, object/relational mismatch");
		rawQuestions.add("1111~Hibernate~What is dirty checking?~Automatically detecting object state changes in order to synchronize the updated state with the database");
		rawQuestions.add("1112~Hibernate~What is transactional write-behind?~It is the name given to how Hibernate may re-order sql.<br>For example, if you want three things done in code, Hibernate may re-order those when it sends statements to the db to avoid constraint violations, and help out efficiency");
		rawQuestions.add("1113~Hibernate~Does a persistent class need to have a default constructor?~Yes.<br>Hibernate calls persistent classes using Reflection");
		rawQuestions.add("1114~Hibernate~Can persistent classes be final or have final methods?~Not if they are using proxies");
		rawQuestions.add("1115~Hibernate~Do you have to have getters and setters for each persistent property?~No.<br>You can drop them, or make them private if you do not want them publicly accesed.<br>Hibernate can still access them via reflection");
		rawQuestions.add("1116~Hibernate~Does the getter have to return the same object as is passed to the setter for a property?~This depends.<br>If the values are the same(not memory locations) it is ok as long as it is not a Collection.<br>Collections are compared by identity");
		rawQuestions.add("1117~Hibernate~What happens if a RuntimeException or checked exception is thrown in an accessor method?~The transaction is rolled back.<br>If it was a checked exception, Hibernate wraps it in a RuntimeException");
		rawQuestions.add("1118~Hibernate~What is the convention for filename and placement of a XML mapping file?~It should be named &lt;className&gt;.hbm.xml.<br>It should eb placed in the same package as the class it maps");
		rawQuestions.add("1119~Hibernate~Can you use xml to have global annotations or override annotations?~Yes, if you only use JPA annotations.<br>You can put a file called orm.xml in your classpath in the META-INF directory of the persistence system");
		rawQuestions.add("1120~Hibernate~Can you use annotations to have global annotations?~Yes.<br>You have to use non JPA annotations, put them in a package-info.java file, and that file must be specified in the 'persistence unit'");
		rawQuestions.add("1121~Hibernate~Can you have properties used with mapping files in the same way that an Ant build.xml's script uses properties files?~Yes.<br>In version 3.x, you can use hibernate-mappings-3.0.dtd.<br>Sometimes part of this is refered to as using 'placeholders'");
		rawQuestions.add("1122~Hibernate~How do you map an ID field in hibernate XML and JPA annotations?HibernateXML : <br>~&lt;class name=\"category\" table=\"CATEGORY\"&gt;<br>&lt;id name=\"id\" column=\"CATRGORY_ID\" type=\"long\"&gt;<br>&nbsp;&nbsp;&lt;generator class name=\"native\"/&gt;<br>&lt;/id&gt;<br>&lt;/class&gt;<br><br>JPA Annotations:<br>@Entity<br>@Table(name=\"CATEGORY\")<br>public class Category {<br>&nbsp;&nbsp;private Long id;<br>&nbsp;&nbsp;@Id<br>&nbsp;&nbsp;@GeneratedValue(strategy = GenerationType.Auto)<br>&nbsp;&nbsp;public Long getId() {<br>&nbsp;&nbsp;&nbsp;&nbsp;return this.id;<br>&nbsp;&nbsp;}<br>}<br><br>JPA XML :<br>&lt;entity class=\"auction.model.Category\" access=\"FIELD\"&lt;<br>&nbsp;&nbsp;&lt;table name=\"CATEGORY\"/&gt;<br>&nbsp;&nbsp;&lt;attributes&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;id name=\"id\"&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;generated-value strategy=\"AUTO\"/&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/id&gt;<br>&nbsp;&nbsp;&lt;/attributes&gt;<br>&lt;/entity&gt;<br><br>The GeneratedValue annotation has a default value of GenerationType.AUTO if none is specified, and you can annotate either a getter or a field depending on if you want the field accessed via a accessor or via the actual field");
		rawQuestions.add("1123~Hibernate~What are some generator strategies and what is the difference?~identity, sequence, increment, hilo, and native.<br>native chooses one based on db capability, whereas the others are for specific databases");
		rawQuestions.add("1124~Hibernate~Can you create your own strategy, if so how?~Yes.<br>You can implement Hibernates IdentifierGenerator interface");
		rawQuestions.add("1125~Hibernate~Is there any way to turn off caching update queries on objects that should be immutable(such as log entries that you never want to modify)?~Yes.<br>You can use the Hibernate xml or annotations of:<br>&lt;class name=\"SomeClass\" mutable=\"false\"&gt;<br><br>@Entity<br>@org.hibernate.annotations.Entity(mutable = false)<br><br>Note that this is an extention of JPA... not JPA");
		rawQuestions.add("1126~Hibernate~How can you turn off auto namespace import(if you have the same class name in different packages used by the same SessionFactory)?~You can add the attribute:<br>import=\"false\"<br>in the &lt;hibernate-mapping&gt; tag");
		rawQuestions.add("1127~Hibernate~Can you alias the class name with something usable in HQL or JPA QL, if so, how?~Yes.<br>&lt;hibernate-mapping&gt;<br>&nbsp;&nbsp;&lt;import class=\"some.package.SomeClass\" rename=\"MyAlias\"&gt;<br>&lt;/hibernate-mapping&gt;<br><br>@Entity(name=\"SomeAlias\")");
		rawQuestions.add("1128~Hibernate~Can you enforce naming conventions?~Yes.<br>Programatically, you can create a SessionFactory via :<br>Configuration cfg = new Configuration();<br>cfg.setNamingStrategy( new &lt;A class that extends ImprovedNamingStrategy&gt;);<br>SessionFactory sessionFactory = cfg.configure().buildSessionFactory();<br><br>You can also include a hibernate.ejb.naming_strategy option in your persistence.xml");
		rawQuestions.add("1129~Hibernate~If you specify persistence of a class via XML or Annotations, do you have to specify all fields, and put annotations on all fields?~In XML, you must specify all fields.<br>With annotations, all fields are automatically persistent");
		rawQuestions.add("1130~Hibernate~How can you make a field non-persistent?~You can:<br>1 - Mark it as being transient<br>2 - Annotate it with @javax.persistence.Transient<br>3 - Include a &lt;transient name=\"propertyName\"/&gt; tag in your &lt;attributes&gt; JPA XML");
		rawQuestions.add("1131~Hibernate~What is required when specifying a persistent attribute in XML?~Only the name.<br>Ex: &lt;property name=\"someProperty\"/&gt;<br>The column attribute is optional and copied from the name if not specified.<br>The type is also optional and retrieved through reflection if not specified");
		rawQuestions.add("1132~Hibernate~How can you specify that a column cannot be null, and are there any side effects?~&lt;property name=\"someName\" not-null=\"true\"&gt;<br>-OR-<br>@Basic(optional=false)<br><br>The side effect is that this is a Java constraint and Hibernate can report the illegal null without going to the database or executing the SQL");
		rawQuestions.add("1133~Hibernate~Is @Basic(optional=false) the same as @Column(nullable=false)?~No.<br>The nullable=false only adds a NOT NULL constraint to the schema when generated.<br>The optional=false actually forces a value in java");
		rawQuestions.add("1134~Hibernate~What is the default behavior for determining whether to use accessor or field access type?~Unless overridden in XML with a &lt;hibernate-mapping default-access=\"true|false\"&gt; or a @AccessType annotation, the default is to follow what the @Id annotation does (whether it is on a field or accessor)");
		rawQuestions.add("1135~Hibernate~Can a property represent a view?~It can represent a 'formula'.<br>Ex: &lt;property name=\"myProperty\" formula=\"TOTAL + (TAX * TOTAL)\"/&gt;<br>-OR-<br>@org.hibernate.annotations.Formula(\"TOTAL + (TAX * TOTAL)\")<br><br>Note that formula values are only generated when the entity is retrieved from the database. This can lead to outdated values if other properties are modified");
		rawQuestions.add("1136~Hibernate~How can you tag a field as generated/immutable?~&lt;property name=\"myProperty\" column=\"myColumn\" update=\"false\" insert=\"false\" generated=\"always\"/&gt;<br>-OR-<br>@Column(updatable = false, insertable = false)<br>@org.hibernate.annotations.Generated(org.hibernate.annotations.GenerationTime.ALWAYS)");
		rawQuestions.add("1137~Hibernate~What is Dynamic SQL Generation?~Hibernate caches CRUD operation SQL on startup.<br>By default, for updates and inserts, all columns are set and if no value is specified, the column in question is set to it's old value.<br>If you have a column however that is not-null or is auto-generated, you need to turn on dynamic inserts and updates.<br>Ex: &lt;class name=\"Item\" dynamic-insert=\"true\" dynamic-update=\"true\"&gt;<br>-OR-<br>@Entity @org.hibernate.annotations.Entity(dynamicInsert=true, dynamicUpdate=true)");
		rawQuestions.add("1138~Hibernate~Can you map DDL defaults?~Yes.<br>Ex: &lt;property name=\"myProperty\"&gt;<br>&nbsp;&nbsp;&lt;column name=\"SOME_COLUMN\" default=\"'1'\" generated=\"insert\"/&gt;<br>&lt;/property&gt;<br><br>-OR-<br><br>@Column(name=\"SOME_COLUMN\", columnDefinition = \"number(10,2) default '1'\")<br>@org.hibernate.annotations.GenerationTime.INSERT)");
		rawQuestions.add("1139~Hibernate~What is the difference between an Entity Type and a Value Type?~An Entity Type is the Java version of a DB Table.<br>A Value Type (Hibernate calls this a component and JPA calls this an Embedded Class) is persisted to the same DB Table as the owning entity, but has it's own Java class");
		rawQuestions.add("1140~Hibernate~How do you use Embedded Classes?~In XML : Instead of a &lt;property&gt; tag, use:<br>&lt;component name=\"someName\" class=\"SomeClass\"&gt;<br>&nbsp;&nbsp;&lt;property ... continue as a normal property tag specifying a local column etc&gt;<br>&lt;/component&gt;<br><br>-OR-<br><br>@Embedded<br>private SomeClass someName;<br>//Then add a @Embeddable annotation to that 'embedded' class");
		rawQuestions.add("1141~Hibernate~How can you override anything in an Embedded Class when using an actual Entity who's property is embedded?~@Embedded<br>@AttributeOverrides( { @AttributeOverride(name=\"someName\", column = @Column(name=\"SOME_NAME\")),...})<br><br>-OR-<br><br>&lt;attributes&gt;<br>&nbsp;&nbsp;&lt;embedded name=\"someName\"&gt;<br>&nbsp;&nbsp;&lt;attribute-override name=\"street\"&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;column name=\"SOME_COLUMN\"/&gt;<br>&nbsp;&nbsp;&lt;/attribute-override&gt;<br>&lt;/embedded&gt;<br><br>Keep in mind that if you override an Embedded Class, all of the embedded column attributes are replaced");
		rawQuestions.add("1142~Hibernate~Can you create backpointers from an Embedded Class to it's Parent Class?~Yes.<br>You can use a &lt;parent name=\"user\"/&gt; to map a \"user\" property to the parent class.<br>You can also use @Parent public ParentClass propertyName");
		rawQuestions.add("1143~Hibernate~If you have an Embedded class that exists, how can you null it out in a parent class?~If you set all properties in an embedded class to null, and then set that class in the parent, it will null out that property in the parent.<br>Hibernate represents a null component as null values in all mapped columns of that component");
		rawQuestions.add("1144~Hibernate~What inheritance mapping schemes can be used?~Table per concrete class, polymorphism implied - @MappedSuperclass - Columns are repeated over tables<br>Table per concrete class with unions - @Inheritance(strategy=InheritanceType.TABLE_PER_CLASS) - No duplicate columns, but no table relationships either<br>Table per class hierarchy - @Inheritance(strategy=InheritanceType.SINGLE_TABLE) - Easiest, but not normalized because columns must be nullable to have multiple classes in one table<br>Table per superclass and subclass - @Inheritance(strategy=InheritanceType.JOINED) - Normalized, superclasses get their own table and subclasses have their own table with only subclass columns, hard to do SQL by hand");
		rawQuestions.add("1145~Hibernate~What is a mapping type (the value of the 'type' parameter in a &lt;property&gt; tag or in a @org.hibernate.annotations.Type annotation?~It is a bridging type between Java property types and SQL types");
		rawQuestions.add("1146~Hibernate~How can you make your own mapping types?~Implement org.hibernate.usertype.* interfaces.<br>For mappings that map a Java type to more than one column, you can add a &lt;typedef&gt; block or @org.hibernate.annotations.TypeDefs annotation to reuse the more verbose user defined type mapping");
		rawQuestions.add("1147~Hibernate~Are there any gotchas in using Sets or other collections that do not allow duplicates to represent composite types (a table with multiple fields)?~Yes.<br>Sets do not have duplicates. Because of this, the primary key needs to be made up of all the columns (multiple fields), and because they are all part of a primary key, they must all be non-null");
		rawQuestions.add("1148~Hibernate~What is the &lt;key&gt; tag in a collection property for?~It defines a foreign key so to speak.<br>This is how Hibernate knows what rows to grab from a mapping table(what value types are linked to an entity)");
		rawQuestions.add("1149~Hibernate~What annotations do you use to map collections to an entity?~@org.hibernate.annotations.CollectionOfElements<br>@JoinTable");
		rawQuestions.add("1150~Hibernate~How do you tell Hibernate you want to have a one-to-many mapping?~In the 'many' classes config, &lt;many-to-one name=\"someClass\" not-null=\"true\"/&gt; or @ManyToOne<br><br>In the 'one' classes config, &lt;set name=\"someClass\"&gt;<br>&nbsp;&nbsp;one-to-many class=\"SomeClass\"/&gt;<br>&lt;/set&gt;<br>or<br>@OneToMany");
		rawQuestions.add("1151~Hibernate~What is the inverse attribute of &lt;set&gt; or the mappedBy= parameter of @OneToMany?~It states that because there are two possible controllers of a foreign key (one in the set property, and one in the collection table config), that only one (the inverse config) should control that update.<br>Keep in mind that this means that if you try to update via Java on the non-controlling side, nothing will be persisted");
		rawQuestions.add("1152~Hibernate~What is cascading in Hibernate?~It mean transitive actions.<br>For example, instead of deleting a reference in table A, and then seperately deleting the row intable B, a call to remove the reference in table A will 'cascade' and do both deletes.<br>&lt;set name=\"someName\" cascade=\"save-update\"&gt;<br>or<br>@OneToMany(cascade={CascadeType.PERSIST, CascadeType.MERGE}, mappedBy=\"someClass\")");
		rawQuestions.add("1153~Hibernate~How do you create a foreign key reference from table A to table B?~&lt;many-to-one name=\"tableB\" class=\"tableBClass\" column=\"FK_Column\" cascade=\"save-update\" unique=\"true\"/&gt;<br>-OR-<br>@OneToOne<be>@JoinColumn(name=\"tableBcolumnName\")");
		rawQuestions.add("1154~Hibernate~Why might you get a ClassCastException when lazy-loading polymorphic table references?~In a lazy-load, a proxy object is used, and that proxy object is not typesafe to what you eventually will pill");
		rawQuestions.add("1155~Hibernate~What is dirty checking?~It is when Hibernate checks to see if an object has been modified.<br>This is done so that it doesn't have to write out to the database all objects that are tagged as persistent(some may not have changed at all)");
		rawQuestions.add("1156~Hibernate~How can you implement your own dirty checking?~Supply a custom findDirty() method");
		rawQuestions.add("1157~Hibernate~Can you always rely on identifier values for objects to not change?~No.<br>If you are working with an object that has not yet persisted, it may not have been assigned an id by hibernate, and thus can chage later");
		rawQuestions.add("1158~Hibernate~Are there any things to remember when creating equals() and hashcode() methods?~Yes.<br>You should use getter methods to find out about properties becuase Hibernate may use proxies instead of an object that holds the actual property values");
		rawQuestions.add("1159~Hibernate~How do you start and end a unit of work in Hibernate?~SessionFactory sessionFactory = new Configuration().configure.buildSessionFactory();<br>Session session = sessionFactory.openSession();<br>Transaction tx = session.beginTransaction();<br><br>tx.commit();<br>session.close();");
		rawQuestions.add("1160~Hibernate~How do you store(persist) an object in Hibernate?~session.save(someObject);");
		rawQuestions.add("1161~Hibernate~How do you load an object in Hibernate?~There are two ways.<br>SomeClass someClass = (SomeClass) session.load(SomeClass.class, new SomeClass(id));<br>-OR-<br>SomeClass someClass = (SomeClass) session.get(SomeClass.class, new SomeClass(id));");
		rawQuestions.add("1162~Hibernate~What is the difference between session.load() and session.get() in Hibernate?~If no row is found:<br>get() returns null<br>load() throws an ObjectNotFoundException<br><br>load() always tries to load a proxy and does so unless the object is already loaded into the persistence context.<br>get() always hits the database");
		rawQuestions.add("1163~Hibernate~What do Hibernate proxy classes offer?~They contain the identifier, and can allow lazy loading");
		rawQuestions.add("1164~Hibernate~Can you disassociate an identifier from an object that has one?~Yes.<br>If you enable hibernate.use_identifier_rollback, Hibernate can remove the identifier from the object after deleting it from the database so that it can be reused in a different unit of work");
		rawQuestions.add("1165~Hibernate~What does session.update(someObject) do?~It moves the object from a detached state to a persistent state and queues updates to the database to make the database version represent the object version");
		rawQuestions.add("1166~Hibernate~What does session.lock(someObject, LockMode.SOME_LOCK_MODE) do?~It moves the object from a detached state to a persistent state, but does this without queuing any udpates because it assumes that you are sure the object has not changed state since it was detached");
		rawQuestions.add("1167~Hibernate~What are the Hibernate lifecycle states?~Transient<br>Persistent<br>Detached<br>Removed");
		rawQuestions.add("1168~Hibernate~What does session.delete(someObject) do?~It removes the associated persisted data from the database and detaches the object");
		rawQuestions.add("1169~Hibernate~Does an object have to be in a persisted state to use session.delete() on it?~No.<br>You do not have to reattach an object to use session.delete() on it");
		rawQuestions.add("1170~Hibernate~What does session.merge(someObject) do?~It 'merges' the passed in object with a matching object that it finds in this order:<br>An object in cache with a matching identifier<br>An object in the database with a matching identifier<br>A new object that is created and assigned a matching identifier<br><br>By 'merging' it copies over all value typed fields, as well as removing or adding items in collection to make it mirror the object passed in.<br>The new 'merged' object is returned so that if for some reason you need both, you have both the old and newly merged objects");
		rawQuestions.add("1171~Hibernate~Why might you get an OutOfMemoryException, and what can you do to help prevent it?~Hibernate keeps a 'pristine' cached copy of all persistent objects.<br>It uses these to compare persistent objects to their original, and this is how it accomplishes it's automatic dirty checking.<br><br>You can help prevent excess memory consumption by:<br>Only persisting objects that need to be persisted at the time<br>Call session.evict(someObject), which removes it from the cache and detaches the object<br>Call session.clear() to detach and remove from cache all objects<br>Call session.setReadOnly(someObject, true) to disable dirty checking on that object(reenable it with session.setReadOnly(someObject, false)");
		rawQuestions.add("1172~Hibernate~When is a flush called?~When a Transaction is committed<br>Before a query is executed(if the FlushMode is set correctly and if changes in memory may affect the query)<br>When session.flush() is called");
		rawQuestions.add("1173~Hibernate~What is the JPA equivilent of Session/SessionFactory?~EntityManagerFactory/EntityManager");
		rawQuestions.add("1174~Hibernate~How do you generally start JPA code?~EntityManagerFactory emf = Persistence.createEntityManagerFactory(someIdentifier);<br>EntityManager em = emf.createEntityManager();<br>EntityTransaction tx = em.getTransaction();<br>tx.begin();");
		rawQuestions.add("1175~Hibernate~How do you generally end JPA code?~tx.commit();<br>em.close();");
		rawQuestions.add("1176~Hibernate~What does persist(someObject) do?~In Hibernate, itis like save() and update(), except that it only cascades to things reachable at the time of the persist() call.<br>In JPA, persist() is the normal 'save' equivilent and is cascaded at flush time instead of at it's call time");
		rawQuestions.add("1177~Hibernate~In JPA, how do you get an object?~em.find(SomeClass.class, new IdentifyingClass) - This will return null if nothing is found. It always hits the database or vendor specific cache<br>em.getReference(SomeClass.class, new IdentifyingClass) - This can throw an EntityNotFoundException if the object does not exist. It returns a proxy(placeholder) if it is not already cached");
		rawQuestions.add("1178~Hibernate~What does em.remove(someObject) do?~It removes the persistent state of the passed in object from the database.<br>It is different from Hibernate's session.delete(someObject) in that if the object is detached, an exception is thrown");
		rawQuestions.add("1179~Hibernate~How can you detach persisted objects in JPA?~em.clear() will clear all of them(persisted objects) from the cache, and detach all of them as well.<br>There is no JPA equivilent for Hibernate's session.evict(someObject)");
		rawQuestions.add("1180~Hibernate~What is transaction demarcation?~The act of clearly seperating by making boundaries");
		rawQuestions.add("1181~Hibernate~What must you do if you get a Hibernate generated exception?~You must close the current Session");
		rawQuestions.add("1182~Hibernate~If any exception is thrown by an EntityManager interface, are there any side effects?~Yes.<br>There is an automatic transaction rollback.<br>The same applys to the javax.persistence.Query interface with the exception of NoResultException and NonUniqueResultException");
		rawQuestions.add("1183~Hibernate~What does the &lt;version&gt; tag or @Version annotation do?~It enables optamistic locking via object versioning");
		rawQuestions.add("1184~Hibernate~How do you enable pessimistic locking?~You can enable it for a transaction by either calling session.lock(someObject, LockMode.SOME_LOCK_MODE) or passing a lock mode as an extra parameter to a session.get() call");
		rawQuestions.add("1185~Hibernate~Does Hibernate by default use optamistic or pessimistic locking?~It uses optamisic within the session");
		rawQuestions.add("1186~Hibernate~What is the difference between optimistic and pessimistic locking?~Optamistic is usually done via version checking. It tries to be optamisic in assuming that things will not conflict. If something conflicts, the latter is usually rolled back.<br>Pessimistic assumes things will conflict. It usually means locking of some sort until an operation completes. This takes longer, but there is usually no rolling back");
		rawQuestions.add("1187~Hibernate~How do you use thread-local sessions?~sessionFactory.getCurrentSession();<br>sessionFactory.getCurrentSession().begin/endTransaction();<br><br>You have to enable hibernate.current_session_context_class and set it's property to 'thread'");
		rawQuestions.add("1188~NEED MORE JTA/TRANSACTION INFO ");
		rawQuestions.add("1189~Hibernate~How can you implement conversations?~session.saveOrUpdate() can help if you don't know if an object is new or has already been persisted.<br>FlushMode.MANUAL(don't flush automatically, just cache) can also help(No JPA equivilent)");
		rawQuestions.add("1190~Hibernate~Does setting FlushMode.MANUAL keep Hibernate from automatically flushing?~Not always.<br>A session.save(someNewObject) can trigger an insert event in some cases(like having a DB generated identifier)");
		rawQuestions.add("1191~Hibernate~What does current_session_context_class do?~It helps manage the scope of Sessions.<br>For example, 'jta' is the default value.<br>'thread' allows a ThreadLocal like Session(using sessionFactory.getCurrentSession())<br>'managed' will allow you to call ManagedSessionContext.bind/unbind/hasBind() if you want to help manage the session across a conversation yourself");
		rawQuestions.add("1192~Hibernate~If you have a simple query to run, should you use plain JDBC?~Try to use SessionFactory.openStatelessSession() to do simple things, but still link it to the SessionFactory for locking schemes etc.");
		rawQuestions.add("1193~Hibernate~Does Hibernate provide any cross cutting concern solutions?~Yes.<br>Filters like the &lt;filter&gt; tag and the @org.hibernate.annotations.Filter annotation<br>-AND-<br>Interceptors like EmptyInterceptor that you can extend");
		rawQuestions.add("1194~Hibernate~Are there any gotchas with Interceptors in Hibernate?~Yes.<br>It is illegal to invoke the original Hibernate Session from an Interceptor call back");
		rawQuestions.add("1195~Hibernate~Does HQL have anything in common with JPA-QL?~Yes.<br>JPA-QL is a subset of HQL");
		rawQuestions.add("1196~Hibernate~When calling a session.load(someObject) does it go to the database?~No.<br>A proxy is returned.<br>The proxy has the identifier, but nothing else.<br>When you attempt to read another property, then a select is executed");
		rawQuestions.add("1197~Hibernate~Because of proxies, can you use normal instanceof operators etc.?~No.<br>You can however use HibernateProxyHelper.getClassWithoutInitializingProzy(someObject)");
		rawQuestions.add("1198~Hibernate~Does Hibernate use lazy loading by default?~Yes, EXCEPT with @OneToOne and @ManyToOne associations(these are eager");
		rawQuestions.add("1199~Hibernate~How can you disable lazy loading?~&lt;class name=\"ClassName\" table=\"TableName\" lazy=\"false\"&gt; or @org.hibernate.annotations.Proxy(lazy = false)");
		rawQuestions.add("1200~Hibernate~How can you enable eager loading for references off of objects?~You can set lazy=\"false\" in xml for a property, or (fetch = FetchType=EAGER) on annotations like @ManyToOne and @OneToMany");
		rawQuestions.add("1201~Hibernate~What is batch fetching, and how do you use it?~Sometimes, when working with a set of objects, you select the set, and then in a loop, select more about each one.<br>Batch fetching lets you specify how many to do at a time.<br>It will save trips to the database and although you may never use all of them, it will save time.<br><br>&lt;class name=\"SomeClass\" table=\"SOME_TABLE\" batch-size=\"10\"&gt; or @org.hibernate.annotations.BatchSize(size=10)");
		rawQuestions.add("1202~Hibernate~Is there an alternative to lazy loading using proxies?~Yes.<br>Interception, but this usually requires bytecode manipulation");
		rawQuestions.add("1203~Hibernate~What fetching strategies exist?~Batch, select, subselect, join & hibernate.max_fetch_depth(usually 0 to 5 for max tables to be joined, 0 being join disabling) that can be set in XML or with @org.hibernate.annotations.Fetch(org.hibernate.annotations.FetchMode.SOME_MODE");
		rawQuestions.add("1204~Hibernate~Can you tell Hibernate to load a proxy full of info for a detached state without knowing what info you want?~Yes.<br>Hibernate.initialize(someObject or someObject.getSomeObject)");
		rawQuestions.add("1205~Hibernate~How to you enable secondary caches?~Add a &lt;cache usage=\"something\"/&gt; where something is read-write/read-only etc depending on the secondary cache provider.<br>You can also use a Hibernate annotation @org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.SOME_STRATEGY).<br>You also must specify what secondary cache provider you are using :<br>hibernate.cache.provider.provider_class = something like org.hibernate.cache.EhCacheProvider");
		rawQuestions.add("1206~Hibernate~If you are using more than one SessionFactory as well as secondary caching, do you need to do anything different than if you were just using one SessionFactory?~Yes.<br>You should use a cache region prefix set by hibernate.cache.region_prefix because normal class cache regions for a SessionFactory simply use the fully qualified class name of what is being cached");
		rawQuestions.add("1207~Hibernate~Is there anyway to disable all secondary caching without removing all &lt;cache/&gt; entries in individual mapping files?~Yes.<br>Set hibernate.cache.use_second_level_cache = false");
		rawQuestions.add("1208~Hibernate~How do you make queries?~You can:<br>Use session.createQuery() to get a Query object<br>Use session.createSQLQuery() to create a Query object<br>Use session.createCriteria() to create a Criteria object<br>Use entityManager.createQuery() to create a Query object<br>Use session.createNativeQuery() to create a QueryObject");
		rawQuestions.add("1209~Hibernate~How can you 'paginate' results?~Both Query and Criteria objects have a setFirstResult(int) and setMaxResults(num) method");
		rawQuestions.add("1210~Hibernate~How do you use Query parameter binding?~Query query = session.createQuery(\"from User where user.id = :id\");<br>query.setString/setDate/setParameter(\"id\", id);");
		rawQuestions.add("1211~Hibernate~Can you automatically fill in lots of bound fields?~Yes.<br>If you call setProperties(someObject) on a Query, it will find all properties that match Query parameters and bind those values");
		rawQuestions.add("1212~Hibernate~Are there any good things to know about positional parameters?~Yes.<br>They are not reccommended.<br>Hibernate indexes start at 0, and JPA at 1");
		rawQuestions.add("1213~Hibernate~Can you control the caching and flushing with Queries?~Yes.<br>Use Query's setFlushMode() and setCacheMode() methods or EntityManager's setHint() method");
		rawQuestions.add("1214~Hibernate~Can you limit how long a Query takes to run so that it returns if it passes that limit?~Yes.<br>You can use Query's or Criteria's setTimeout() method or EntityManager's setHint() method");
		rawQuestions.add("1215~Hibernate~Can you try to control the fetch size on a Query?~Yes.<br>You can use Query's or Criteria's setFetchSize() method or EntityManager's setHint() method");
		rawQuestions.add("1216~Hibernate~How do you get info back from a Query or Criteria?~Hibernate : List list = query/criteria.list();<br>JPA : List list = query.getResultList();<br><br>If you limit the results returned with .setMaxResults(1).uniqueResult(), you can return the exact type of object you are looking for : Item item = session.createQuery(someQuery).setMaxResulty(1).uniqueResult();");
		rawQuestions.add("1217~Hibernate~Can you iterate or scroll over results?~Yes.<br>If you select just an ID, or whole obejcts, you can call query.iterate() which will return an Iterator.<br>There is also a scroll() method that returns a ScrollableResults object. You then have access to many cursor methods, and should probably call close() at the end");
		rawQuestions.add("1218~Hibernate~What is a named query and how do you use one?~A named query is a query that is predefined so you do not have random query text floating around in methods.<br>You can specify a named query in XML or in annotations.<br><br>&lt;query name=\"findSomethingByName\" fetch-size=\"50\" read-only=\"true\"&gt;&lt;![CDATA[from SomeTable where someColumn like :something]]&gt;&lt;/query&gt;<br>@NamedQueries({ @NamedQuery( name=\"findSomethingByName\", query=\"from SomeTable where someColumn like :something\")})<br><br>To execute a named query, use session.getNamedQuery(\"findSomethingByName\").setParameter(\"something\", something);<br>This returns a Query");
		rawQuestions.add("1219~Hibernate~Is it necessary to include \"SELECT *\" in HQL or JPA QL?~You don't have to in HQL.<br>In JPA QL, you need to");
		rawQuestions.add("1220~Hibernate~How generic are Queries?~It allows polymorphic selections from mapped objects that have hierarchey(ex: Animal can return Cats and Dogs).<br>You can even do \"from java.lang.Object\" to return all persistent classes");
		rawQuestions.add("1221~Hibernate~Are there any object expressions that you can use in HQL or JPA QL?~Yes.<br>from item i where i.brothers is not empty<br>from item i, color c where i.id='2' and i member of c.items<br>from item i in(i.colors) c");
		rawQuestions.add("1222~Hibernate~What is a dynamic fetching strategy?~It is an optomization with eager fetching so more selects than needed aren't executed.<br>from item i left join FETCH i.colors");
		rawQuestions.add("1223~Hibernate~What is the Query Cache, and how do you enable it?~It allows exact query/parameter sets to be cached.<br>Generally this acts like the iterator() method which only caches ids of objects.<br><br>You enable this by setting hibernate.cache.use_query_cache = true.<br>You then have to specifically tell each query if it should be cached, and what cache region to use if you want to split regions.<br>You should have secondary caching enabled to use this in order to avoid the n+1 selects problem");
		rawQuestions.add("1224~JNI(Nativeness)~Are there any gotchas in naming .so files?~Yes.<br>It seems that linux/unix wants them to have \"lib\" as a prefix on .so files");
		rawQuestions.add("1225~JNI(Nativeness)~How can you call C methods from java?~First, create a Java class that defined the C method you want to call as well as a static block that does a loadLibrary call :<br>public class SomeClass<br>{<br>&nbsp;&nbsp;public static native &lt;someMethodName and signature&gt;<br>&nbsp;&nbsp;static<br>&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;System.loadLibrary(&lt.so filename with out the .so&gt;);<br>&nbsp;&nbsp;}<br>}<br><br><br>Next, compile that Java file and then run javah on the class file to generate a C header file:<br>javah &lt;ClassYouJustMade&gt;<br><br><br>Then, create a .c file that includes the header file you just created with javah and the method signature that the .h file contains.<br>Remember that C prototypes(method signatures) do not include the parameter name, so you have to add parameter names when you create your .c file.<br><br><br>Compile the .c file with gcc, cc, or cl depending on what OS you use.<br><br><br>Finally, create a test class that calls the static method you defined in your first Java file normally just like you would make a normal static call");
		rawQuestions.add("1226~JNI(Nativeness)~When should you use JNI?~Try not to.<br>Only use it if you have legacy code, or must use a library that is written in another language");
		rawQuestions.add("1227~JNI(Nativeness)~How do you access passed in fields?~Use the enf pointer that javah defined in a prototype for you");
		rawQuestions.add("1228~JNI(Nativeness)~Can you throw exceptions from the C code to be caught in the Java code?~Yes.<br>You must use the env pointer to call Throw or ThrowNew");
		rawQuestions.add("1229~JNI(Nativeness)~How can you call Java classes from C code?~You must include jni.h from Java's include directory, and make a call to JNI_CreateJavaVM passing it jvm, env, and args structures.<br>You can then use the env pointer to create new classes, and call methods");
		rawQuestions.add("1230~JSF~What are the standard event types?~Value change events - When the user changes a components value<br>Action events - When the user does something like clicking on a button<br>Data model events - When a row is selected for processing<br>Phase events - Fired in conjunction with an HTTP request");
		rawQuestions.add("1231~JSF~How do you add a Value Change Listener?~You add an attribute to a control tag:<br>&lt;h:inputText valueChangeListener=\"#{myForm.processValueChanged}\"/&gt;.<br>This will then fire the myForm bean's processValueChanged(ValueChangeEvent event) method");
		rawQuestions.add("1232~JSF~How do you add an Action Listener?~You can add a static or dynamic 'outcome'.<br><br>Static outcomes are essentially hard coded into a tag:<br>&lt;h:commandButton type=\"submit\" value=\"Login\" action=\"success\" immediate=\"true\"/&gt;.<br>This tag returns \"success\".<br><br>Dynamic outcomes can also be built into a tag:<br>&lt;h:commandButton type=\"submit\" value=\"Login\" action=\"#{loginForm.login}\"/&gt;<br>That method then returns an 'outcome' string.<br><br>You can also create an Action Listener that is not associated with navigation.<br>In this case, you create a tag in the same way, but instead of specifying an action attribute, you specify an actionListener attribute that points to a method that does not return an 'outcome' string");
		rawQuestions.add("1233~JSF~How do you add a Data Model Listener?~You must do this through Java code instead of in a JSP.<br>You wrap a data model object like a ResultSet in a data model wrapper object, and then call .addDataModelListener() on it creating a new anonymous object that implements the DataModelListener interface");
		rawQuestions.add("1234~JSF~How do you add a Phase Listener?~You can add a new anonymous class that implements PhaseListener to a JSF lifecycle object");
		rawQuestions.add("1235~JSF~What are the parts of the JSF lifecycle?~Restore View<br>Apply Request Values<br>Process Validations<br>Update Model Values<br>Invoke Application<br>Render Response");
		rawQuestions.add("1236~JSF~What are some differences between JSP EL and JSF EL?~JSP uses ${} and JSF uses #{}<br>JSP EL functions are not officially supported<br>JSF expressions can be two way meaning that they can update a property as well as retrieving it");
		rawQuestions.add("1237~JSF~What are the main prefixes for JSF tags?~f &amp; h<br>f is for the core library-independent of a render kit like &lt;f:view&gt; and &lt;validator&gt;(http://java.sun.com/jsf/core)<br>h is for HTML render kit standart components(http://java.sun.com/jsf/html)");
		rawQuestions.add("1238~JSF~What special config file does JSF need, and where does it go?~faces-config.xml<br>It lives in a .war under /WEB-INF");
		rawQuestions.add("1239~JSF~What servlet mapping should you include in your web.xml to use JSF?~&lt;web-app&gt;<br>&nbsp;&nbsp;&lt;servlet&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;servletn-name>Faces Servlet&lt;/servlet-name&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;servlet-class&gt;<br>&nbsp;&nbsp;&lt;servlet-mapping&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;url-pattern&gt;/faces/*&lt;/url-pattern&gt;<br>&nbsp;&nbsp;&lt;/servlet-mapping&gt;<br>&lt;/web-app&gt;");
		rawQuestions.add("1240~JSF~What main sections exist in a faces-config.xml?~&lt;navigation-rule&gt; and &lt;managed-bean&gt; blocks");
		rawQuestions.add("1241~JSF~What are Facelets?~They are a templating system for code reuse with .xhtml files and &lt;ui:&gt; tags");
		rawQuestions.add("1242~Groovy~What options do you have for running groovy commands?~groovysh - A interactive command line shell<vr>groovyConsole - A GUI app that can execute Groovy code as well as load and run Groovy scripts<br>groovy - A command line tool that lets you run Groovy commands from a normal shell<br>java - Lets you run Groovy bytecode");
		rawQuestions.add("1243~Groovy~What does Groovy automatically import?~groovy.lang.*<br>groovy.util.*<br>java.lang.*<br>java.util.*<br>java.net.*<br>java.io.*<br>java.math.BigInteger/BigDecimal");
		rawQuestions.add("1244~Groovy~What access control do things have by default?~Methods are public.<br>Member variables are private");
		rawQuestions.add("1245~Groovy~Are semicolins required at the end of statements?~Only if they are not followed by a new line(If you have more than one statement on a line)");
		rawQuestions.add("1246~Groovy~Can you use methods before they are defined in a script?~Yes.<br>The entire script is parsed before it is executed");
		rawQuestions.add("1247~Groovy~What is the difference between single and double quoted strings?~Double quoted strings can have variable replacement.<br><br>def firstName = 'bob'<br>def lastName = 'smith'<br>def fullName = \"$bob $smith\"");
		rawQuestions.add("1248~Groovy~Can you use primitives with the instanceof operator?~Yes");
		rawQuestions.add("1249~Groovy~How do you declare a list?~def someList = [2,5,'s','6']");
		rawQuestions.add("1250~Groovy~What happens if you try to make a non-contiguous assignment in a list(ex: def list=['1','2']; list[34]='r';)?~It expands the list to be as big as the new index requires, and makes the assignment");
		rawQuestions.add("1251~Groovy~What happens if you try to access an array or list index that is out of bounds?~null is returned");
		rawQuestions.add("1252~Groovy~How do you declare and use a Map?~def map=['greeting':'hi', 'parting':'bye']; assert map['greeting']=='hi'");
		rawQuestions.add("1253~Groovy~What is a range?~Exactly that.. a range.<br><br>def x = 1..10;assert x.contains(5);<br><br>They can be used in other constructs like the for statement");
		rawQuestions.add("1254~Groovy~What is the default type of a non int literal?~BigDecimal");
		rawQuestions.add("1255~Groovy~Is there a difference between primitives and boxed primitive objects in Groovy?~No");
		rawQuestions.add("1256~Groovy~How does Groovy extend the Java API?~It really pipes everything through a meta-class objects that allow interception and modification");
		rawQuestions.add("1257~Groovy~How does Groovy handle operators and operator overloading?~It translates things like '+' to .plus() etc.");
		rawQuestions.add("1258~Groovy~Because Groovy is not a statically typed language, is it type-safe?~Yes.<br>It still tracks types and does not allow conversions unless they are done in a well defined manner");
		rawQuestions.add("1259~Groovy~Is == in Groovy different?~Yes.<br>It means value equality and not identity equallity.<br>It runs the .equals() method");
		rawQuestions.add("1260~Groovy~How can you declare string literals?~'my $string here' - A normal Java String(the '$' will be in the string)<br>\"my $string here\" - A GString ($name will be replaced by the variable name<br>'''my $string here''' and \"\"\"my $string here\"\"\" - Normal Java Strings and GStrings that can span multiple lines and keep the formatting (new lines are translated to)<br>/my $string here/ - A string used for better readability of regular expressions (you don't have to escape '' characters)");
		rawQuestions.add("1261~Groovy~How can you print out text in Groovy?~System.out.println('some string');<br>print 'some string'");
		rawQuestions.add("1262~Groovy~What are some looping constructs on number objects that can be used in conjunction with closures?~1.upto(5)<br>5.downto(-1)<br>0.step(0.5, 0.1)<br>10.times");
		rawQuestions.add("1263~Groovy~What are some new 'Groovy operators'?~a**b - a.power(b)<br>switch(a) - .isCase(a)<br>a&lt;=&gt;b - a.compareTo(b)<br>=~ - regex find operator<br>==~ - regex match operator<br>~someString - regex pattern operator");
		rawQuestions.add("1264~Groovy~What is a closure?~It is a block of code(instructions) that can be treated as an object to be passed around and executed.<br>It is another way to acheive code reuse.<br>Instead of having that same iterator loop and logic or that same anonymous class in several different places, you can pass a closure around and accomplish the same thing.");
		rawQuestions.add("1265~Groovy~How do you declare a closure?~c={myParam -> return myParam+2}<br>c={return it+2} (it is the default name of a passed in variable if no params are explicitly specified)<br>[1,2,3].each { it*2 } (If there is no explicit return, the result of the last expression is returned)<br>int myMethod(int y) { return y*2 ) closure c=this.&myMethod");
		rawQuestions.add("1266~Groovy~Is there anything different about boolean expressions?~Yes.<br>The old 0=false, non-0=true is in effect unless you are in an if statement.<br>In an if, you can wrap another set of parenthases around the expression ex: if((x=3) to denote that you know what you are doing since if(x=3) is error prone and will still cause an error in Groovy");
		//rawQuestions.add("1267~Groovy~Do you have to declare what kind of variable something is?");
		rawQuestions.add("1268~Groovy~Does Groovy automatically generate getters and setters?~Only if a member variable has default visibility (no access modifier is specified)");
		rawQuestions.add("1269~Groovy~How can you override the field access operator?~Implement the following:<br>Object get(String name)<br>void set(String name, Object value)");
		rawQuestions.add("1270~Groovy~Can you dynamically call a method by a string name without explicit reflection?~Yes.<br>obj.\"${var}\"()");
		rawQuestions.add("1271~Groovy~Is there an easy way to protect against a daisy chain set of possible null pointer exceptions(ex: a.b().c().d())?~Yes.<br>You can use the dereferencing operator that stops evaluating the expression and retuns null if null is found:<br>a?.b()?.c()?.d()");
		rawQuestions.add("1272~Groovy~What are named parameters?~If there are many parameters that could be set in a constructor but most are optional, you don't have to overload the constructor for each combination:<br>class Person { String name; int age; int height; }<br>def person = new Person(name: 'me', age: 5)");
		rawQuestions.add("1273~Groovy~Are there any limitations to creating a file with both a class and script?~Yes.<br>The script will become the main class and take the current filename.<br>Because of this, you cannot have a class and a script in the same file if the class has the same name as the file");
		rawQuestions.add("1274~Groovy~What is type aliasing?~The import statement allows you to use the 'as' keyword to rename an import if there are two things you need to import that have the same name:<br>import org.Something; import com.Something as NonConflictingSomething;");
		rawQuestions.add("1275~Groovy~What does the obj.@value syntax do?~It bypasses value's get or set method and gives you the direct field access(normally it would call the getter or setter depending on if it was an assignment or in an expression)");
		rawQuestions.add("1276~Groovy~What is Expando?~A dynamic bean class provided with Groovy");
		rawQuestions.add("1277~Groovy~What are the * and *. operators when applied to lists?~The * operator can break apart a list passing each element as a separate argument when put in front of the list.<br>The *. operator allows a method to process every element of a list instead of a list itself individually");
		rawQuestions.add("1278~Groovy~What is the 'use' keyword for?~It can make the static methods of one class apply to a block of code anywhere.<br>This could be useful if you wanted to use the overloaded + operator, but only on a block of code - not the whole class or method");
		rawQuestions.add("1279~Groovy~How can you test if something throws an exception?~You can use the shouldFail assert method that takes an exception as a parameter and a closure that contains the code");
		rawQuestions.add("1280~Seam~What are some benifits to using Seam?~It really is a 'seam' between existing framworks.<br>You can use EL in config files, test easier unit wise, configure by exception, have more session control without any extra code");
		rawQuestions.add("1281~Seam~What is Seam's stance with respect to layers?~If you don't need them, don't use them.<br>You can just have a POJO that is the DAO and holder.<br>Then you really only need a 'service' so to speak object that is composed of the POJO as well as 'service' methods");
		rawQuestions.add("1282~Seam~How can Seam help with debugging?~There are debug pages that can give you the state of the conversation for the current session");
		rawQuestions.add("1283~Seam~What is the differrence between faces, facets, and facelets?~Faces is the name of the framework idea.<br>Facets are tags that designate headers and footers like &lt;h1&gt;.<br>Facelets is the rendering engine like JSP, but for the xhtml templating system");
		rawQuestions.add("1284~XP~What is XP?~It is an agile methodology.<br>There are rights that customers have(to know a plan of what can be accomplished and at what cost, see progress, get value out of every week, change your mind, and be informed of schedule changes and scope. The customer also has the right to cancel at any time and have what is working to date).<br>There are rights that programmers have(to know what is needed with clear priorities, to produce quality work, to ask for and get help from others at work including the customer, to update your own estimates, and to accept your own responsibilities instead of having them assigned).<br><br>Pair programming,<br>continuous integration and testing,<br>programming by intention before by algorithm,<br>user stories that are short and broken down to manageable amounts,<br>evolving and relative estimation,<br>only coding to what is needed,<br>quick design,<br>creating only useful and correct documentation and creating most of it when a story is done.<br><br>People, software, and change that works over processes, documentation, contracts, and plans where the second list is important, but the first list is more important.");
		rawQuestions.add("1285~SCRUM~What is SCRUM?~It is an agile methodology.<br>Teams of size 3 to 8 work with scrum.<br>There is a daily scrum meeting where the questions of what did you do yesterday, what will you do today, and are there any impediments.<br>Anyone can be invited to the meeting, but the meeting should not be used as a 'this is how scrum works' etc. When too many people are there it is distracting.<br>There are chickens and pigs. Only the pigs(those who are committed) can talk, and only one can talk at a time. All detailed discussion should happen as smaller groups after the daily scrum.<br>There is a sprint planning meeting to define a backlog(the list of things to be done in the sprint and their priorities), as well as define sprint goals.<br>A sprint should be 30 days.<br>Time, cost, and delivered quality are fixed. Delivered functionality is not fixed.<br>No one outside of the sprint team can change scope, or the type of work that was defined at the sprint planning.<br>The sprint team can use consultants, books, web, and anything else within bugetary constraints to get what it needs to accomplish the sprint goals.<br>At the end of a sprint there is a sprint review where the team presents to everyone the new version or 'product increment' that was completed.");
		rawQuestions.add("1286~Software Development~What should requirements cover?~Functional requirements like inputs, outputs, error handling, and UI.<br>Non-Functional requirements like response time, maintainability, security, memory, and space requirements.<br>Quality requirements like how will each requirement be tested, is there enough detail, do requirements conflict, and are the requirements in the user's language.");
		rawQuestions.add("1287~Software Development~What should architecture cover?~It should cover elements that are not dependent on the environment.<br>It should contain strategies on data design, security, maintainability, interoperability, internationalization, error processing, fault tolerance, build vs buy. It should be simple to understand.<br>It should minimize risk.<br>It should include justification and motivation for its decisions.<br>It should define the building blocks.");
		rawQuestions.add("1288~Software Development~What is the design phase of development all about?~It's about learning from mistakes be doing something differently each time you learn.<br>It is about tradeoffs and priorities.<br>It's about creating possibilities and restricting possibilities.<br>It's about things a person can try that might work.");
		rawQuestions.add("1289~Software Development~How do you deal with complexity?~Minimize the complexity that a person must deal with at any given time.<br>Using abstraction allows you to ignore irrelivent details.<br>Encapsulation helps make sure that the detail that is available can be easily understood. It also localizes possible future changes.<br>Inheritance helps when dealing with more specific and corner cases.");
		rawQuestions.add("1290~Seam~What is a non-obvious meaning for org.hibernate.type.SerializationException: could not serialize?~It can mean there is a JoinColumn or mapping type (ex: OneToOne) annotataion missing on an entity");
		rawQuestions.add("1291~API~How do you call a static method via reflection?~Pass null to invoke() instead of an object instance.<br>method.invoke(null, <params>);");
		rawQuestions.add("1292~Android~What is the last lifecycle method that is guarenteed to be executed before an activity is killed?~onPause() pre 3.0, onStop in Honeycomb");
		rawQuestions.add("1293~Android~Does destroying the last activity on the stack guarentee that the app will exit?~No.<br>An AsyncTask for example, will continue to run after the last activity's onDestroy() has been called.");
		rawQuestions.add("1294~Android~What parts of AsyncTask will complete after the activity that launched it is destroyed?~The DoInBackground, onPublishProgress, and onPostExecute will all finish.");
		rawQuestions.add("1295~Android~Why can ListView controls change color when being scrolled, and how would you change this?~Optimizations that Android uses are often based on a specific color. Setting android:cacheColorHint in an XML layout for a ListView to a specific color will change this.");
		rawQuestions.add("1296~Android~Can data manipulation be done inside SQLiteOpenHelper.onUpgrade()?~It can but Google currently discourages it.<br>You cannot call getWritableDatabase() from onUpgrade() because only one database writer can be opened at a time and one is already opened for onUpgrade(). You could override getReadableDatabase()/getWritableDatabase() to check your own needsUpgrade flag. If that flag is set, the getXxxDatabase() calls can first run any necessary upgrade code which can now include getXxxDatabase calls.");
		rawQuestions.add("1297~Android~How can you start a headless version of the emulator?~emulator -avd 2.2 -no-window -port 5554");
		rawQuestions.add("1298~Android~How can you automate the running of tests in an Android test project?~adb shell am instrument -w your.own.test.project.package.name/android.test.InstrumentationTestRunner<br>Where your.own.test.project.package.name is replaced by your test project package name.");
		rawQuestions.add("1299~Android~How can you automate unlocking an Android emulator?~adb emu event send EV_KEY:KEY_MENU:1 EV_KEY:KEY_MENU:0");
		rawQuestions.add("1300~JQuery~What is $()?~It is an alias for jQuery(), which returns all elements in the DOM which match the provided argument (selector).<br>You can then change them as you like.");
		rawQuestions.add("1301~JQuery~How do you dynamically change the attributes of something?~$( someSelector ).attr(\"attributeName\", \"attributeValue\");<br><br>$(someSelector).attr({<br>&nbsp;&nbsp;someAttribute: \"someValue\",<br>&nbsp;&nbsp;anotherAttribute: \"someValue\"<br>});");
		rawQuestions.add("1302~JQuery~How do you get the value of an attribute of something?~var theVal = $(someSelector).attr(\"someAttribute\");");
		rawQuestions.add("1303~JQuery~Can you pass 'this' to $()?~Yes.");
		rawQuestions.add("1304~JQuery~What are some examples of selectors?~$(\"#someId\");<br>$(\".someClass\");<br>$(\"someElement[someAttribute='someValue']\");<br>$(\"someTag:odd\");");
		rawQuestions.add("1305~JQuery~How do you keep an event from running it's default code?~event.preventDefault();");
		rawQuestions.add("1306~JQuery~How can you use jQuery's $ if another js library uses it?~var somethingElse = jQuery.noConflict();");
		rawQuestions.add("1307~JQuery~How do you tell if a selector found any elements?~if ($(\"someSelector\").length) {...}");
		rawQuestions.add("1308~JQuery~What are some common form selectors?~\"form :checkbox<br>form :checked\"<br>\"form :button\"<br>\"form :submit\"");
		rawQuestions.add("1309~JQuery~How are selector getters and settors used?~$(\"someSelector\").html(\"Here I am\"); // Is a setter<br>$(someSelector).html(); // Is a getter");
		rawQuestions.add("1310~JQuery~Can selector methods be chained?~Yes.<br>ex: $(\"someSelector\").addClass(\"someClass\").html(\"some html\");");
		rawQuestions.add("1311~JQuery~What are some selector methods?~.html()<br>.text()<br>.attr()<br>.width()<br>.height()<br>.position()<br>.val()");
		rawQuestions.add("1312~JQuery~What are some non getter/setter selector methods?~.append()<br>.clone()");
		rawQuestions.add("1313~JQuery~What is the difference between .remove() and .detach()?~Both return the removed elements, but .detach() is the only one that keeps their events and data. ");
		rawQuestions.add("1314~JQuery~What is the difference between .text() and .val()?~.text() returns the content between tags.<br>.val() returns the value attribute's value of a tag.");
		rawQuestions.add("1315~JQuery~How do you create new elements?~$(\"&lt;a href='someLink'&gt;link text&lt/a&gt;\");<br>or<br>$(\"&lt;a/&gt;\", {<br>&nbsp;&nbsp;html: \"some description\",<br>&nbsp;&nbsp;href: \"someLink\"<br>});");
		rawQuestions.add("1316~JQuery~Are these objects equal (===):<br>var first = $(\"a\");<br>var second = $(\"a\");?~No, becuase the elements are wrapped in unique jQuery objects.<br>However, first.get(0) === second.get(0) returns true;");
		rawQuestions.add("1317~JQuery~If you get an object from a selector, and then modify the element not using that selector, does the selector update?~No.");
		rawQuestions.add("1318~JQuery~How do you traverse using selectors?~Use:<br>.parent()<br>.parents()<br>.parentsUntil()<br>.closest()<br>.children()<br>.find()<br>.prev()<br>.next()<br>.siblings()<br>.nextAll()<br>.nextUntil()<br>.prevAll()<br>.prevUntil");
		rawQuestions.add("1319~JQuery~How do you get and set CSS properties?~$(\"someSelector\").css(\"someProperty\"); // Getter<br>$(\"someSelector\").css(\"someProperty\", \"someValue\"); // Setter");
		rawQuestions.add("1320~JQuery~How can you attach arbitrary data to an element?~$(\"someSelector\").data(\"someKey\", \"someValue\"); // Setter<br>$(\"someSelector\").data(\"someKey\"); // Getter");
		rawQuestions.add("1321~JQuery~How can you change the 'this' for a function?~var newlyScopedFunction = $.proxy(someFunction, newThis);");
		rawQuestions.add("1322~JQuery~How can you extend an object from another object?~$.extend()");
		rawQuestions.add("1323~JQuery~What are some looping utility methods?~$.each(someArray, someFunction(index, value) {...}<br>$.inArray(value, array) // Returns the index ov value or -1 if not there ");
		rawQuestions.add("1324~JQuery~How can you get a specific numeric or selector keyed element from a selector?~.index();");
		rawQuestions.add("1325~JQuery~What are some jQuery event functions that can be used on selectors?~.hover()<br>.toggle()<br>.click()<br>.focus()<br>.blur()<br>.change()<br>.keyDown()<br>.keyUp()<br>and the generic .on() / .off()");
		rawQuestions.add("1326~JQuery~What can you do with the event object?~.preventDefault()<br>stopPropagation()<br>pageX, pageY (mouse position at time of event)<br>type (\"click\")<brtarget<br>data<br>namespace<br>timeStamp");
		rawQuestions.add("1327~JQuery~How can you force event handlers to run (like a click handler)?~.trigger()");
		rawQuestions.add("1328~JQuery~What is the difference between .trigger() and .triggerHandler()?~.triggerHandler() does not run the default handling code, only affects the first element of the selector, and does not return the selector for method chaining.");
		rawQuestions.add("1329~JQuery~How can you optimize events?~Use .on(), with three parameters.<br>The second parameter will tell jQuery to only run the function if the click came from that element.<br>If this event was applied based on a css class, you can use the css class many places without attaching running handlers.");
		rawQuestions.add("1330~JQuery~How does a custom event work, and what benefit does it provide?~Custom events act as a publish/subscribe model for reusing code. A custom event can be created and attached to an entire document with .on(\"customEventName\", someFunction{..}). Certain selectors can then be used to call .trigger(\"customEventName\") on that custom event name.<br>When something happens that should trigger that event (calling the .trigger(\"customEventName\"), the event is bubbled up to the document where it will actually execute.<br><br>A benefit it that you have code that is encapsulated nicely in an event, but usable from anywhere. It is much cleaner than random global functions.");
		rawQuestions.add("1331~JQuery~How do jQuery extensions work?~You can extend native handlers by binding new code to currently existing handlers. For example, you could create a multiclick handler by binding code that compares a click count to the current click handler.<br>To do this, you access specific jQuery objects like jQuery.event.special, and objects with binding info and code to new properties. These new properties become ne handlers.");
		rawQuestions.add("1332~JQuery~What are some effect methods for selectors?~These methods can be passed a milliseconds parameter for transition time:<br>.hide()<br>.show()<br>.slideDown()<br>.slideUp()<br>.fadeIn()<br>.fadeOut()");
		rawQuestions.add("1333~JQuery~How can you execute code after an effect has finished?~There are two ways:<br>1 - Chain methods to the effect method:<br>$(\"a\").fadeIn(500).addClass(\"something\");<br><br>2 - Pass a function as a second parameter to the effect method:<br>$(\"a\").fadeIn(500, function(){...});");
		rawQuestions.add("1334~JQuery~What are some effect utility methods?~.delay(timeToDelayAfterEffectIsDone)<br>.stop() // Stops currently running effects on the selector");
		rawQuestions.add("1335~JQuery~How do you animate properties of a selector?~$(\"someSelector\").animate({someCssProperty: \"propertyValueToAnimateTo\", ...});");
		rawQuestions.add("1336~JQuery~What does .queue() and .dequeue() do?~With the defaut allows you to add a function to the effects queue to synchronize javascript with different animations. Otherwise, it just enqueues and dequeues a normal queue of functions, executing a function when .dequeue() is called on it.");
		rawQuestions.add("1337~JQuery~What are possible options for use with $.ajax()?~async // Boolean<br>cache // Boolean<br>complete // A callback function to run on success or failure<br>context // What 'this' is during callback functions<br>data // A query string or an object<br>dataType // What you expect back (silent failures are possible if this is not right)<br>error // An error callback function<br>jsonp // A callback name, 'callback' is the default<br>success // A success callback function<br>timeout // Time in milliseconds before the request is a failure<br>type // POST, GET, PUT, or DELETE<br>url // The request URL");
		rawQuestions.add("1338~JQuery~What are some jQuery ajax convenience methods?~$Parameters for the following methods:<br>url, data, success callback, data type<br><br>.get()<br>$.post()<br>$.getScript()<br>$.getJSON<br>.load()");
		rawQuestions.add("1339~JQuery~What do .serialize() and .serializeArray() do?~.serialize() creates a query string like x=something&y=somethingElse...<br>.serializeArray() creates an array of objects that each contain a name and value key and value.");
		rawQuestions.add("1340~JQuery~What is $.ajazPrefilter?~It lets you modify ajax options before sending the request.<br>It takes a function with options, originalOptions, and a jQuery XmlHttpRequest as parameters.");
		rawQuestions.add("1341~JQuery~What is an easy way to bind code to ajax events?~Functions can be passed to the following:<br>.ajaxStart()<br>.ajaxStop()<br>.beforeSend()<br>.ajaxSend()<br>.success()<br>.ajaxSuccess()<br>.error()<br>.ajaxError()<br>.complete()<br>.ajaxComplete()");
		rawQuestions.add("1342~JQuery~What is $.fn?~It is the jQuery protorype property. You can add to jQuery by defining new methods or properties on $.fn. jQuery plugins are created and added in this way.");
		rawQuestions.add("1343~JQuery~How do you run code when the document is ready?~$( document ).ready(function() {<br>&nbsp;&nbsp; // Do something<br>});");
		rawQuestions.add("1344~JQuery~How do you apply and remove styles?~<style><br>&nbsp;&nbsp;.best { font-weight: bold;}<br></style><br><script><br>&nbsp;&nbsp;$( \"a\" ).addClass( \"best\" );<br>&nbsp;&nbsp;$( \"a\" ).removeClass( \"best\" );<br></script>");
		rawQuestions.add("1345~Javascript~What is the difference between undefined and null?~Undefined means there is no variable. null means there is a variable, but it has no value.");
		rawQuestions.add("1346~Javascript~What is the difference between == and ===?~== might run type conversions before the comparison, === won't.<br>ex: 0 == \"\" is true, 0 === \"\" is false.");
		rawQuestions.add("1347~Javascript~How can you check if something is NaN?~isNaN(someExpression) works. NaN == NaN does not work and returns false.");
		rawQuestions.add("1348~Javascript~How can || be used as a null checking operator?~name || \"someone\" will return name if it is not null. If name is null, \"someone\" will be returned.");
		rawQuestions.add("1349~Javascript~Is there function overloading in javascript?~No. If you try overloading the function, the last one declared will be the only one that is run.<br>A javascript function will take any number of arguments.");
		rawQuestions.add("1350~Javascript~In what cases do variables shadow variables with the same name vs. creating a new scope?~Functions create new scope. The let keyword also allows shadowing. Everything else shadows.");
		rawQuestions.add("1351~Javascript~What are three ways to create an object in javascript?~person = new Object(); person.name = 'bob';<br>person={name:'bob'};<br>function person(name) { this.name = name }; person = new person('bob');");
		rawQuestions.add("1352~Javascript~What is the difference between calling delete on an object property and setting it to null?~Calling delete actually removes the property.");
		rawQuestions.add("1353~Javascript~What is the 'in' keyword?~It returns a boolean value, depending on if a property exists in an object.<br>ex: if ('name' in person) {...}");
		rawQuestions.add("1354~Javascript~What is the difference between if (thing in person) and if (person.hasOwnProperty(thing))?~in checks the object's prototype chain, hasOwnProperty() does not.");
		rawQuestions.add("1355~Javascript~When using == with objects, are they compared using values or their memory address?~Memory address, unless it is a string.");
		rawQuestions.add("1356~Javascript~What are some global functions?~decodeURI()<br>encodeURI()<br>escape()<br>unescape()<br>eval()<br>isNaN()");
		rawQuestions.add("1357~Javascript~What are some array object methods?~concat()<br>indexOf()<br>join()<br>lastIndexOf()<br>pop()<br>push()<br>reverse()<br>shift()<br>slice()<br>sort()<br>splice()<br>unShift()<br>toString()<br>valueOf()");
		rawQuestions.add("1358~Javascript~What are some string object methods?~charAt()<br>charCodeAt()<br>concat()<br>fromCharCode()<br>indexOf()<br>lastIndexOf()<br>match()<br>replace()<br>search()<br>slice()<br>split()<br>substr()<br>toLowerCase()<br>toUpperCase()<br>trim()<br>valueOf()<br>HTML wrapper methods like fontcolor()");
		rawQuestions.add("1359~Javascript~What are some regexp object methods?~compile()<br>exec()<br>test()");
		rawQuestions.add("1360~Javascript~What happens when you call slice or charAt on a string, using indexes that are greater than the length of the string?~No errors are thrown. If the bounds given cover valid indexes, only that data is returned. Otherwise, nothing is returned.");
		rawQuestions.add("1361~Javascript~How would you handle throwing and catching exceptions in javascript?~var a1 = [\"a\", \"b\"];<br>var a2 = [\"a\"];<br>function getSecondElement(array) {<br> if (array.length &lt; 2) throw \"No second element\";<br> return array[1];<br>}<br><br>try {<br> alert(getSecondElement(a1));<br> alert(getSecondElement(a2));<br>} catch (error) {<br> alert(\"uh oh\");<br>}");
		rawQuestions.add("1362~Javascript~What properties does the Error object have?~message, fileName, lineNumber");
		rawQuestions.add("1363~Javascript~Are there any problems with block comments?~Block comment delimiters can appear in regular expressions.<br>ex: var regular_expression = /abc*/.match(str);<br>Surrounding this with a block comment would produce an error");
		rawQuestions.add("1364~Javascript~How many number types are there in javascript?~1: a 64-bit double");
		rawQuestions.add("1365~Javascript~What does Infinity represent?~Everything greater than 1.79769313486231570e+308");
		rawQuestions.add("1366~Javascript~What are values that equate to false?~false<br>null<br>undefined<br>NaN<br>''<br>0");
		rawQuestions.add("1367~Javascript~What are the two forms of for statements?~for (i=0;i&lt;10;i))<br>for (thing in things)");
		rawQuestions.add("1368~Javascript~What does (typeof null) return?~object");
		rawQuestions.add("1369~Javascript~What does (definedVar.undefinedProperty && definedVar.undefinedProperty.someProperty) return?~&& returns undefined if it is undefined, otherwise the right side. It is usefull for replacing:<br>if (a.b != undefined && a.b.c != undefined)<br>with<br>if (a.b && a.b.c)");
		rawQuestions.add("1370~Javascript~If<br>var a = null;<br>what will<br>a == undefined<br>return?~true");
		rawQuestions.add("1371~Javascript~Will delete affect anything in an object's prototype?~no");
		rawQuestions.add("1372~Javascript~What does 'this' refer to in a inner function (function inside an actual function)?~By default, it refers to the global scope. By having the outer function create a variable 'var that = this;', 'that' can be used in the inner function to access the parent function's scope instead of the global scope.");
		rawQuestions.add("1373~Javascript~What is apply?~apply is a method that all functions have. It lets you take a method from some object and apply some other object's context to it when it is run.<br>ex:<br>var person={<br>&nbsp;&nbsp;age:3,<br>&nbsp;&nbsp;getAge : function() {<br>&nbsp;&nbsp;&nbsp;&nbsp;return this.age;<br>&nbsp;&nbsp;}<br>};<br><br>var car = {age:4};<br><br>alert(person.getAge.apply(car));<br>");
		rawQuestions.add("1374~Javascript~What is 'arguments'?~arguments is an implicit parameter, like this, that is passed to functions. It is an array like object of all the parameters passed into the function.");
		rawQuestions.add("1375~Javascript~Does calling a function with the new keyword have an effect on what is returned from that function?~Yes. If nothing is returned, 'this' will be returned.");
		rawQuestions.add("1376~Javascript~What are Function.prototype and Object.prototype?~They are maps for adding properties and methods to all functions or objects.");
		rawQuestions.add("1377~Javascript~What is a naming pattern for knowing when to use the 'new' keyword when creating new objects?~Usually, if the first letter of an object is capitalized, 'new' should be used becuase the 'this' context will not be saved and unique otherwise.");
		rawQuestions.add("1378~Javascript~What does 'var' before a property name do?~It creates a new scope for that property if it is un a function. If 'var' is not used, that property from the next scope up in stack memory is used.");
		rawQuestions.add("1379~Javascript~How do you include an external .js in html?~&lt;script src='your_script_file.js'/&gt;");
		rawQuestions.add("1380~Javascript~Which is correct?<br>&lt;script src='someFile.js'/&gt;<br>or<br>&lt;script src='someFile.js'&gt;&lt;/script&gt;?~&lt;script src='someFile.js'&gt;&lt;/script&gt;");
		rawQuestions.add("1381~Javascript~What is same-origin policy?~It is a security mechanism that keeps a page on siteA from loading code from siteB.<br>Code can be loaded via AJAX as long as the following remain constant across all requests:<br>Scheme<br>port<br>sub-domain");
		rawQuestions.add("1382~Javascript~What is JSONP?~It helps with same-origin policy issues when you really do need to communicate with a different server.<br>A JSONP request creates a new script block, which can commuinicate with different servers. It generally returns a function call to an already defined method (on the page making the request), with parameters of data from the remote server.<br><br>You could already have a function called updatePersonOnScreen(), which takes parameters of name and age.<br>A JSONP request might return 'updatePersonOnScreen('Bob', 20);'");
		rawQuestions.add("1383~Javascript~What is CORS?~Cross-Origin Resource Sharing<br>It helps get around same-origin policy by using headers.<br>The request should contain an 'Origin' header like 'Origin: http://www.whereIAm.com'<br>The remote server would then respond, inserting a response header of 'Access-Control-Allow-Origin' with the servers it allows.");
		rawQuestions.add("1384~CSS~How do you include an external stylesheet?~&lt;link rel='stylesheet' type='text/css' href='yourFile.css' /&gt;<br><br>&lt;style type='text/css'&gt;<br>&nbsp;&nbsp;@import url(yourFile.css);<br>&lr;/style&gt;");
		rawQuestions.add("1385~CSS~What are selectors (generic, class, )?~Ways to identify elements for reading and modification.<br>Generic: h1<br>Class: .myClass<br>ID: #myId");
		rawQuestions.add("1386~CSS~Can class selectors have a number after the .?~No.");
		rawQuestions.add("1387~CSS~How do you apply a style to multiple selectors at once?~h1, h2, h3 {color: #902020;}");
		rawQuestions.add("1388~CSS~What is the universal selector?~*<br>* {color: #482934;}");
		rawQuestions.add("1389~CSS~When building decendent selectors, can you skip levels of hierarchy<br>example...<br>html: &lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;a&gt;<br>decendent selector: body li<br>Will this selector apply to the li in the html?~Yes.");
		rawQuestions.add("1390~CSS~What is the difference between 'p.main a' and 'p &nbsp;.main a'?~The first selects all 'a' tags in a 'p' tag, where the 'p' tag has the ''main' class. (&lt;p class='main'&gt;&lt;a&gt;)<br><br>The second selects all 'a' tags in some tag with the 'main' class, which is in a 'p' tag. (&lt;p&gt;&lt;div class='main'&gt;&lt;a&gt;)");
		rawQuestions.add("1391~CSS~What are some pseudo classes?~a:link<br>a:visited<br>a:active<br>:hover<br>:first-letter<br>:first-line<br>:before<br>:after<br>:first-child<br>:focus");
		rawQuestions.add("1392~CSS~What is the difference between a decendent selector and a child selector?~Decendent selectors can skip levels of hierarchy and use spaces to seperate levels: 'div p a' will select 'a' tags in &lt;html&gt;&lt;div&gt;&lt;h1&gt;&lt;p&gt;&lt;a&gt;<br><br>Child selectors cannot skip levels of hierarchy and use '&gt;' as delimiters: 'div &gt; p' will match &lt;span&gt;&lt;div&gt;&lt;p&gt;, but not &lt;div&gt;&lt;h1&gt;&lt;p&gt;");
		rawQuestions.add("1393~CSS~What is a sibling selector, and how do you use one?~It selects a specific sibling, and uses the '+' character.<br>ex: div h1 + p. Spaces are optional.<br>This example would only select the first 'p' tag right after the 'h1' tag inside of a 'div', but not any others.");
		rawQuestions.add("1394~CSS~What is an attribute selector, and how do you use it?~It selects anything that has a specific attribute. The attribute name can be anything you want.<br>ex: 'div a[someAttribute]' will select the second 'a' tag in &lt;div&gt;&lt;a/&gt;&lt;a someAttribute='asdf'/&gt;<br>You can also use classes like '.someClass[someAttribute]'<br>The attribute does not need an associated value to be valid, but you can use the entire attribute=value to create a more specific selector (div a[href=home.com]).<br><br>There are some regular expression possibilities here, so be careful about special characters. a[href^=https] means any 'a' tag, whose href tag starts with https. a[href*=something] means an href attribute on an 'a' tag with 'something' somewhere in the href value.");
		rawQuestions.add("1395~CSS~Which takes precedence: a defined style, inherited style, or inline style?~The inline style, then it's defined style, then the inherited style from the nearest ancestor.<br><br>If !important follows a defined style, it will override an inline style.");
		rawQuestions.add("1396~CSS~Which takes precedence: an id style, a class style, an inline style, or a tag style?~Generally precedence follows this order:<br>inline<br>id<br>class<br>tag<br><br>This becomes more complicated when a selector mixes multiple types (#heading .title a). The more specific the precedence, the more weight it has.");
		rawQuestions.add("1397~CSS~When two different styles are defined for the same selector, which one wins?~The last one defined.");
		rawQuestions.add("1398~CSS~How does the font-family style look?~It takes a list of fonts. The browser will try to use the first font, but if it can't, it tries the second and so on.");
		rawQuestions.add("1399~CSS~What values can the position CSS property have?~fixed // A fixed position in the browser window<br>relative // Relative to its normal position<br>absolute // Relative to its first parent<br>static // This is the default. As specified by the order it appears in the document.");
		rawQuestions.add("1400~CSS~What are some ways to rearrange elements to a different location than specified in the document?~Negative margins can move an element. Once a negative margin goes past the edge of a page, it then starts above and to the right (negative left margin), or below and to the left (negative right margin).<br><br>right, left, top, and bottom css attributes can also be used to move elements, although a 'position: relative' is needed.<br><br>If everything has a fixed witdh, positive margins can create space in the document, and then negative margins of other elements can cause those elements to fill in that newly emptied space. That effectively rearranges elements.");
		rawQuestions.add("1401~CSS~Should you use a space between a dimension and it's dimension type (12px vs 12&nbsp;px)?~No.");
		rawQuestions.add("1402~CSS~How do you control letter and line spacing?~letter-spacing: 10px;<br>word-spacing: 10px;<br>line-height: px-%-em-or-float;");
		rawQuestions.add("1403~CSS~If margins from two separate elements are next to each other, what happens?~The browser uses the largest of the two margins");
		rawQuestions.add("1404~CSS~What use do negative margins have?~The can move elements");
		rawQuestions.add("1405~CSS~What happens to margins on inline elements?~The top and bottom margins are not taken into account");
		rawQuestions.add("1406~CSS~What is the difference between inline and block display?~Block styles create a break before and after the element.i Default block elements are 'p' and 'div' tags.<br><br>Inline styles render on the same line as elements that are next to them. Default inline elements are 'img' and 'a' tags.");
		rawQuestions.add("1407~CSS~What can you do if the content of a tag is larger than its tag's size?~Use the overflow css property. Its values are:<br>visible // Default, displays content ouside of the tag's dimensions<br>scroll,autoscroll // Adds scroll bars<br>hidden // Hides content that goes past the tag's dimensions");
		rawQuestions.add("1408~CSS~What happens to a background color or border when an element next to it floats?~The background color and border are rendered underneath the floated content.<br>You can stop this by setting an 'overflow: hidden' on the float");
		rawQuestions.add("1409~CSS~How do you keep elements from wrapping around a float?~Use the 'clear' css property. Its values are:<br>left // Drops below left floated elements<br>right // Drops below right floated elements<br>both // Drops below left and right floated elements");
		rawQuestions.add("1410~CSS~What is z-index?~It allows an element to be in front of or behind another element. High z-indexes are closer to the reader, lower ones are further back.");
		rawQuestions.add("1411~CSS~How do you define a print style?~Use media='print' in a 'link' tag<br>@media print{} to define styles<br>or<br>@import url(someFile.css) print;");
		rawQuestions.add("1412~CSS~What is the CSS content property?~It can be used with :before or :after selectors to supply");
		rawQuestions.add("1413~CSS~In CSS3, how can you use a font the client does not have?~@font-face { font-family: someFont; src: url('some.orf.or.ttf.file'); }");
		rawQuestions.add("1414~CSS~What are some CSS3 selectors?~:first-child<br>:last-child<br>:nth-child(odd, even, or some math experssion like 3n+1)<br>:first-of-type<br>:last-of-type<br>:nth-of-type");
		rawQuestions.add("1415~HTML5~How can you detect if a certain HTML5 tag works in a browser?~if (!!document.createElement('someElement').someMethodOnTheElement)<br><br>ex: if (!!document.createElement('video').canPlayType)<br>ex: if (!!document.createElement('canvas').getContext)");
		rawQuestions.add("1416~HTML5~How do you draw a single pixel?~You have to use a datamap or rectangle. It's a choice you need to make based speed. Usually, the rect method is faster.<br><br>Rect method:<br>function plotPixel(x,y,r,g,b,ctx) {<br>&nbsp;&nbsp;var c=document.getElementById('myCanvas');<br>&nbsp;&nbsp;var ctx=c.getContext('2d');<br>&nbsp;&nbsp;ctx.fillStyle = 'rgba('+r+','+g+','+b+','+(255)+')';<br>&nbsp;&nbsp;ctx.fillRect( x, y, 1, 1 );<br>}<br><br>DataMap method:<br>function plotPixel(x,y,r,g,b) {<br>&nbsp;&nbsp;var id = myContext.createImageData(1,1);<br>&nbsp;&nbsp;var d  = id.data;<br>&nbsp;&nbsp;d[0] = r;<br>&nbsp;&nbsp;d[1] = g;<br>&nbsp;&nbsp;d[2] = b;<br>&nbsp;&nbsp;d[3] = 255;<br>&nbsp;&nbsp;myContext.putImageData( id, x, y );<br>}");
		rawQuestions.add("1417~HTML5~How do you use HTML5 local storage?~localStorage.setItem(key, value);<br>localStorage.getItem(key);<br>localStorage.someProperty = something;<br>something = localStorage.someProperty;<br><br>Session storage (erased when the window is closed) is used the same way, with 'sessionStorage' replacing 'localStorage'");
		rawQuestions.add("1418~HTML5~What are some HTML5 inputs tags?~color<br>date<br>datetime<br>datetime-local<br>email<br>month<br>number<br>range<br>search<br>tel<br>time<br>url<br>week");
		rawQuestions.add("1419~HTML5~What are some HTML5 tags?~canvas<br>video<br>audio<br>source<br>embed<br>track<br>datalist<br>keygen<br>output<br>article<br>aside<br>bdi<br>command<br>details<br>dialog<br>summary<br>figure<br>figcaption<br>footer<br>header<br>mark<br>meter<br>nav<br>progress<br>ruby<br>rt<br>rp<br>section<br>time<br>wbr");
		rawQuestions.add("1420~HTML5~What tags are supposed to be removed in HTML5?~acronym<br>applet<br>basefont<br>bit<br>center<br>dir<br>font<br>frame<br>frameset<br>noframes<br>strike<br>tt");
		rawQuestions.add("1421~HTML5~What are some HTML5 canvas context methods?~scale()<br>rotate()<br>translate()<br>transform()<br>strokeText()<br>fillText()<br>beginPath()<br>arc()<br>lineTo()<br>stroke()<br>fillRect()");
		rawQuestions.add("1422~Javascript~What id the difference between apply and call?~apply takes an array as a second parameter to give parameters.<br>call takes as second..nth parameters actual parameters.<br>ex: a.apply(this, [1,2,3]);<br>vs<br>a.call(this, 1, 2, 3);");
		rawQuestions.add("1423~Javascript~What is a self invoked function?~It is a function that is invoked right after it is declared, and can be used for getting a new scope.<br>ex: (function () {<br>&nbsp;&nbsp;var x=1;<br>})();");
		rawQuestions.add("1424~Javascript~What does someObject.prototype = new Something(); do?~It sets up someObject to inherit from 'Something'.<br>The constructor for 'Something' is run when this is executed.");
		return rawQuestions;
	}
		
}
